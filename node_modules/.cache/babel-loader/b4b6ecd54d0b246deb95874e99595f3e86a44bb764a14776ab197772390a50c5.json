{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\IndiaCluster.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndiaCluster = () => {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const allLabels = [];\n  let data = [{\n    title: \"One\",\n    value: 1,\n    color: \"#FFC074\"\n  }, {\n    title: \"Two\",\n    value: 2,\n    color: \"#A2D2FF\"\n  }, {\n    title: \"Three\",\n    value: 3,\n    color: \"#FF9292\"\n  }];\n  useEffect(() => {\n    axios.get('./india-clusters.json').then(res => setMyData(res.data));\n  }, [0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clusters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        allLabels.push(labels);\n        for (let i = 0; i < documents.length; i++) {\n          let title = documents[i].title;\n          let content = documents[i].content;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#DAE5D0\"\n      },\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        animate: true,\n        animationDuration: 40,\n        animationEasing: \"ease-in\",\n        center: [50, 50],\n        data: allLabels,\n        lineWidth: 15,\n        lengthAngle: 360,\n        paddingAngle: 0,\n        radius: 50,\n        rounded: true,\n        startAngle: 0,\n        viewBoxSize: [100, 100],\n        labelStyle: {\n          fontSize: \"6px\",\n          fontColor: \"FFFFFA\",\n          fontWeight: \"500\",\n          fontFamily: \"monospace\"\n        },\n        label: allLabels,\n        labelPosition: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(IndiaCluster, \"t4qxf8XXuxXukv7LfJC+zXl5Zcc=\");\n_c = IndiaCluster;\nexport default IndiaCluster;\n\n/*\r\nif(labels === 'India'){\r\n    for(let i=0;i<documents.length;i++){\r\n        let title = documents[i].title\r\n        let content = documents[i].content\r\n    }\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"IndiaCluster\");","map":{"version":3,"names":["axios","useState","useEffect","PieChart","jsxDEV","_jsxDEV","IndiaCluster","_s","myData","setMyData","allLabels","data","title","value","color","get","then","res","className","children","map","post","labels","documents","push","i","length","content","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","animate","animationDuration","animationEasing","center","lineWidth","lengthAngle","paddingAngle","radius","rounded","startAngle","viewBoxSize","labelStyle","fontSize","fontColor","fontWeight","fontFamily","label","labelPosition","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/IndiaCluster.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nconst IndiaCluster = () => {\r\n    const [myData, setMyData] = useState([])\r\n    const allLabels = []\r\n\r\n    let data = [\r\n        { title: \"One\", value: 1, color: \"#FFC074\" },\r\n        { title: \"Two\", value: 2, color: \"#A2D2FF\" },\r\n        { title: \"Three\", value: 3, color: \"#FF9292\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        axios.get('./india-clusters.json')\r\n          .then((res) => setMyData(res.data)\r\n        )\r\n    }, [0]);\r\n\r\n    return (  \r\n        <div className=\"clusters\">\r\n            <div>\r\n                {\r\n                    myData.map((post) => {\r\n                        let { labels,documents} = post\r\n                        \r\n                        labels = labels[0]\r\n                        allLabels.push(labels)\r\n\r\n                        for(let i=0;i<documents.length;i++){\r\n                            let title = documents[i].title\r\n                            let content = documents[i].content\r\n                        }\r\n                    })\r\n                }\r\n            </div> \r\n            <div style={{backgroundColor:\"#DAE5D0\"}} className=\"App\">\r\n                <PieChart\r\n                    animate\r\n                    animationDuration={40}\r\n                    animationEasing=\"ease-in\"\r\n                    center={[50, 50]}\r\n                    data={allLabels}\r\n                    lineWidth={15}\r\n                    lengthAngle={360}\r\n                    paddingAngle={0}\r\n                    radius={50}\r\n                    rounded\r\n                    startAngle={0}\r\n                    viewBoxSize={[100, 100]}\r\n                    labelStyle={{\r\n                        fontSize: \"6px\",\r\n                        fontColor: \"FFFFFA\",\r\n                        fontWeight: \"500\",\r\n                        fontFamily: \"monospace\"\r\n                    }}\r\n                    label={allLabels}\r\n                    labelPosition={70}\r\n                />\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaCluster\r\n\r\n/*\r\nif(labels === 'India'){\r\n    for(let i=0;i<documents.length;i++){\r\n        let title = documents[i].title\r\n        let content = documents[i].content\r\n    }\r\n}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}