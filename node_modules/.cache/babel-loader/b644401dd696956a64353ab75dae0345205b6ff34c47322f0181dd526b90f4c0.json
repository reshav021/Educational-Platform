{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\DisplayVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport ProgressBar from \"./Progressbar/ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayVideo(props) {\n  _s();\n  const chunks = props.chunks;\n  //const currentTime = props.currentTime\n  const duration = props.duration;\n  const videoFileName = props.videoFileName;\n  const videoRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const handleTimeUpdate = newTime => {\n    videoRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const toggleFullScreen = async () => {\n    const container = document.getElementById(\"video-chat-container\");\n    const fullscreenApi = container.requestFullscreen || container.webkitRequestFullScreen || container.mozRequestFullScreen || container.msRequestFullscreen;\n    if (!document.fullscreenElement) {\n      fullscreenApi.call(container);\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"p-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      id: \"video-chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-7 col-md-9 mb-lg-0 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"ratio ratio-16x9\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              id: \"video-player\",\n              class: \"rounded rounded-3 bg-dark\",\n              src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n              controls: true,\n              playsinline: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              src: videoFileName,\n              onTimeUpdate: () => setCurrentTime(videoRef.current.currentTime),\n              height: 360,\n              controls: true,\n              id: \"video-player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"top-overlay\",\n            class: \"w-100 p-2 d-flex align-items-center justify-content-between\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                id: \"fullscreen-toggle-btn\",\n                role: \"button\",\n                class: \"bi bi-fullscreen text-white text-outline\",\n                onClick: toggleFullScreen,\n                children: [\"FullScreen\", /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  className: \"progressBar\",\n                  currentTime: currentTime,\n                  duration: duration,\n                  onTimeUpdate: handleTimeUpdate,\n                  chunks: chunks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayVideo, \"5tq5esC6DMM2Jk65xELAke+klCk=\");\n_c = DisplayVideo;\nexport default DisplayVideo;\n\n/*\r\nimport React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  const fakeChat = () => {\r\n    const input = document.getElementById(\"chat-input\")\r\n    const chat = document.getElementById(\"chat\")\r\n    chat.innerHTML += `<div><b>Chat User</b>: ${input.value}</div>`\r\n    input.value = \"\"\r\n    input.focus()\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"bottom-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                Hello\r\n                <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-5 col-md-3 mb-lg-0 mb-3\">\r\n          <div id=\"chat-container\" class=\"vstack\">\r\n            <div\r\n              id=\"chat\"\r\n              class=\"rounded border border-secondary flex-grow-1 mb-3 p-3\"\r\n            ></div>\r\n            <div id=\"chat-input-container\" class=\"flex-grow input-group\">\r\n              <input\r\n                id=\"chat-input\"\r\n                class=\"form-control\"\r\n                placeholder=\"Message\"\r\n                maxlength=\"500\"\r\n                type=\"text\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id=\"submit-chat\"\r\n                class=\"btn btn-outline-secondary\"\r\n                onClick={fakeChat}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"DisplayVideo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ProgressBar","jsxDEV","_jsxDEV","DisplayVideo","props","_s","chunks","duration","videoFileName","videoRef","currentTime","setCurrentTime","handleTimeUpdate","newTime","current","toggleFullScreen","container","document","getElementById","fullscreenApi","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","fullscreenElement","call","exitFullscreen","class","children","id","src","controls","playsinline","muted","fileName","_jsxFileName","lineNumber","columnNumber","ref","onTimeUpdate","height","role","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/DisplayVideo.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  const fakeChat = () => {\r\n    const input = document.getElementById(\"chat-input\")\r\n    const chat = document.getElementById(\"chat\")\r\n    chat.innerHTML += `<div><b>Chat User</b>: ${input.value}</div>`\r\n    input.value = \"\"\r\n    input.focus()\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"bottom-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                Hello\r\n                <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-5 col-md-3 mb-lg-0 mb-3\">\r\n          <div id=\"chat-container\" class=\"vstack\">\r\n            <div\r\n              id=\"chat\"\r\n              class=\"rounded border border-secondary flex-grow-1 mb-3 p-3\"\r\n            ></div>\r\n            <div id=\"chat-input-container\" class=\"flex-grow input-group\">\r\n              <input\r\n                id=\"chat-input\"\r\n                class=\"form-control\"\r\n                placeholder=\"Message\"\r\n                maxlength=\"500\"\r\n                type=\"text\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id=\"submit-chat\"\r\n                class=\"btn btn-outline-secondary\"\r\n                onClick={fakeChat}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}