{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\VideoContent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoContent = props => {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const [isError, setIsError] = useState(\"\");\n  const searchData = props.searchData;\n  const faculty = props.faculty;\n  const domain = props.domain;\n  const getMyPostData = async () => {\n    try {\n      const res = await axios.get(\"/posts\");\n      setMyData(res.data);\n    } catch (error) {\n      setIsError(error.message);\n    }\n  };\n  useEffect(() => {\n    axios.get('./data.json').then(res => setMyData(res.data));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: myData.map(post => {\n        let {\n          title,\n          duration,\n          faculty,\n          transcript\n        } = post;\n        let i = 0,\n          count = 0;\n        const maxSentences = 5;\n        let newTranscript = '';\n        while (i < transcript.length) {\n          if (count == maxSentences) break;\n          if (transcript[i] == '.') count++;\n          newTranscript = newTranscript + transcript[i++];\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Duration: \", duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Faculty: \", faculty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: newTranscript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"download-btn\",\n              children: \"Download transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(VideoContent, \"tEIbWI9AB9cIuwUvqzFwXcE7dUA=\");\n_c = VideoContent;\nexport default VideoContent;\nvar _c;\n$RefreshReg$(_c, \"VideoContent\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoContent","props","_s","myData","setMyData","isError","setIsError","searchData","faculty","domain","getMyPostData","res","get","data","error","message","then","children","className","map","post","title","duration","transcript","i","count","maxSentences","newTranscript","length","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/VideoContent.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst VideoContent = (props) => {\r\n  const [myData, setMyData] = useState([])\r\n  const [isError, setIsError] = useState(\"\")\r\n\r\n  const searchData = props.searchData;\r\n  const faculty = props.faculty;\r\n  const domain = props.domain;\r\n\r\n  const getMyPostData = async () => {\r\n    try {\r\n      const res = await axios.get(\"/posts\")\r\n      setMyData(res.data)\r\n    } catch (error) {\r\n      setIsError(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('./data.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video-grid\">\r\n        {\r\n          myData.map((post) => {\r\n            let {title, duration, faculty, transcript} = post;\r\n\r\n            let i=0, count=0\r\n            const maxSentences = 5\r\n            let newTranscript=''\r\n\r\n            while(i < transcript.length){\r\n              if(count == maxSentences)\r\n                break\r\n              if(transcript[i] == '.')\r\n                count++;\r\n              newTranscript = newTranscript + transcript[i++];\r\n            }\r\n\r\n            return (\r\n              <div className=\"videoContent\">\r\n                <p>Title: {title}</p>\r\n                <p>Duration: {duration}</p>\r\n                <p>Faculty: {faculty}</p>\r\n                <p>{newTranscript}</p>\r\n\r\n                <div className=\"btn\">\r\n                  <button id='download-btn'>Download transcript</button>\r\n                  \r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }   \r\n      </div>\r\n    </>    \r\n  )\r\n}\r\n\r\nexport default VideoContent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}