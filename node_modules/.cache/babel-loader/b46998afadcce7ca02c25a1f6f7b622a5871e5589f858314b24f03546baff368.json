{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\DisplayVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayVideo() {\n  _s();\n  const [showOverlay, setShowOverlay] = useState(false);\n  useEffect(() => {\n    const video = document.getElementById(\"v\");\n    const overlay = document.getElementById(\"overlay\");\n\n    // Show overlay between 5 and 10 seconds\n    const timeUpdateHandler = () => {\n      if (video.currentTime >= 2 && video.currentTime < 10) {\n        setShowOverlay(true);\n      } else {\n        setShowOverlay(false);\n      }\n    };\n    video.addEventListener(\"timeupdate\", timeUpdateHandler);\n\n    // Update overlay z-index when entering or exiting full-screen mode\n    const fullScreenChangeHandler = () => {\n      const isFullScreen = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement;\n      overlay.style.zIndex = isFullScreen ? \"2147483648\" : \"1\";\n    };\n    document.addEventListener(\"fullscreenchange\", fullScreenChangeHandler);\n    document.addEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler);\n    document.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\n    return () => {\n      // Remove event listeners when component unmounts\n      video.removeEventListener(\"timeupdate\", timeUpdateHandler);\n      document.removeEventListener(\"fullscreenchange\", fullScreenChangeHandler);\n      document.removeEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler);\n      document.removeEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\n    };\n  }, []);\n  const videoRef = useRef(null);\n  const handleFullScreen = () => {\n    if (videoRef.current) {\n      videoRef.current.requestFullscreen();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"v\",\n        ref: videoRef,\n        controls: true,\n        height: \"200px\",\n        allowfullscreen: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          id: \"mp4\",\n          src: \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"overlay\",\n        style: {\n          visibility: showOverlay ? \"visible\" : \"hidden\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"fullScreen\",\n          onClick: handleFullScreen,\n          children: \"FullScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayVideo, \"qhqNnlWRTImMBKcE/QZ3EKKXu30=\");\n_c = DisplayVideo;\nexport default DisplayVideo;\nvar _c;\n$RefreshReg$(_c, \"DisplayVideo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","DisplayVideo","_s","showOverlay","setShowOverlay","video","document","getElementById","overlay","timeUpdateHandler","currentTime","addEventListener","fullScreenChangeHandler","isFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","style","zIndex","removeEventListener","videoRef","handleFullScreen","current","requestFullscreen","className","children","id","ref","controls","height","allowfullscreen","src","type","fileName","_jsxFileName","lineNumber","columnNumber","visibility","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/DisplayVideo.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction DisplayVideo() {\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const video = document.getElementById(\"v\");\r\n    const overlay = document.getElementById(\"overlay\");\r\n\r\n    // Show overlay between 5 and 10 seconds\r\n    const timeUpdateHandler = () => {\r\n      if (video.currentTime >= 2 && video.currentTime < 10) {\r\n        setShowOverlay(true);\r\n      } else {\r\n        setShowOverlay(false);\r\n      }\r\n    };\r\n    video.addEventListener(\"timeupdate\", timeUpdateHandler);\r\n\r\n    // Update overlay z-index when entering or exiting full-screen mode\r\n    const fullScreenChangeHandler = () => {\r\n      const isFullScreen =\r\n        document.fullscreenElement ||\r\n        document.webkitFullscreenElement ||\r\n        document.mozFullScreenElement;\r\n      overlay.style.zIndex = isFullScreen ? \"2147483648\" : \"1\";\r\n    };\r\n    document.addEventListener(\"fullscreenchange\", fullScreenChangeHandler);\r\n    document.addEventListener(\r\n      \"webkitfullscreenchange\",\r\n      fullScreenChangeHandler\r\n    );\r\n    document.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\r\n\r\n    return () => {\r\n      // Remove event listeners when component unmounts\r\n      video.removeEventListener(\"timeupdate\", timeUpdateHandler);\r\n      document.removeEventListener(\"fullscreenchange\", fullScreenChangeHandler);\r\n      document.removeEventListener(\r\n        \"webkitfullscreenchange\",\r\n        fullScreenChangeHandler\r\n      );\r\n      document.removeEventListener(\r\n        \"mozfullscreenchange\",\r\n        fullScreenChangeHandler\r\n      );\r\n    };\r\n  }, []);\r\n  const videoRef = useRef(null);\r\n\r\n  const handleFullScreen = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.requestFullscreen();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"video-container\">\r\n        <video id=\"v\" ref={videoRef} controls height=\"200px\" allowfullscreen>\r\n          <source\r\n            id=\"mp4\"\r\n            src=\"http://media.w3.org/2010/05/sintel/trailer.mp4\"\r\n            type=\"video/mp4\"\r\n          />\r\n        </video>\r\n\r\n        <div\r\n          id=\"overlay\"\r\n          style={{ visibility: showOverlay ? \"visible\" : \"hidden\" }}\r\n        >\r\n          <button id=\"fullScreen\" onClick={handleFullScreen}>\r\n            FullScreen\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayVideo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}