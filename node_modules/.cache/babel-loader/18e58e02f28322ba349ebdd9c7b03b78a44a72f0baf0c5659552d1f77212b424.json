{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\India.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst India = () => {\n  _s();\n  const [data, setMyData] = useState([]);\n  useEffect(() => {\n    axios.get('./india-clusters.json').then(res => setMyData(res.data));\n  }, [0]);\n  const titles = {};\n  data.forEach(item => {\n    item.documents.forEach(doc => {\n      if (!titles[doc.title]) {\n        titles[doc.title] = {\n          count: 1\n        };\n      } else {\n        titles[doc.title].count++;\n      }\n    });\n  });\n  const chartData = Object.keys(titles).map(title => {\n    return {\n      labels: [title],\n      datasets: [{\n        data: [titles[title].count],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\"]\n      }]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chartData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.labels[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(India, \"jgu45jU5n4WRA+QglclFYrLnflo=\");\n_c = India;\nexport default India;\n\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/\nvar _c;\n$RefreshReg$(_c, \"India\");","map":{"version":3,"names":["axios","React","useState","useEffect","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","India","_s","data","setMyData","get","then","res","titles","forEach","item","documents","doc","title","count","chartData","Object","keys","map","labels","datasets","backgroundColor","hoverBackgroundColor","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/India.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nconst India = () => {\r\n    const [data, setMyData] = useState([])\r\n\r\n    useEffect(() => {\r\n      axios.get('./india-clusters.json')\r\n        .then((res) => setMyData(res.data)\r\n      )\r\n    }, [0]);\r\n\r\n    const titles = {};\r\n        data.forEach((item) => {\r\n        item.documents.forEach((doc) => {\r\n            if (!titles[doc.title]) {\r\n            titles[doc.title] = { count: 1 };\r\n            } else {\r\n            titles[doc.title].count++;\r\n            }\r\n        });\r\n        });\r\n\r\n        const chartData = Object.keys(titles).map((title) => {\r\n            return {\r\n              labels: [title],\r\n              datasets: [\r\n                {\r\n                  data: [titles[title].count],\r\n                  backgroundColor: [\"#FF6384\",\"#36A2EB\",\"#FFCE56\",\"#1abc9c\",\"#3498db\",\"#9b59b6\",\"#34495e\",\"#f1c40f\",\"#e74c3c\",\"#95a5a6\",\"#2ecc71\",\"#8e44ad\",\"#d35400\",\"#7f8c8d\",\"#27ae60\"],\r\n                  hoverBackgroundColor: [\"#FF6384\",\"#36A2EB\",\"#FFCE56\",\"#1abc9c\",\"#3498db\",\"#9b59b6\",\"#34495e\",\"#f1c40f\",\"#e74c3c\",\"#95a5a6\",\"#2ecc71\",\"#8e44ad\",\"#d35400\",\"#7f8c8d\",\"#27ae60\"],\r\n                },\r\n              ],\r\n            };\r\n          });\r\n          \r\n\r\n    \r\n\r\n          return (\r\n            <>\r\n              {chartData.map((data, index) => (\r\n                <div key={index}>\r\n                  <h3>{data.labels[0]}</h3>\r\n                  <Pie data={data} />\r\n                </div>\r\n              ))}\r\n            </>\r\n          );\r\n};\r\n\r\nexport default India;\r\n\r\n\r\n\r\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}