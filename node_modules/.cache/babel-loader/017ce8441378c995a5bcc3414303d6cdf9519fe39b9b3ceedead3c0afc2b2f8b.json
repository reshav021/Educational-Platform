{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy2\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\PieChart\\\\List.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport VideoDetails from \"../VideoDetails\";\nimport ListChartVideoProgress from './ListChartVideoProgress';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  _s();\n  let searchData = props.searchData;\n  const [myData, setMyData] = useState([]);\n  const [myAlllabel, setAllLabels] = useState(true);\n  const [mylabel, setLabels] = useState(null);\n  const [myallData, setmyallData] = useState([]);\n  let myDataLength,\n    display = false;\n  let jsonPathCluster,\n    jsonPath,\n    labelCount = 0,\n    allLabelCount = 0;\n  let [selectedTopic, setSelectedTopic] = useState(null);\n  let uniqueId = Math.floor(Math.random() * 100) + 1;\n  if (\"INDIA\".includes(searchData)) {\n    jsonPathCluster = \"./india-cluster.json\";\n    jsonPath = './india.json';\n  } else if (\"PHYSICS\".includes(searchData)) {\n    jsonPathCluster = \"./physics-cluster.json\";\n    jsonPath = './physics.json';\n  } else if (\"LAW\".includes(searchData)) {\n    jsonPathCluster = \"./law-cluster.json\";\n    jsonPath = './law.json';\n  } else {\n    myDataLength = 0; // If that keyword doesn't exist\n  }\n\n  useEffect(() => {\n    axios.get(jsonPathCluster).then(res => setMyData(res.data));\n  }, [searchData]);\n  useEffect(() => {\n    axios.get(jsonPath).then(res => setmyallData(res.data));\n  }, [searchData]);\n  const [activeButton, setActiveButton] = useState(null);\n  let [facultySelected, setFaculty] = useState('');\n  let [subjectSelected, setSubject] = useState('');\n  let allFacultyName = [],\n    allSubjects = [];\n  let [count, setCount] = useState(0);\n\n  // Set the value of the label like India & Bengal\n  const handleListClick = (event, labels, documents) => {\n    setCount(1);\n    setFaculty('');\n    setSubject('');\n    setSelectedTopic(labels);\n    var currentButton = event.target;\n    currentButton.style.backgroundColor = \"grey\";\n    if (activeButton && activeButton !== currentButton) {\n      activeButton.style.backgroundColor = \"\";\n      activeButton.style.border = \"\";\n      activeButton.style.height = \"\";\n      activeButton.style.width = \"\";\n    }\n    setActiveButton(currentButton);\n    setAllLabels(false);\n    setLabels(labels);\n  };\n  const closeTranscript = () => {\n    document.querySelector('#displayTranscript').style.display = 'none';\n  };\n  const closeFilterBtn = () => {\n    document.querySelector('#displayFilter').style.display = 'none';\n  };\n\n  // Displaying the Description/Audio_Transcript of the video using a popover\n  const renderDescriptionOverlay = content => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"top\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayTranscript`,\n        style: {\n          height: \"260px\",\n          width: \"252px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeTranscript\",\n            onClick: closeTranscript.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"250px\",\n            overflowX: \"hidden\"\n          },\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"descriptionBtn\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n\n  //Remove duplicate videos based on title\n  const displayedTitles = [];\n\n  // Display the video, watch video button and description\n  const displayContent = (title, content, transcript, videoFileName) => {\n    if (!displayedTitles.includes(title)) {\n      // Check if title already displayed/exist don't show that video\n      count++;\n      displayedTitles.push(title);\n\n      // <video src={videoFileName} controls height=\"360px\" width=\"100%\" id='video-player'></video>\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displaylistContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"list-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListChartVideoProgress, {\n          myTitle: title,\n          myVideoFileName: videoFileName,\n          showDiv: showDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"view-VideoDetails\",\n          onClick: () => handleshowDiv(title, videoFileName),\n          children: \"Watch Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), renderDescriptionOverlay(content)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const [showDiv, setShowDiv] = useState(false);\n  const [myTitle, setTitle] = useState();\n  const [myVideoFileName, setVideoFileName] = useState();\n\n  // Set value for title & videoFileName for Watch Video \n  const handleshowDiv = (title, videoFileName) => {\n    setShowDiv(true);\n    setTitle(title);\n    setVideoFileName(videoFileName);\n  };\n  const handlehideDiv = () => {\n    setShowDiv(false);\n    setTitle();\n    setVideoFileName();\n  };\n\n  // Set the faculty which is selected in search input of Faculty\n  const onFacultyChange = () => {\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\n    if (selectedTeacher === '') setCount(1);else setCount(0);\n    if (selectedTeacher === \"Default\") selectedTeacher = \"\";\n    setFaculty(selectedTeacher);\n  };\n\n  // Set the subject which is selected in search input of Subject\n  const onSubjectChange = () => {\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\n    if (selectedSubject === '') setCount(1);else setCount(0);\n    if (selectedSubject === \"Default\") selectedSubject = \"\";\n    setSubject(selectedSubject);\n  };\n  const [filterBtn, setfilterBtn] = useState(false);\n  const handleFilterBtn = () => {\n    setfilterBtn(true);\n  };\n\n  // Used to reset the filters\n  const handleResetFilter = () => {\n    document.getElementById(\"inputValFaculty\").value = '';\n    document.getElementById(\"inputValSubject\").value = '';\n    setFaculty('');\n    setSubject('');\n    setCount(1);\n  };\n  useEffect(() => {\n    if (searchData !== '') {\n      setFaculty('');\n      setSubject('');\n    }\n  }, [searchData]);\n\n  // Display only 5 sentences of a audio_transcript\n  const extractFiveSentences = inputText => {\n    const sentences = inputText.split('.');\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\n    if (validSentences.length >= 5) {\n      return validSentences.slice(0, 5).join('. ') + '.';\n    } else {\n      return validSentences.join('. ') + '.';\n    }\n  };\n\n  // Display the filters\n  const renderFilterOverlay = () => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"bottom\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayFilter`,\n        style: {\n          height: \"260px\",\n          width: \"230px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          style: {\n            display: \"flex\"\n          },\n          children: [\"Filter\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"resetBtn\",\n            onClick: handleResetFilter,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeFilterBtn\",\n            onClick: closeFilterBtn.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"242.5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedValue\",\n              children: [facultySelected, \" \", subjectSelected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"facultyFilter\",\n              children: [\"Faculty\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValFaculty\",\n                list: \"select-faculty\",\n                placeholder: \"Search for faculty\",\n                onChange: onFacultyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-faculty\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for faculty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), [...new Set(allFacultyName)].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"subjectFilter\",\n              children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValSubject\",\n                list: \"select-subject\",\n                placeholder: \"Search for subject\",\n                onChange: onSubjectChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-subject\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), [...new Set(allSubjects)].map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: [\" \", option, \" \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 30\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"filterBtn\",\n        onClick: handleFilterBtn,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Adding condition for the filters\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\n    return facultySelected === faculty && subjectSelected === domain || facultySelected === faculty && subjectSelected === '' || facultySelected === '' && subjectSelected === domain || facultySelected === '' && subjectSelected === '';\n  };\n  let allLabelsList = [];\n  if (myDataLength === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"noResults\",\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayList\",\n      children: [showDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"closeBtn\",\n          onClick: handlehideDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VideoDetails, {\n          myTitle: myTitle,\n          myVideoFileName: myVideoFileName,\n          showDiv: showDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"listView\",\n        children: [myallData.map(post => {\n          let {\n            title,\n            summary,\n            faculty,\n            domain\n          } = post;\n          allSubjects.push(domain);\n          allFacultyName.push(faculty);\n        }), myData.map(post => {\n          let {\n            labels,\n            documents\n          } = post;\n          labels = labels[0];\n          for (let i = 0; i < documents.length; i++) {\n            if (mylabel === labels) labelCount++;\n            allLabelCount++;\n          }\n          documents.map((doc, i) => {\n            let domain = doc.domain;\n            let faculty = doc.faculty;\n\n            //allSubjects.push(domain)\n            //allFacultyName.push(faculty)\n          });\n\n          {/* Display the label buttons, here labels are India & Bengal */}\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayLabelList\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"list-btn\",\n              onClick: event => handleListClick(event, labels, documents),\n              children: labels\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), myAlllabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-content\",\n        id: \"list-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"labels-Data\",\n          children: myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            return documents.map((doc, i) => {\n              let content;\n              let title = doc.title;\n              //let content = doc.content\n              //let domain = doc.domain\n              //let faculty = doc.faculty\n\n              let transcript = doc.transcript;\n              let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n              //let videoFileName = './' + doc.title + '/' + doc.title + '.mp4'\n              //let videoFileName = './' + title + '/' + title + '.mp4'\n\n              let facultyName, domainName;\n              {\n                myallData.map(post => {\n                  let {\n                    title,\n                    summary,\n                    faculty,\n                    domain\n                  } = post;\n                  summary = summary[0].toUpperCase() + summary.slice(1);\n                  if (doc.title === title) {\n                    content = extractFiveSentences(summary);\n                    facultyName = faculty;\n                    domainName = domain;\n                  }\n                });\n              }\n              let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n              allLabelCount = count;\n              display = true;\n              if (filters) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 29\n                }, this);\n              }\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"allResultstext\",\n            children: [\"All results: \", allLabelCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), renderFilterOverlay()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), mylabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-content\",\n        id: \"list-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"labels-Data\",\n          children: myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            if (mylabel === labels) {\n              return documents.map((doc, i) => {\n                let title = doc.title;\n                allLabelsList.push(title);\n                //let content = doc.content\n                let content;\n                //let domain = doc.domain\n                //let faculty = doc.faculty\n                let transcript = doc.transcript;\n                let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n                let facultyName, domainName;\n                {\n                  myallData.map(post => {\n                    let {\n                      title,\n                      summary,\n                      faculty,\n                      domain\n                    } = post;\n                    let newTitle = title;\n                    summary = summary[0].toUpperCase() + summary.slice(1);\n                    if (doc.title === newTitle) {\n                      content = extractFiveSentences(summary);\n                      facultyName = faculty;\n                      domainName = domain;\n                    }\n                  });\n                }\n                let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n                labelCount = count;\n                display = true;\n                if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 31\n                }, this);\n              });\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"allResultstext\",\n            children: [\"All results for \", selectedTopic, \": \", labelCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this), renderFilterOverlay()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(List, \"o5TUvL6hVHwBQMpXoHyCPkXBceA=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["axios","React","useState","useEffect","VideoDetails","ListChartVideoProgress","OverlayTrigger","Popover","jsxDEV","_jsxDEV","List","props","_s","searchData","myData","setMyData","myAlllabel","setAllLabels","mylabel","setLabels","myallData","setmyallData","myDataLength","display","jsonPathCluster","jsonPath","labelCount","allLabelCount","selectedTopic","setSelectedTopic","uniqueId","Math","floor","random","includes","get","then","res","data","activeButton","setActiveButton","facultySelected","setFaculty","subjectSelected","setSubject","allFacultyName","allSubjects","count","setCount","handleListClick","event","labels","documents","currentButton","target","style","backgroundColor","border","height","width","closeTranscript","document","querySelector","closeFilterBtn","renderDescriptionOverlay","content","trigger","rootClose","placement","overlay","id","zIndex","children","Header","as","onClick","bind","class","fileName","_jsxFileName","lineNumber","columnNumber","Body","overflowX","displayedTitles","displayContent","title","transcript","videoFileName","push","className","myTitle","myVideoFileName","showDiv","handleshowDiv","setShowDiv","setTitle","setVideoFileName","handlehideDiv","onFacultyChange","selectedTeacher","getElementById","value","onSubjectChange","selectedSubject","filterBtn","setfilterBtn","handleFilterBtn","handleResetFilter","extractFiveSentences","inputText","sentences","split","validSentences","filter","sentence","trim","length","slice","join","renderFilterOverlay","list","placeholder","onChange","Set","map","option","index","addfilter","faculty","domain","allLabelsList","post","summary","i","doc","facultyName","domainName","toUpperCase","filters","newTitle","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy2/my-app/src/Components/SubComponents/PieChart/List.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport VideoDetails from \"../VideoDetails\"\r\nimport ListChartVideoProgress from './ListChartVideoProgress'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\nfunction List(props) {\r\n  let searchData = props.searchData\r\n\r\n  const [myData, setMyData] = useState([])\r\n  const [myAlllabel, setAllLabels] = useState(true)\r\n  const [mylabel, setLabels] = useState(null)\r\n  const [myallData, setmyallData] = useState([])\r\n\r\n  let myDataLength, display = false\r\n  let jsonPathCluster, jsonPath, labelCount = 0, allLabelCount = 0\r\n  let [selectedTopic, setSelectedTopic] = useState(null)\r\n  let uniqueId = Math.floor(Math.random() * 100) + 1; \r\n\r\n  if (\"INDIA\".includes(searchData)) {\r\n    jsonPathCluster = \"./india-cluster.json\"\r\n    jsonPath = './india.json'\r\n  } \r\n  else if (\"PHYSICS\".includes(searchData)) {\r\n    jsonPathCluster = \"./physics-cluster.json\"\r\n    jsonPath = './physics.json'\r\n  } \r\n  else if (\"LAW\".includes(searchData)) {\r\n    jsonPathCluster = \"./law-cluster.json\"\r\n    jsonPath = './law.json'\r\n  }\r\n  else {\r\n    myDataLength = 0      // If that keyword doesn't exist\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPathCluster).then((res) => setMyData(res.data))\r\n  }, [searchData])\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPath).then((res) => setmyallData(res.data))\r\n  }, [searchData])\r\n\r\n  const [activeButton, setActiveButton] = useState(null);\r\n  let [facultySelected, setFaculty] = useState('');\r\n  let [subjectSelected, setSubject] = useState('');\r\n  \r\n  let allFacultyName = [], allSubjects = [];\r\n  let [count, setCount] = useState(0);\r\n\r\n  // Set the value of the label like India & Bengal\r\n  const handleListClick = (event, labels, documents) => {\r\n    setCount(1)\r\n    setFaculty('')\r\n    setSubject('')\r\n    setSelectedTopic(labels)\r\n\r\n    var currentButton = event.target;\r\n    currentButton.style.backgroundColor = \"grey\";\r\n\r\n    if(activeButton && activeButton !== currentButton) {\r\n      activeButton.style.backgroundColor = \"\";\r\n      activeButton.style.border = \"\";\r\n      activeButton.style.height = \"\"\r\n      activeButton.style.width = \"\"\r\n    }\r\n\r\n    setActiveButton(currentButton);\r\n    setAllLabels(false);\r\n    setLabels(labels);\r\n  };\r\n\r\n  const closeTranscript = () => {\r\n    document.querySelector('#displayTranscript').style.display = 'none'\r\n  }\r\n\r\n  const closeFilterBtn = () => {\r\n    document.querySelector('#displayFilter').style.display = 'none'\r\n  }\r\n\r\n  // Displaying the Description/Audio_Transcript of the video using a popover\r\n  const renderDescriptionOverlay = (content) => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\" rootClose placement=\"top\"\r\n        overlay={\r\n          <Popover id={`displayTranscript`} style={{height:\"260px\",width:\"252px\",zIndex:0}}>\r\n            <Popover.Header as=\"h3\">\r\n              Description\r\n              <button id='closeTranscript' onClick={closeTranscript.bind(this)}><i class=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{height:\"205px\",width:\"250px\", overflowX:\"hidden\"}}>\r\n              {content}\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      > \r\n        <button id='descriptionBtn'>Description</button>\r\n      </OverlayTrigger>\r\n    )\r\n  }\r\n\r\n  //Remove duplicate videos based on title\r\n  const displayedTitles = [];\r\n\r\n  // Display the video, watch video button and description\r\n  const displayContent = (title,content,transcript,videoFileName) => {\r\n    if (!displayedTitles.includes(title)){      // Check if title already displayed/exist don't show that video\r\n      count++;\r\n      displayedTitles.push(title);\r\n      \r\n      // <video src={videoFileName} controls height=\"360px\" width=\"100%\" id='video-player'></video>\r\n\r\n      return (\r\n        <div className=\"displaylistContent\">\r\n          <h4 id=\"list-title\">{title}</h4>\r\n          <ListChartVideoProgress myTitle={title} myVideoFileName={videoFileName} showDiv={showDiv}/>\r\n          <button id='view-VideoDetails' onClick={() => handleshowDiv(title, videoFileName)}>Watch Video</button>\r\n          {renderDescriptionOverlay(content)}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const [showDiv, setShowDiv] = useState(false);\r\n  const [myTitle, setTitle] = useState();\r\n  const [myVideoFileName, setVideoFileName] = useState();\r\n\r\n  // Set value for title & videoFileName for Watch Video \r\n  const handleshowDiv = (title,videoFileName) => {\r\n    setShowDiv(true)\r\n    setTitle(title)\r\n    setVideoFileName(videoFileName)\r\n  };\r\n\r\n  const handlehideDiv = () => {\r\n    setShowDiv(false)\r\n    setTitle()\r\n    setVideoFileName()\r\n  }\r\n\r\n  // Set the faculty which is selected in search input of Faculty\r\n  const onFacultyChange = () => {\r\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\r\n\r\n    if(selectedTeacher === '')\r\n      setCount(1)\r\n    else\r\n      setCount(0)\r\n    \r\n    if(selectedTeacher === \"Default\") \r\n      selectedTeacher = \"\";\r\n    \r\n    setFaculty(selectedTeacher)\r\n  };\r\n\r\n  // Set the subject which is selected in search input of Subject\r\n  const onSubjectChange = () => {\r\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\r\n    if(selectedSubject === '')\r\n      setCount(1)\r\n    else\r\n      setCount(0)\r\n    \r\n    if(selectedSubject === \"Default\") \r\n      selectedSubject = \"\";\r\n    \r\n    setSubject(selectedSubject)\r\n  };\r\n\r\n  const [filterBtn, setfilterBtn] = useState(false)\r\n\r\n  const handleFilterBtn = () => {\r\n    setfilterBtn(true)\r\n  }\r\n\r\n  // Used to reset the filters\r\n  const handleResetFilter = () => {\r\n    document.getElementById(\"inputValFaculty\").value = ''\r\n    document.getElementById(\"inputValSubject\").value = ''\r\n    setFaculty('')\r\n    setSubject('')\r\n    setCount(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(searchData !== '') {\r\n      setFaculty('');\r\n      setSubject('');\r\n    }\r\n  }, [searchData]);\r\n\r\n\r\n  // Display only 5 sentences of a audio_transcript\r\n  const extractFiveSentences = (inputText) => {\r\n    const sentences = inputText.split('.');\r\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\r\n  \r\n    if (validSentences.length >= 5) {\r\n      return validSentences.slice(0, 5).join('. ') + '.';\r\n    } else {\r\n      return validSentences.join('. ') + '.';\r\n    }\r\n  }\r\n\r\n  // Display the filters\r\n  const renderFilterOverlay = () => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        rootClose\r\n        placement=\"bottom\"\r\n        overlay={\r\n          <Popover id={`displayFilter`} style={{ height: \"260px\", width: \"230px\", zIndex: 0 }}>\r\n            <Popover.Header as=\"h3\" style={{display: \"flex\"}}>\r\n              Filter\r\n              <button id=\"resetBtn\" onClick={handleResetFilter}>Reset</button>\r\n              <button id='closeFilterBtn' onClick={closeFilterBtn.bind(this)}><i className=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{ height: \"205px\", width: \"242.5px\" }}>\r\n              <div>\r\n                <div className=\"selectedValue\">\r\n                  {facultySelected} {subjectSelected}\r\n                </div>\r\n                <div id='facultyFilter'>\r\n                  Faculty\r\n                  \r\n                  <input id=\"inputValFaculty\" list=\"select-faculty\" placeholder=\"Search for faculty\" onChange={onFacultyChange} />\r\n                  <datalist id=\"select-faculty\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for faculty</option>\r\n                    {[...new Set(allFacultyName)].map((option, index) => (\r\n                      <option key={index}>{option}</option>\r\n                    ))}\r\n                  </datalist>\r\n                </div>\r\n\r\n                <div id='subjectFilter'>\r\n                  Subject\r\n\r\n                  <input id=\"inputValSubject\" list=\"select-subject\" placeholder=\"Search for subject\" onChange={onSubjectChange} />\r\n                  <datalist id=\"select-subject\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for subject</option>\r\n                    {[...new Set(allSubjects)].map((option, index) => {\r\n                      return <option key={index}> {option} </option>;\r\n                    })}\r\n                  </datalist>\r\n                </div>\r\n              </div>\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      >\r\n        <button id='filterBtn' onClick={handleFilterBtn}>Filter</button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n\r\n  // Adding condition for the filters\r\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\r\n    return (facultySelected === faculty && subjectSelected === domain) || \r\n      (facultySelected === faculty && subjectSelected === '') ||\r\n      (facultySelected === '' && subjectSelected === domain) ||\r\n      (facultySelected === '' && subjectSelected === '')\r\n  }\r\n\r\n  let allLabelsList = []\r\n  \r\n  if(myDataLength === 0){\r\n    return (\r\n      <h3 id='noResults'>No results found</h3>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"displayList\">\r\n        {/* Used to display videoDetails */}\r\n        {showDiv && (\r\n          <div id=\"overlay\">\r\n            <button id='closeBtn' onClick={handlehideDiv}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <VideoDetails myTitle={myTitle} myVideoFileName={myVideoFileName} showDiv={showDiv}/>\r\n          </div>\r\n        )}\r\n  \r\n        <div id=\"listView\">\r\n          {myallData.map((post) => {\r\n            let { title, summary, faculty, domain } = post \r\n\r\n            allSubjects.push(domain)\r\n            allFacultyName.push(faculty)\r\n          })}\r\n          {myData.map((post) => {\r\n            let { labels, documents } = post\r\n  \r\n            labels = labels[0]\r\n  \r\n            for(let i=0;i<documents.length;i++){\r\n              if(mylabel === labels) \r\n                labelCount++\r\n              allLabelCount++\r\n            }\r\n  \r\n            documents.map((doc, i) => {\r\n              let domain = doc.domain\r\n              let faculty = doc.faculty\r\n  \r\n              //allSubjects.push(domain)\r\n              //allFacultyName.push(faculty)\r\n            })\r\n  \r\n            {/* Display the label buttons, here labels are India & Bengal */}\r\n            return (\r\n              <div className=\"displayLabelList\">\r\n                <button id=\"list-btn\" onClick={(event) => handleListClick(event, labels, documents)}>\r\n                  {labels}\r\n                </button>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n  \r\n        {/* Displaying all the data which exist in clustered file */}\r\n        {myAlllabel && (\r\n          <div className=\"list-content\" id=\"list-content\">\r\n            <div className=\"labels-Data\">\r\n              {myData.map((post) => {\r\n                \r\n                let { labels, documents } = post\r\n  \r\n                labels = labels[0]\r\n  \r\n                return documents.map((doc, i) => {\r\n                  let content\r\n                  let title = doc.title\r\n                  //let content = doc.content\r\n                  //let domain = doc.domain\r\n                  //let faculty = doc.faculty\r\n                  \r\n                  let transcript = doc.transcript\r\n                  let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n                  //let videoFileName = './' + doc.title + '/' + doc.title + '.mp4'\r\n                  //let videoFileName = './' + title + '/' + title + '.mp4'\r\n  \r\n                  let facultyName, domainName\r\n\r\n                  {myallData.map((post) => {\r\n                    let { title, summary, faculty, domain } = post \r\n\r\n                    summary = summary[0].toUpperCase() + summary.slice(1,)\r\n  \r\n                    if(doc.title === title){\r\n                      content = extractFiveSentences(summary)\r\n                      facultyName = faculty\r\n                      domainName = domain\r\n                    }\r\n                  })}\r\n  \r\n                  let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n\r\n                  allLabelCount = count                  \r\n                  display = true\r\n  \r\n                  if(filters){\r\n                    return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                  }\r\n                })\r\n              })}\r\n            </div>\r\n\r\n            {display && (\r\n              <div className=\"label-count\">\r\n                <h4 id='allResultstext'>All results: {allLabelCount}</h4>\r\n                {renderFilterOverlay()}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n  \r\n        {/* Displaying the label data(India & Bengal) which has been clicked by user */}\r\n        {mylabel && (\r\n          <div className=\"list-content\" id=\"list-content\">       \r\n            <div className=\"labels-Data\">\r\n              {myData.map((post) => {\r\n                let { labels, documents } = post\r\n  \r\n                labels = labels[0]\r\n  \r\n                if(mylabel === labels) {\r\n                  return documents.map((doc, i) => {\r\n                    \r\n                    let title = doc.title\r\n                    allLabelsList.push(title)\r\n                    //let content = doc.content\r\n                    let content\r\n                    //let domain = doc.domain\r\n                    //let faculty = doc.faculty\r\n                    let transcript = doc.transcript\r\n                    let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n  \r\n                    let facultyName, domainName\r\n\r\n                    {myallData.map((post) => {\r\n                      let { title, summary, faculty, domain } = post \r\n                      let newTitle = title\r\n\r\n                      summary = summary[0].toUpperCase() + summary.slice(1,)\r\n    \r\n                      if(doc.title === newTitle){\r\n                        content = extractFiveSentences(summary)\r\n                        facultyName = faculty\r\n                        domainName = domain\r\n                      }\r\n                    })}\r\n  \r\n                    let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n                    \r\n                    labelCount = count\r\n                    display = true\r\n\r\n                    if(filters)\r\n                      return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>) \r\n                  })\r\n                }\r\n              })}\r\n            </div>\r\n\r\n            {display && (\r\n              <div className=\"label-count\">\r\n                <h4 id='allResultstext'>All results for {selectedTopic}: {labelCount}</h4>\r\n                {renderFilterOverlay()}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}