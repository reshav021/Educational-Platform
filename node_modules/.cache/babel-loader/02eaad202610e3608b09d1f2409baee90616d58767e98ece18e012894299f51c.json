{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\India.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst India = () => {\n  _s();\n  const [data, setMyData] = useState([]);\n  useEffect(() => {\n    axios.get('./india-clusters.json').then(res => setMyData(res.data));\n  }, [0]);\n  const titles = data.reduce((acc, _ref) => {\n    let {\n      documents\n    } = _ref;\n    documents.forEach(_ref2 => {\n      let {\n        title\n      } = _ref2;\n      acc[title] = (acc[title] || 0) + 1;\n    });\n    return acc;\n  }, {});\n  const chartData = Object.entries(titles).map(_ref3 => {\n    let [title, count] = _ref3;\n    return {\n      title,\n      count\n    };\n  });\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#FF0000'];\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 400,\n    height: 400,\n    children: [/*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      dataKey: \"count\",\n      nameKey: \"title\",\n      cx: \"50%\",\n      cy: \"50%\",\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      label: true,\n      children: chartData.map((_, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(India, \"jgu45jU5n4WRA+QglclFYrLnflo=\");\n_c = India;\nexport default India;\n\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/\nvar _c;\n$RefreshReg$(_c, \"India\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","India","_s","data","setMyData","useState","useEffect","axios","get","then","res","titles","reduce","acc","_ref","documents","forEach","_ref2","title","chartData","Object","entries","map","_ref3","count","COLORS","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","nameKey","cx","cy","outerRadius","fill","label","_","index","length","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/India.js"],"sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nconst India = () => {\r\n    const [data, setMyData] = useState([])\r\n\r\n    useEffect(() => {\r\n      axios.get('./india-clusters.json')\r\n        .then((res) => setMyData(res.data)\r\n      )\r\n    }, [0]);\r\n\r\n  const titles = data.reduce((acc, { documents }) => {\r\n    documents.forEach(({ title }) => {\r\n      acc[title] = (acc[title] || 0) + 1;\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  const chartData = Object.entries(titles).map(([title, count]) => ({ title, count }));\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#FF0000'];\r\n\r\n  return (\r\n    <PieChart width={400} height={400}>\r\n      <Legend />\r\n      <Pie\r\n        data={chartData}\r\n        dataKey=\"count\"\r\n        nameKey=\"title\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        label\r\n      >\r\n        {chartData.map((_, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default India;\r\n\r\n\r\n\r\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}