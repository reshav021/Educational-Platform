{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\India.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst India = () => {\n  _s();\n  const [data, setMyData] = useState([]);\n  const [selectedOuterData, setSelectedOuterData] = useState(null);\n  const COLORS = [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\"];\n  const handleOuterPieEnter = data => {\n    setSelectedOuterData(data);\n  };\n  useEffect(() => {\n    axios.get('./india-cluster.json').then(res => setMyData(res.data));\n  }, [0]);\n  const chartData = [];\n  console.log(chartData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clusters\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayPieChart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piechart-content\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData,\n            dataKey: \"count\",\n            nameKey: \"title\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            innerRadius: 40,\n            fill: \"#8884d8\",\n            label: true,\n            onClick: handleOuterPieEnter,\n            children: chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piechart-content\",\n        children: data.map(post => {\n          let {\n            labels,\n            documents\n          } = post;\n          for (let i = 0; i < documents.length; i++) {\n            let title = documents[i].title;\n            let titleCount = 1;\n            chartData.push({\n              title: title,\n              count: titleCount\n            });\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(India, \"PBIyjbB7H7lh0pqHe4TamOwR7Ow=\");\n_c = India;\nexport default India;\n\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/\nvar _c;\n$RefreshReg$(_c, \"India\");","map":{"version":3,"names":["axios","React","useState","useEffect","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","India","_s","data","setMyData","selectedOuterData","setSelectedOuterData","COLORS","handleOuterPieEnter","get","then","res","chartData","console","log","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","nameKey","cx","cy","outerRadius","innerRadius","fill","label","onClick","map","entry","index","length","post","labels","documents","i","title","titleCount","push","count","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/India.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nconst India = () => {\r\n    const [data, setMyData] = useState([])\r\n    const [selectedOuterData, setSelectedOuterData] = useState(null)\r\n    const COLORS = [\"#FF6384\",\"#36A2EB\",\"#FFCE56\",\"#1abc9c\",\"#3498db\",\"#9b59b6\",\"#34495e\",\"#f1c40f\",\"#e74c3c\",\"#95a5a6\",\"#2ecc71\",\"#8e44ad\",\"#d35400\",\"#7f8c8d\",\"#27ae60\"];\r\n\r\n    const handleOuterPieEnter = (data) => {\r\n        setSelectedOuterData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n      axios.get('./india-cluster.json')\r\n        .then((res) => setMyData(res.data)\r\n      )\r\n    }, [0]);\r\n\r\n    const chartData = []\r\n    console.log(chartData)\r\n\r\n    return (\r\n        <div className=\"clusters\">\r\n            <div className=\"displayPieChart\">\r\n                <div className=\"piechart-content\">\r\n                    <PieChart width={400} height={400}>\r\n                        <Legend />\r\n                        <Pie\r\n                            data={chartData}\r\n                            dataKey=\"count\"\r\n                            nameKey=\"title\"\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            outerRadius={80}\r\n                            innerRadius={40}\r\n                            fill=\"#8884d8\"\r\n                            label\r\n                            onClick={handleOuterPieEnter}\r\n                        >\r\n                            {\r\n                                chartData.map((entry, index) => (\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </div>\r\n\r\n                <div className=\"piechart-content\">    \r\n                    {\r\n                        data.map((post) => {\r\n                            let { labels, documents } = post\r\n                            \r\n                            for(let i=0;i<documents.length;i++){\r\n                                let title = documents[i].title\r\n                                let titleCount = 1\r\n\r\n                                chartData.push({ title: title, count: titleCount })\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default India;\r\n\r\n\r\n\r\n/*\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst India = () => {\r\n  const [data, setMyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india-clusters.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, [0]);\r\n\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#1abc9c\",\r\n            \"#3498db\",\r\n            \"#9b59b6\",\r\n            \"#34495e\",\r\n            \"#f1c40f\",\r\n            \"#e74c3c\",\r\n            \"#95a5a6\",\r\n            \"#2ecc71\",\r\n            \"#8e44ad\",\r\n            \"#d35400\",\r\n            \"#7f8c8d\",\r\n            \"#27ae60\"\r\n          ]   \r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}