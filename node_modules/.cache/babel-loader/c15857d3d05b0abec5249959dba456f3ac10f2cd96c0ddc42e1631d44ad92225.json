{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy2\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\VideoDetails.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProgressBar from \"./Progressbar/ProgressBar\";\nimport { BiFullscreen } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoDetails(props) {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [videotimeNow, setCurrentVideoTime] = useState(0);\n  const videoRef = useRef(null);\n  const chunks = [];\n  let localtitle = props.myTitle;\n  let videoFileName = props.myVideoFileName;\n  let showDiv = props.showDiv;\n  useEffect(() => {\n    axios.get(\"./india.json\").then(res => setMyData(res.data));\n  }, []);\n  const removeDuplicateKeywords = () => {\n    const list = [];\n    const set = new Set();\n    return {\n      push(element) {\n        if (!set.has(element)) {\n          list.push(element);\n          set.add(element);\n        }\n      },\n      get() {\n        return list;\n      }\n    };\n  };\n  let allKeywords = removeDuplicateKeywords();\n  const handleSeekTo = time => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = time;\n    }\n  };\n  const toSeconds = timeString => {\n    timeString = timeString + \"\";\n    let time = timeString.split(\":\");\n    let hr = parseInt(time[0], 10);\n    let min = parseInt(time[1], 10);\n    let sec = parseInt(time[2], 10);\n    time = hr * 3600 + min * 60 + sec;\n    return time;\n  };\n  const [displayKeywordContainer, setDisplayKeywordContainer] = useState(false);\n  const handleSearch = () => {\n    setDisplayKeywordContainer(true);\n    let selectedkeyword = document.getElementById(\"inputVal\").value;\n    selectedkeyword = selectedkeyword.toUpperCase();\n    if (selectedkeyword === \"Default\") selectedkeyword = \"\";\n    setSearchKeyword(selectedkeyword);\n  };\n  const handleTimeUpdate = newTime => {\n    videoRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const handleDurationChange = () => {\n    setDuration(videoRef.current.duration);\n  };\n  const [fullscreen, setFullscreen] = useState(false);\n  const toggleFullScreen = async event => {\n    const container = document.getElementById(\"video-chat-container\");\n    const fullscreenApi = container.requestFullscreen || container.webkitRequestFullScreen || container.mozRequestFullScreen || container.msRequestFullscreen;\n    if (!document.fullscreenElement) {\n      setFullscreen(true);\n      fullscreenApi.call(container);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Event handler to detect full-screen mode changes\n  const handleFullScreenChange = () => {\n    if (!document.fullscreenElement) {\n      setFullscreen(false);\n    }\n  };\n\n  // Register the event listener\n  document.addEventListener(\"fullscreenchange\", handleFullScreenChange);\n\n  // Don't forget to remove the event listener when the component is unmounted\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullScreenChange);\n    };\n  }, []);\n  function handleTime() {\n    setCurrentTime(videoRef.current.currentTime);\n    setCurrentVideoTime(videoRef.current.currentTime);\n  }\n  const [fullscreenProgressBar, setfullscreenProgressBar] = useState(false);\n  const [text, setText] = useState();\n  const [currentProgressTime, setcurrentTime] = useState();\n  const bottomOverlay = document.getElementById(\"bottom-overlay\");\n  const progressTooltip = document.getElementById(\"progressTooltip\");\n  const tooltipText = document.getElementById(\"displayText\");\n  bottomOverlay.addEventListener(\"mousemove\", event => {\n    progressTooltip.style.display = \"block\"; // show the tooltip\n    const tooltipWidth = progressTooltip.offsetWidth;\n    const tooltipHeight = progressTooltip.offsetHeight;\n    const mouseX = event.clientX;\n    const mouseY = event.clientY;\n\n    // calculate the position of the tooltip\n    const tooltipLeft = mouseX - tooltipWidth / 2;\n    const tooltipTop = mouseY - tooltipHeight - 10; // adjust the distance from the mouse pointer\n\n    // set the position of the tooltip\n    progressTooltip.style.left = `${tooltipLeft}px`;\n    progressTooltip.style.top = `${tooltipTop}px`;\n\n    // update the tooltip text\n    tooltipText.innerText = `X: ${mouseX}, Y: ${mouseY}`;\n  });\n  bottomOverlay.addEventListener(\"mouseleave\", () => {\n    progressTooltip.style.display = \"none\"; // hide the tooltip\n  });\n\n  const displayTopic = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const percentage = x / rect.width;\n    const time = duration * percentage;\n    let textToDisplay = '';\n    for (let i = 0; i < chunks.length; i++) {\n      let chunksData = chunks[i];\n      if (time > chunksData.start && time < chunksData.end) textToDisplay = chunksData.topic;\n    }\n    setfullscreenProgressBar(true);\n    setText(textToDisplay);\n    setcurrentTime(formatTime(time));\n    /*\r\n    if(fullscreen === true){\r\n      progressTooltip.style.display = \"block\";\r\n      progressTooltip.style.left = `${event.clientX}px`;\r\n      progressTooltip.style.top = `${rect.top - progressTooltip.offsetHeight}px`;\r\n      progressTooltip.innerText = textToDisplay + \" \" + formatTime(time);\r\n    }\r\n    */\n  };\n\n  const notdisplayTopic = () => {\n    setfullscreenProgressBar(false);\n    /*\r\n    if(fullscreen === true){\r\n      progressTooltip.style.display = \"none\";\r\n    }\r\n    */\n  };\n\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${String(seconds).padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-data\",\n      children: myData.map(post => {\n        let {\n          title,\n          faculty,\n          domain,\n          keyframes_text,\n          chapters_list,\n          image_metadata,\n          keyframes_timestamp\n        } = post;\n        title = title.toUpperCase();\n        faculty = faculty.toUpperCase();\n        domain = domain.toUpperCase();\n        localtitle = localtitle.toUpperCase();\n        if (title === localtitle) {\n          let len = Object.keys(chapters_list).length;\n          let timeStamp = [];\n          let imgSrc;\n          for (let i = 1; i <= len; i++) {\n            let obj = chapters_list[i];\n            let startTime = obj[0];\n            let keywords = obj[1];\n            let imageData = image_metadata[i];\n            let imagePath = imageData[0];\n            if (keywords === searchKeyword) {\n              imgSrc = imagePath;\n            }\n            allKeywords.push(keywords);\n            keywords = keywords.toUpperCase();\n            let obj2 = keyframes_text[i];\n            let endTime = obj2[1];\n            let startTimeSeconds = toSeconds(startTime);\n            let endTimeSeconds = toSeconds(endTime);\n            const colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\"];\n            const newChunk = {\n              start: startTimeSeconds,\n              end: endTimeSeconds - 1.5,\n              //color: colors[Math.floor(Math.random() * colors.length)],\n              color: \"gray\",\n              topic: keywords\n            };\n            chunks.push(newChunk);\n            if (searchKeyword === \"\") {\n              return;\n            }\n            if (keywords.includes(searchKeyword)) timeStamp.push(startTime);\n          }\n          let startTime = toSeconds(timeStamp[0]);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: showDiv && displayKeywordContainer && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"keywordContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"photodiv-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"keywordImage\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"rbi/\" + imgSrc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"seekToBtn\",\n                  onClick: handleSeekTo.bind(this, startTime),\n                  children: [\"Seek to \", timeStamp[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        id: \"video-chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          src: videoFileName,\n          onTimeUpdate: handleTime,\n          onDurationChange: handleDurationChange,\n          height: 359.6,\n          controls: true,\n          onMouseMove: displayTopic,\n          onMouseOut: notdisplayTopic,\n          id: \"video-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"top-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(BiFullscreen, {\n              id: \"fullscreen-toggle-btn\",\n              role: \"button\",\n              class: \"bi bi-fullscreen text-white text-outline\",\n              onClick: event => toggleFullScreen(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bottom-overlay\",\n          children: fullscreenProgressBar && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressTooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"displayText\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"displayText\",\n              children: currentProgressTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"progressBar\",\n        id: \"normalProgressBar\",\n        currentTime: currentTime,\n        duration: duration,\n        onTimeUpdate: handleTimeUpdate,\n        chunks: chunks,\n        videotimeNow: videotimeNow,\n        value: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keywords-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"inputVal\",\n          list: \"select-keyword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"select-keyword\",\n          placeholder: \"Pick a keyword\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"option-keyword\",\n            value: \"\",\n            children: \"Select a keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), allKeywords.get().sort().map((option, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", option, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"videoDetails-searchBtn\",\n          id: \"videoDetails-searchBtn\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoDetails, \"0q85y1M89DthflIWqZ1Iit0/Gys=\");\n_c = VideoDetails;\nexport default VideoDetails;\nvar _c;\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"names":["axios","React","useState","useEffect","useRef","ProgressBar","BiFullscreen","jsxDEV","_jsxDEV","VideoDetails","props","_s","myData","setMyData","searchKeyword","setSearchKeyword","currentTime","setCurrentTime","duration","setDuration","videotimeNow","setCurrentVideoTime","videoRef","chunks","localtitle","myTitle","videoFileName","myVideoFileName","showDiv","get","then","res","data","removeDuplicateKeywords","list","set","Set","push","element","has","add","allKeywords","handleSeekTo","time","current","toSeconds","timeString","split","hr","parseInt","min","sec","displayKeywordContainer","setDisplayKeywordContainer","handleSearch","selectedkeyword","document","getElementById","value","toUpperCase","handleTimeUpdate","newTime","handleDurationChange","fullscreen","setFullscreen","toggleFullScreen","event","container","fullscreenApi","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","fullscreenElement","call","exitFullscreen","handleFullScreenChange","addEventListener","removeEventListener","handleTime","fullscreenProgressBar","setfullscreenProgressBar","text","setText","currentProgressTime","setcurrentTime","bottomOverlay","progressTooltip","tooltipText","style","display","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","mouseX","clientX","mouseY","clientY","tooltipLeft","tooltipTop","left","top","innerText","displayTopic","rect","target","getBoundingClientRect","x","percentage","width","textToDisplay","i","length","chunksData","start","end","topic","formatTime","notdisplayTopic","minutes","Math","floor","seconds","String","padStart","className","children","map","post","title","faculty","domain","keyframes_text","chapters_list","image_metadata","keyframes_timestamp","len","Object","keys","timeStamp","imgSrc","obj","startTime","keywords","imageData","imagePath","obj2","endTime","startTimeSeconds","endTimeSeconds","colors","newChunk","color","includes","src","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","bind","class","ref","onTimeUpdate","onDurationChange","height","controls","onMouseMove","onMouseOut","role","placeholder","sort","option","index","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy2/my-app/src/Components/SubComponents/VideoDetails.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\nimport { BiFullscreen } from \"react-icons/bi\"\r\n\r\nfunction VideoDetails(props) {\r\n  const [myData, setMyData] = useState([])\r\n  const [searchKeyword, setSearchKeyword] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const [videotimeNow, setCurrentVideoTime] = useState(0) \r\n  const videoRef = useRef(null) \r\n  const chunks = []\r\n\r\n  let localtitle = props.myTitle\r\n  let videoFileName = props.myVideoFileName\r\n  let showDiv = props.showDiv\r\n\r\n  useEffect(() => {\r\n    axios.get(\"./india.json\").then((res) => setMyData(res.data))\r\n  }, [])\r\n\r\n  const removeDuplicateKeywords = () => {\r\n    const list = []\r\n    const set = new Set()\r\n\r\n    return {\r\n      push(element) {\r\n        if (!set.has(element)) {\r\n          list.push(element)\r\n          set.add(element)\r\n        }\r\n      },\r\n      get() {\r\n        return list\r\n      },\r\n    }\r\n  }\r\n\r\n  let allKeywords = removeDuplicateKeywords()\r\n\r\n  const handleSeekTo = (time) => {\r\n    if(videoRef.current) {\r\n      videoRef.current.currentTime = time\r\n    }\r\n  }\r\n\r\n  const toSeconds = (timeString) => {\r\n    timeString = timeString + \"\"\r\n    let time = timeString.split(\":\")\r\n\r\n    let hr = parseInt(time[0], 10)\r\n    let min = parseInt(time[1], 10)\r\n    let sec = parseInt(time[2], 10)\r\n\r\n    time = hr * 3600 + min * 60 + sec\r\n\r\n    return time\r\n  }\r\n\r\n  const [displayKeywordContainer,setDisplayKeywordContainer] = useState(false)\r\n\r\n  const handleSearch = () => {\r\n    setDisplayKeywordContainer(true)\r\n    let selectedkeyword = document.getElementById(\"inputVal\").value\r\n    selectedkeyword = selectedkeyword.toUpperCase()\r\n\r\n    if(selectedkeyword === \"Default\") \r\n      selectedkeyword = \"\"\r\n    setSearchKeyword(selectedkeyword)\r\n  }\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const handleDurationChange = () => {\r\n    setDuration(videoRef.current.duration)\r\n  }\r\n\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  const toggleFullScreen = async (event) => {\r\n    const container = document.getElementById(\"video-chat-container\");\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen;\r\n\r\n    if (!document.fullscreenElement) {\r\n      setFullscreen(true);\r\n      fullscreenApi.call(container);\r\n    } else {\r\n      document.exitFullscreen();\r\n      setFullscreen(false);\r\n    }\r\n  };\r\n\r\n  // Event handler to detect full-screen mode changes\r\n  const handleFullScreenChange = () => {\r\n    if (!document.fullscreenElement) {\r\n      setFullscreen(false);\r\n    }\r\n  };\r\n\r\n  // Register the event listener\r\n  document.addEventListener(\"fullscreenchange\", handleFullScreenChange);\r\n\r\n  // Don't forget to remove the event listener when the component is unmounted\r\n  useEffect(() => {\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleFullScreenChange);\r\n    };\r\n  }, []);\r\n\r\n  function handleTime() {\r\n    setCurrentTime(videoRef.current.currentTime)\r\n    setCurrentVideoTime(videoRef.current.currentTime)\r\n  }\r\n\r\n  const [fullscreenProgressBar, setfullscreenProgressBar] = useState(false)\r\n  const [text, setText] = useState()\r\n  const [currentProgressTime, setcurrentTime] = useState()\r\n\r\n  const bottomOverlay = document.getElementById(\"bottom-overlay\");\r\nconst progressTooltip = document.getElementById(\"progressTooltip\");\r\nconst tooltipText = document.getElementById(\"displayText\");\r\n\r\nbottomOverlay.addEventListener(\"mousemove\", (event) => {\r\n  progressTooltip.style.display = \"block\"; // show the tooltip\r\n  const tooltipWidth = progressTooltip.offsetWidth;\r\n  const tooltipHeight = progressTooltip.offsetHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  // calculate the position of the tooltip\r\n  const tooltipLeft = mouseX - tooltipWidth / 2;\r\n  const tooltipTop = mouseY - tooltipHeight - 10; // adjust the distance from the mouse pointer\r\n\r\n  // set the position of the tooltip\r\n  progressTooltip.style.left = `${tooltipLeft}px`;\r\n  progressTooltip.style.top = `${tooltipTop}px`;\r\n\r\n  // update the tooltip text\r\n  tooltipText.innerText = `X: ${mouseX}, Y: ${mouseY}`;\r\n});\r\n\r\nbottomOverlay.addEventListener(\"mouseleave\", () => {\r\n  progressTooltip.style.display = \"none\"; // hide the tooltip\r\n});\r\n\r\n\r\n\r\n  const displayTopic = (event) => {\r\n    const rect = event.target.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const percentage = x / rect.width;\r\n    const time = duration * percentage;\r\n    let textToDisplay = '';\r\n\r\n    for(let i=0;i<chunks.length;i++){\r\n      let chunksData = chunks[i];\r\n\r\n      if((time > chunksData.start) && (time < chunksData.end))\r\n        textToDisplay = chunksData.topic\r\n    }\r\n\r\n    setfullscreenProgressBar(true)\r\n    setText(textToDisplay)\r\n    setcurrentTime(formatTime(time))\r\n    /*\r\n    if(fullscreen === true){\r\n      progressTooltip.style.display = \"block\";\r\n      progressTooltip.style.left = `${event.clientX}px`;\r\n      progressTooltip.style.top = `${rect.top - progressTooltip.offsetHeight}px`;\r\n      progressTooltip.innerText = textToDisplay + \" \" + formatTime(time);\r\n    }\r\n    */\r\n  };\r\n  \r\n  const notdisplayTopic = () => {\r\n    setfullscreenProgressBar(false)\r\n    /*\r\n    if(fullscreen === true){\r\n      progressTooltip.style.display = \"none\";\r\n    }\r\n    */\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${String(seconds).padStart(2, \"0\")}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"videoDetails\">\r\n      <div className=\"videoDetails-data\">\r\n        {myData.map((post) => {\r\n          let { title, faculty, domain, keyframes_text, chapters_list, image_metadata, keyframes_timestamp, } = post\r\n\r\n          title = title.toUpperCase()\r\n          faculty = faculty.toUpperCase()\r\n          domain = domain.toUpperCase()\r\n          localtitle = localtitle.toUpperCase()\r\n\r\n          if(title === localtitle) {\r\n            let len = Object.keys(chapters_list).length\r\n            let timeStamp = []\r\n            let imgSrc\r\n\r\n            for (let i = 1; i <= len; i++) {\r\n              let obj = chapters_list[i]\r\n              let startTime = obj[0]\r\n              let keywords = obj[1]\r\n\r\n              let imageData = image_metadata[i]\r\n              let imagePath = imageData[0]\r\n\r\n              if (keywords === searchKeyword) {\r\n                imgSrc = imagePath\r\n              }\r\n\r\n              allKeywords.push(keywords)\r\n              keywords = keywords.toUpperCase()\r\n\r\n              let obj2 = keyframes_text[i]\r\n              let endTime = obj2[1]\r\n              let startTimeSeconds = toSeconds(startTime)\r\n              let endTimeSeconds = toSeconds(endTime)\r\n\r\n              const colors = [ \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\", ]\r\n\r\n              const newChunk = {\r\n                start: startTimeSeconds,\r\n                end: endTimeSeconds - 1.5,\r\n                //color: colors[Math.floor(Math.random() * colors.length)],\r\n                color: \"gray\",\r\n                topic: keywords,\r\n              }\r\n\r\n              chunks.push(newChunk)\r\n\r\n              if(searchKeyword === \"\") {\r\n                return\r\n              }\r\n              if(keywords.includes(searchKeyword)) \r\n                timeStamp.push(startTime)\r\n            }\r\n\r\n            let startTime = toSeconds(timeStamp[0])\r\n\r\n            return (\r\n              <div>\r\n                {showDiv && displayKeywordContainer &&(\r\n                  <div className=\"keywordContainer\">\r\n                    <div className=\"photodiv-container\">\r\n                      <div className=\"keywordImage\">\r\n                        <img src={\"rbi/\"+imgSrc}></img>\r\n                      </div>\r\n                      <button id=\"seekToBtn\" onClick = {handleSeekTo.bind(this, startTime)}>Seek to {timeStamp[0]}</button>\r\n                            \r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"videoDetails-video\">\r\n        <div class=\"row\" id=\"video-chat-container\">\r\n          <video\r\n            ref={videoRef}\r\n            src={videoFileName}\r\n            onTimeUpdate={handleTime}\r\n            onDurationChange={handleDurationChange}\r\n            height={359.6}\r\n            controls\r\n            onMouseMove={displayTopic}\r\n            onMouseOut={notdisplayTopic}\r\n            id=\"video-player\"\r\n          />\r\n\r\n          <div id=\"top-overlay\">\r\n            <div>\r\n              <BiFullscreen\r\n                id=\"fullscreen-toggle-btn\"\r\n                role=\"button\"\r\n                class=\"bi bi-fullscreen text-white text-outline\"\r\n                onClick={(event) => toggleFullScreen(event)}\r\n              ></BiFullscreen>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"bottom-overlay\">\r\n            {fullscreenProgressBar && (\r\n              <div id=\"progressTooltip\">\r\n                <p id=\"displayText\">{text}</p>\r\n                <p id=\"displayText\">{currentProgressTime}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ProgressBar\r\n          className=\"progressBar\"\r\n          id=\"normalProgressBar\"\r\n          currentTime={currentTime}\r\n          duration={duration}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          chunks={chunks}\r\n          videotimeNow={videotimeNow}\r\n          value={2}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"videoDetails-btn\">\r\n        <div className=\"keywords-container\">\r\n          <input id=\"inputVal\" list=\"select-keyword\" />\r\n\r\n          <datalist id=\"select-keyword\" placeholder=\"Pick a keyword\">\r\n            <option id=\"option-keyword\" value=\"\">\r\n              Select a keyword\r\n            </option>\r\n            {allKeywords.get().sort().map((option, index) => {\r\n              return <option key={index}> {option} </option>\r\n            })}\r\n          </datalist>\r\n\r\n          <button className=\"videoDetails-searchBtn\" id=\"videoDetails-searchBtn\" onClick={handleSearch}>Search</button>  \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}