{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy2\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\VideoDetails.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProgressBar from \"./Progressbar/ProgressBar\";\nimport { BiFullscreen } from \"react-icons/bi\";\nimport ListChartHeader from \"./PieChart/ListChartHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoDetails(props) {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [videotimeNow, setCurrentVideoTime] = useState(0);\n  const videoRef = useRef(null);\n  const chunks = [];\n  let localtitle = props.myTitle;\n  let videoFileName = props.myVideoFileName;\n  let showDiv = props.showDiv;\n  useEffect(() => {\n    axios.get(\"./allIndiaData.json\").then(res => setMyData(res.data));\n  }, []);\n  const removeDuplicateKeywords = () => {\n    const list = [];\n    const set = new Set();\n    return {\n      push(element) {\n        if (!set.has(element)) {\n          list.push(element);\n          set.add(element);\n        }\n      },\n      get() {\n        return list;\n      }\n    };\n  };\n  let allKeywords = removeDuplicateKeywords();\n  const handleSeekTo = time => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = time;\n    }\n  };\n  const toSeconds = timeString => {\n    timeString = timeString + \"\";\n    let time = timeString.split(\":\");\n    let hr = parseInt(time[0], 10);\n    let min = parseInt(time[1], 10);\n    let sec = parseInt(time[2], 10);\n    time = hr * 3600 + min * 60 + sec;\n    return time;\n  };\n  const [displayKeywordContainer, setDisplayKeywordContainer] = useState(false);\n  const handleSearch = () => {\n    setDisplayKeywordContainer(true);\n    let selectedkeyword = document.getElementById(\"inputVal\").value;\n    selectedkeyword = selectedkeyword.toUpperCase();\n    if (selectedkeyword === \"Default\") selectedkeyword = \"\";\n    setSearchKeyword(selectedkeyword);\n  };\n  const handleTimeUpdate = newTime => {\n    videoRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const handleDurationChange = () => {\n    setDuration(videoRef.current.duration);\n  };\n  const [fullscreen, setFullscreen] = useState(false);\n  const toggleFullScreen = async event => {\n    const container = document.getElementById(\"video-container\");\n    const fullscreenApi = container.requestFullscreen || container.webkitRequestFullScreen || container.mozRequestFullScreen || container.msRequestFullscreen;\n    if (!document.fullscreenElement) {\n      setFullscreen(true);\n      fullscreenApi.call(container);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Event handler to detect full-screen mode changes\n  const handleFullScreenChange = () => {\n    if (!document.fullscreenElement) {\n      setFullscreen(false);\n    }\n  };\n\n  // Register the event listener\n  document.addEventListener(\"fullscreenchange\", handleFullScreenChange);\n\n  // Don't forget to remove the event listener when the component is unmounted\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullScreenChange);\n    };\n  }, []);\n  function handleTime() {\n    setCurrentTime(videoRef.current.currentTime);\n    setCurrentVideoTime(videoRef.current.currentTime);\n  }\n  const [fullscreenProgressBar, setfullscreenProgressBar] = useState(false);\n  const [text, setText] = useState();\n  const [currentProgressTime, setcurrentTime] = useState();\n  const progressTooltipRef = useRef(null);\n  const displayTopic = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const percentage = x / rect.width;\n    const time = duration * percentage;\n    let textToDisplay = '';\n    for (let i = 0; i < chunks.length; i++) {\n      let chunksData = chunks[i];\n      if (time > chunksData.start && time < chunksData.end) textToDisplay = chunksData.topic;\n    }\n    setfullscreenProgressBar(true);\n    if (fullscreen === true && progressTooltipRef.current) {\n      progressTooltipRef.current.style.display = \"block\";\n      progressTooltipRef.current.style.left = `${event.clientX}px`;\n      progressTooltipRef.current.style.top = `${rect.top - progressTooltipRef.current.offsetHeight}px`;\n      progressTooltipRef.current.innerText = textToDisplay + \" \" + formatTime(time);\n    }\n  };\n  const notdisplayTopic = () => {\n    setfullscreenProgressBar(false);\n    if (fullscreen === true && progressTooltipRef.current) {\n      progressTooltipRef.current.style.display = \"none\";\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${String(seconds).padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"listchartheader\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"header-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"header-logo\",\n            src: \"/logo/img3.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-data\",\n      children: myData.map(post => {\n        let {\n          title,\n          faculty,\n          domain,\n          keyframes_text,\n          chapters_list,\n          image_metadata,\n          keyframes_timestamp\n        } = post;\n        title = title.toUpperCase();\n        faculty = faculty.toUpperCase();\n        domain = domain.toUpperCase();\n        localtitle = localtitle.toUpperCase();\n        if (title === localtitle) {\n          let len = Object.keys(chapters_list).length;\n          let timeStamp = [];\n          let imgSrc, imgFile;\n          for (let i = 1; i <= len; i++) {\n            let obj = chapters_list[i];\n            let startTime = obj[0];\n            let endTime = obj[1];\n            let keywords = obj[3];\n            let imageData = image_metadata[i];\n            let imagePath = imageData[0];\n            if (keywords === searchKeyword) {\n              imgSrc = imagePath;\n              imgFile = title;\n              console.log(imgFile);\n            }\n            allKeywords.push(keywords);\n            keywords = keywords.toUpperCase();\n\n            //let obj2 = keyframes_text[i]\n            //let endTime = obj2[1]\n            let startTimeSeconds = toSeconds(startTime);\n            let endTimeSeconds = toSeconds(endTime);\n            const colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\"];\n            const newChunk = {\n              start: startTimeSeconds,\n              end: endTimeSeconds - 1.5,\n              //color: colors[Math.floor(Math.random() * colors.length)],\n              color: \"gray\",\n              topic: keywords\n            };\n            chunks.push(newChunk);\n            if (searchKeyword === \"\") {\n              return;\n            }\n            if (keywords.includes(searchKeyword)) timeStamp.push(startTime);\n          }\n          let startTime = toSeconds(timeStamp[0]);\n          //<img src={\"rbi/\"+imgSrc}></img>\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: showDiv && displayKeywordContainer && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"keywordContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"photodiv-container\",\n                onClick: handleSeekTo.bind(this, startTime),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"keywordImage\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: './ImgVideoData/' + imgFile + '/' + imgSrc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"seekToBtn\",\n                  onClick: handleSeekTo.bind(this, startTime),\n                  children: [\"Seek to \", timeStamp[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        id: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          src: videoFileName,\n          onTimeUpdate: handleTime,\n          onDurationChange: handleDurationChange,\n          height: 359.6,\n          controls: true,\n          onMouseMove: displayTopic,\n          onMouseOut: notdisplayTopic,\n          id: \"video-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"top-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(BiFullscreen, {\n              id: \"fullscreen-toggle-btn\",\n              role: \"button\",\n              class: \"bi bi-fullscreen text-white text-outline\",\n              onClick: event => toggleFullScreen(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bottom-overlay\",\n          children: fullscreenProgressBar && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progressTooltip\",\n            ref: progressTooltipRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"progressBar\",\n        id: \"normalProgressBar\",\n        currentTime: currentTime,\n        duration: duration,\n        onTimeUpdate: handleTimeUpdate,\n        chunks: chunks,\n        videotimeNow: videotimeNow,\n        value: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keywords-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputVideoDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"inputVal\",\n            list: \"select-keyword\",\n            placeholder: \"Search a topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"select-keyword\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              id: \"option-keyword\",\n              value: \"\",\n              children: \"Select a keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), allKeywords.get().sort().map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: [\" \", option, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"videoDetails-searchBtn\",\n          id: \"videoDetails-searchBtn\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoDetails, \"J5grrWQi7W7LahLt8zKV1A2nyCU=\");\n_c = VideoDetails;\nexport default VideoDetails;\nvar _c;\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"names":["axios","React","useState","useEffect","useRef","ProgressBar","BiFullscreen","ListChartHeader","jsxDEV","_jsxDEV","VideoDetails","props","_s","myData","setMyData","searchKeyword","setSearchKeyword","currentTime","setCurrentTime","duration","setDuration","videotimeNow","setCurrentVideoTime","videoRef","chunks","localtitle","myTitle","videoFileName","myVideoFileName","showDiv","get","then","res","data","removeDuplicateKeywords","list","set","Set","push","element","has","add","allKeywords","handleSeekTo","time","current","toSeconds","timeString","split","hr","parseInt","min","sec","displayKeywordContainer","setDisplayKeywordContainer","handleSearch","selectedkeyword","document","getElementById","value","toUpperCase","handleTimeUpdate","newTime","handleDurationChange","fullscreen","setFullscreen","toggleFullScreen","event","container","fullscreenApi","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","fullscreenElement","call","exitFullscreen","handleFullScreenChange","addEventListener","removeEventListener","handleTime","fullscreenProgressBar","setfullscreenProgressBar","text","setText","currentProgressTime","setcurrentTime","progressTooltipRef","displayTopic","rect","target","getBoundingClientRect","x","clientX","left","percentage","width","textToDisplay","i","length","chunksData","start","end","topic","style","display","top","offsetHeight","innerText","formatTime","notdisplayTopic","minutes","Math","floor","seconds","String","padStart","className","children","class","id","src","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","faculty","domain","keyframes_text","chapters_list","image_metadata","keyframes_timestamp","len","Object","keys","timeStamp","imgSrc","imgFile","obj","startTime","endTime","keywords","imageData","imagePath","console","log","startTimeSeconds","endTimeSeconds","colors","newChunk","color","includes","onClick","bind","ref","onTimeUpdate","onDurationChange","height","controls","onMouseMove","onMouseOut","role","placeholder","sort","option","index","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy2/my-app/src/Components/SubComponents/VideoDetails.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\nimport { BiFullscreen } from \"react-icons/bi\"\r\nimport ListChartHeader from \"./PieChart/ListChartHeader\"\r\n\r\nfunction VideoDetails(props) {\r\n  const [myData, setMyData] = useState([])\r\n  const [searchKeyword, setSearchKeyword] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const [videotimeNow, setCurrentVideoTime] = useState(0) \r\n  const videoRef = useRef(null) \r\n  const chunks = []\r\n\r\n  let localtitle = props.myTitle\r\n  let videoFileName = props.myVideoFileName\r\n  let showDiv = props.showDiv\r\n\r\n  useEffect(() => {\r\n    axios.get(\"./allIndiaData.json\").then((res) => setMyData(res.data))\r\n  }, [])\r\n\r\n  const removeDuplicateKeywords = () => {\r\n    const list = []\r\n    const set = new Set()\r\n\r\n    return {\r\n      push(element) {\r\n        if (!set.has(element)) {\r\n          list.push(element)\r\n          set.add(element)\r\n        }\r\n      },\r\n      get() {\r\n        return list\r\n      },\r\n    }\r\n  }\r\n\r\n  let allKeywords = removeDuplicateKeywords()\r\n\r\n  const handleSeekTo = (time) => {\r\n    if(videoRef.current) {\r\n      videoRef.current.currentTime = time\r\n    }\r\n  }\r\n\r\n  const toSeconds = (timeString) => {\r\n    timeString = timeString + \"\"\r\n    let time = timeString.split(\":\")\r\n\r\n    let hr = parseInt(time[0], 10)\r\n    let min = parseInt(time[1], 10)\r\n    let sec = parseInt(time[2], 10)\r\n\r\n    time = hr * 3600 + min * 60 + sec\r\n\r\n    return time\r\n  }\r\n\r\n  const [displayKeywordContainer,setDisplayKeywordContainer] = useState(false)\r\n\r\n  const handleSearch = () => {\r\n    setDisplayKeywordContainer(true)\r\n    let selectedkeyword = document.getElementById(\"inputVal\").value\r\n    selectedkeyword = selectedkeyword.toUpperCase()\r\n\r\n    if(selectedkeyword === \"Default\") \r\n      selectedkeyword = \"\"\r\n    setSearchKeyword(selectedkeyword)\r\n  }\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const handleDurationChange = () => {\r\n    setDuration(videoRef.current.duration)\r\n  }\r\n\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  const toggleFullScreen = async (event) => {\r\n    const container = document.getElementById(\"video-container\");\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen;\r\n\r\n    if (!document.fullscreenElement) {\r\n      setFullscreen(true);\r\n      fullscreenApi.call(container);\r\n    } else {\r\n      document.exitFullscreen();\r\n      setFullscreen(false);\r\n    }\r\n  };\r\n\r\n  // Event handler to detect full-screen mode changes\r\n  const handleFullScreenChange = () => {\r\n    if (!document.fullscreenElement) {\r\n      setFullscreen(false);\r\n    }\r\n  };\r\n\r\n  // Register the event listener\r\n  document.addEventListener(\"fullscreenchange\", handleFullScreenChange);\r\n\r\n  // Don't forget to remove the event listener when the component is unmounted\r\n  useEffect(() => {\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleFullScreenChange);\r\n    };\r\n  }, []);\r\n\r\n  function handleTime() {\r\n    setCurrentTime(videoRef.current.currentTime)\r\n    setCurrentVideoTime(videoRef.current.currentTime)\r\n  }\r\n\r\n  const [fullscreenProgressBar, setfullscreenProgressBar] = useState(false)\r\n  const [text, setText] = useState()\r\n  const [currentProgressTime, setcurrentTime] = useState()\r\n\r\n  const progressTooltipRef = useRef(null);\r\n\r\n  const displayTopic = (event) => {\r\n    const rect = event.target.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const percentage = x / rect.width;\r\n    const time = duration * percentage;\r\n    let textToDisplay = '';\r\n\r\n    for(let i=0;i<chunks.length;i++){\r\n      let chunksData = chunks[i];\r\n\r\n      if((time > chunksData.start) && (time < chunksData.end))\r\n        textToDisplay = chunksData.topic\r\n    }\r\n\r\n    setfullscreenProgressBar(true)\r\n\r\n    if(fullscreen === true && progressTooltipRef.current) {\r\n      progressTooltipRef.current.style.display = \"block\";\r\n      progressTooltipRef.current.style.left = `${event.clientX}px`;\r\n      progressTooltipRef.current.style.top = `${rect.top - progressTooltipRef.current.offsetHeight}px`;\r\n      progressTooltipRef.current.innerText = textToDisplay + \" \" + formatTime(time);\r\n    }\r\n  };\r\n  \r\n  const notdisplayTopic = () => {\r\n    setfullscreenProgressBar(false)\r\n\r\n    if(fullscreen === true && progressTooltipRef.current) {\r\n      progressTooltipRef.current.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${String(seconds).padStart(2, \"0\")}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"videoDetails\">\r\n      <div class=\"listchartheader\">\r\n        <li class=\"navbar\">\r\n        <a id=\"header-content\"><img id=\"header-logo\" src='/logo/img3.png'></img></a>\r\n        </li>\r\n      </div>\r\n      <div className=\"videoDetails-data\">\r\n        {myData.map((post) => {\r\n          let { title, faculty, domain, keyframes_text, chapters_list, image_metadata, keyframes_timestamp, } = post\r\n\r\n          title = title.toUpperCase()\r\n          faculty = faculty.toUpperCase()\r\n          domain = domain.toUpperCase()\r\n          localtitle = localtitle.toUpperCase()\r\n\r\n          if(title === localtitle) {\r\n            let len = Object.keys(chapters_list).length\r\n            let timeStamp = []\r\n            let imgSrc,imgFile\r\n\r\n            for (let i = 1; i <= len; i++) {\r\n              let obj = chapters_list[i]\r\n              let startTime = obj[0]\r\n              let endTime = obj[1]\r\n              let keywords = obj[3]\r\n\r\n              let imageData = image_metadata[i]\r\n              let imagePath = imageData[0]\r\n\r\n              if (keywords === searchKeyword) {\r\n                imgSrc = imagePath\r\n                imgFile = title\r\n                console.log(imgFile)\r\n              }\r\n\r\n              allKeywords.push(keywords)\r\n              keywords = keywords.toUpperCase()\r\n\r\n              //let obj2 = keyframes_text[i]\r\n              //let endTime = obj2[1]\r\n              let startTimeSeconds = toSeconds(startTime)\r\n              let endTimeSeconds = toSeconds(endTime)\r\n\r\n              const colors = [ \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\", ]\r\n\r\n              const newChunk = {\r\n                start: startTimeSeconds,\r\n                end: endTimeSeconds - 1.5,\r\n                //color: colors[Math.floor(Math.random() * colors.length)],\r\n                color: \"gray\",\r\n                topic: keywords,\r\n              }\r\n\r\n              chunks.push(newChunk)\r\n\r\n              if(searchKeyword === \"\") {\r\n                return\r\n              }\r\n              if(keywords.includes(searchKeyword)) \r\n                timeStamp.push(startTime)\r\n            }\r\n\r\n            let startTime = toSeconds(timeStamp[0])\r\n            //<img src={\"rbi/\"+imgSrc}></img>\r\n            return (\r\n              <div>\r\n                {showDiv && displayKeywordContainer &&(\r\n                  <div className=\"keywordContainer\">\r\n                    <div className=\"photodiv-container\" onClick = {handleSeekTo.bind(this, startTime)}>\r\n                      <div className=\"keywordImage\">\r\n                        <img src={'./ImgVideoData/' + imgFile + '/' +imgSrc}></img>\r\n                      </div>\r\n                      <button id=\"seekToBtn\" onClick = {handleSeekTo.bind(this, startTime)}>Seek to {timeStamp[0]}</button>\r\n                            \r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"videoDetails-video\">\r\n        <div class=\"row\" id=\"video-container\">\r\n          <video\r\n            ref={videoRef}\r\n            src={videoFileName}\r\n            onTimeUpdate={handleTime}\r\n            onDurationChange={handleDurationChange}\r\n            height={359.6}\r\n            controls\r\n            onMouseMove={displayTopic}\r\n            onMouseOut={notdisplayTopic}\r\n            id=\"video-player\"\r\n          />\r\n\r\n          <div id=\"top-overlay\">\r\n            <div>\r\n              <BiFullscreen\r\n                id=\"fullscreen-toggle-btn\"\r\n                role=\"button\"\r\n                class=\"bi bi-fullscreen text-white text-outline\"\r\n                onClick={(event) => toggleFullScreen(event)}\r\n              ></BiFullscreen>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"bottom-overlay\">\r\n            {fullscreenProgressBar && (\r\n              <div id=\"progressTooltip\" ref={progressTooltipRef}></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ProgressBar\r\n          className=\"progressBar\"\r\n          id=\"normalProgressBar\"\r\n          currentTime={currentTime}\r\n          duration={duration}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          chunks={chunks}\r\n          videotimeNow={videotimeNow}\r\n          value={2}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"videoDetails-btn\">\r\n        <div className=\"keywords-container\">\r\n          <div id=\"inputVideoDetails\">\r\n            <input id=\"inputVal\" list=\"select-keyword\" placeholder=\"Search a topic\"/>\r\n\r\n            <datalist id=\"select-keyword\">\r\n              <option id=\"option-keyword\" value=\"\">\r\n                Select a keyword\r\n              </option>\r\n              {allKeywords.get().sort().map((option, index) => {\r\n                return <option key={index}> {option} </option>\r\n              })}\r\n            </datalist>\r\n          </div>\r\n\r\n          <button className=\"videoDetails-searchBtn\" id=\"videoDetails-searchBtn\" onClick={handleSearch}>Search</button>  \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,eAAe,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmB,YAAY,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMqB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMoB,MAAM,GAAG,EAAE;EAEjB,IAAIC,UAAU,GAAGd,KAAK,CAACe,OAAO;EAC9B,IAAIC,aAAa,GAAGhB,KAAK,CAACiB,eAAe;EACzC,IAAIC,OAAO,GAAGlB,KAAK,CAACkB,OAAO;EAE3B1B,SAAS,CAAC,MAAM;IACdH,KAAK,CAAC8B,GAAG,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKlB,SAAS,CAACkB,GAAG,CAACC,IAAI,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,IAAI,GAAG,EAAE;IACf,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;IAErB,OAAO;MACLC,IAAIA,CAACC,OAAO,EAAE;QACZ,IAAI,CAACH,GAAG,CAACI,GAAG,CAACD,OAAO,CAAC,EAAE;UACrBJ,IAAI,CAACG,IAAI,CAACC,OAAO,CAAC;UAClBH,GAAG,CAACK,GAAG,CAACF,OAAO,CAAC;QAClB;MACF,CAAC;MACDT,GAAGA,CAAA,EAAG;QACJ,OAAOK,IAAI;MACb;IACF,CAAC;EACH,CAAC;EAED,IAAIO,WAAW,GAAGR,uBAAuB,EAAE;EAE3C,MAAMS,YAAY,GAAIC,IAAI,IAAK;IAC7B,IAAGrB,QAAQ,CAACsB,OAAO,EAAE;MACnBtB,QAAQ,CAACsB,OAAO,CAAC5B,WAAW,GAAG2B,IAAI;IACrC;EACF,CAAC;EAED,MAAME,SAAS,GAAIC,UAAU,IAAK;IAChCA,UAAU,GAAGA,UAAU,GAAG,EAAE;IAC5B,IAAIH,IAAI,GAAGG,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC;IAEhC,IAAIC,EAAE,GAAGC,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9B,IAAIO,GAAG,GAAGD,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/B,IAAIQ,GAAG,GAAGF,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAE/BA,IAAI,GAAGK,EAAE,GAAG,IAAI,GAAGE,GAAG,GAAG,EAAE,GAAGC,GAAG;IAEjC,OAAOR,IAAI;EACb,CAAC;EAED,MAAM,CAACS,uBAAuB,EAACC,0BAA0B,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAE5E,MAAMqD,YAAY,GAAGA,CAAA,KAAM;IACzBD,0BAA0B,CAAC,IAAI,CAAC;IAChC,IAAIE,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;IAC/DH,eAAe,GAAGA,eAAe,CAACI,WAAW,EAAE;IAE/C,IAAGJ,eAAe,KAAK,SAAS,EAC9BA,eAAe,GAAG,EAAE;IACtBxC,gBAAgB,CAACwC,eAAe,CAAC;EACnC,CAAC;EAED,MAAMK,gBAAgB,GAAIC,OAAO,IAAK;IACpCvC,QAAQ,CAACsB,OAAO,CAAC5B,WAAW,GAAG6C,OAAO;IACtC5C,cAAc,CAAC4C,OAAO,CAAC;EACzB,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC3C,WAAW,CAACG,QAAQ,CAACsB,OAAO,CAAC1B,QAAQ,CAAC;EACxC,CAAC;EAED,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgE,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,SAAS,GAAGX,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IAC5D,MAAMW,aAAa,GACjBD,SAAS,CAACE,iBAAiB,IAC3BF,SAAS,CAACG,uBAAuB,IACjCH,SAAS,CAACI,oBAAoB,IAC9BJ,SAAS,CAACK,mBAAmB;IAE/B,IAAI,CAAChB,QAAQ,CAACiB,iBAAiB,EAAE;MAC/BT,aAAa,CAAC,IAAI,CAAC;MACnBI,aAAa,CAACM,IAAI,CAACP,SAAS,CAAC;IAC/B,CAAC,MAAM;MACLX,QAAQ,CAACmB,cAAc,EAAE;MACzBX,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAI,CAACpB,QAAQ,CAACiB,iBAAiB,EAAE;MAC/BT,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACAR,QAAQ,CAACqB,gBAAgB,CAAC,kBAAkB,EAAED,sBAAsB,CAAC;;EAErE;EACA1E,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXsD,QAAQ,CAACsB,mBAAmB,CAAC,kBAAkB,EAAEF,sBAAsB,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,UAAUA,CAAA,EAAG;IACpB9D,cAAc,CAACK,QAAQ,CAACsB,OAAO,CAAC5B,WAAW,CAAC;IAC5CK,mBAAmB,CAACC,QAAQ,CAACsB,OAAO,CAAC5B,WAAW,CAAC;EACnD;EAEA,MAAM,CAACgE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhF,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACiF,IAAI,EAAEC,OAAO,CAAC,GAAGlF,QAAQ,EAAE;EAClC,MAAM,CAACmF,mBAAmB,EAAEC,cAAc,CAAC,GAAGpF,QAAQ,EAAE;EAExD,MAAMqF,kBAAkB,GAAGnF,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAMoF,YAAY,GAAIrB,KAAK,IAAK;IAC9B,MAAMsB,IAAI,GAAGtB,KAAK,CAACuB,MAAM,CAACC,qBAAqB,EAAE;IACjD,MAAMC,CAAC,GAAGzB,KAAK,CAAC0B,OAAO,GAAGJ,IAAI,CAACK,IAAI;IACnC,MAAMC,UAAU,GAAGH,CAAC,GAAGH,IAAI,CAACO,KAAK;IACjC,MAAMpD,IAAI,GAAGzB,QAAQ,GAAG4E,UAAU;IAClC,IAAIE,aAAa,GAAG,EAAE;IAEtB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC1E,MAAM,CAAC2E,MAAM,EAACD,CAAC,EAAE,EAAC;MAC9B,IAAIE,UAAU,GAAG5E,MAAM,CAAC0E,CAAC,CAAC;MAE1B,IAAItD,IAAI,GAAGwD,UAAU,CAACC,KAAK,IAAMzD,IAAI,GAAGwD,UAAU,CAACE,GAAI,EACrDL,aAAa,GAAGG,UAAU,CAACG,KAAK;IACpC;IAEArB,wBAAwB,CAAC,IAAI,CAAC;IAE9B,IAAGlB,UAAU,KAAK,IAAI,IAAIuB,kBAAkB,CAAC1C,OAAO,EAAE;MACpD0C,kBAAkB,CAAC1C,OAAO,CAAC2D,KAAK,CAACC,OAAO,GAAG,OAAO;MAClDlB,kBAAkB,CAAC1C,OAAO,CAAC2D,KAAK,CAACV,IAAI,GAAI,GAAE3B,KAAK,CAAC0B,OAAQ,IAAG;MAC5DN,kBAAkB,CAAC1C,OAAO,CAAC2D,KAAK,CAACE,GAAG,GAAI,GAAEjB,IAAI,CAACiB,GAAG,GAAGnB,kBAAkB,CAAC1C,OAAO,CAAC8D,YAAa,IAAG;MAChGpB,kBAAkB,CAAC1C,OAAO,CAAC+D,SAAS,GAAGX,aAAa,GAAG,GAAG,GAAGY,UAAU,CAACjE,IAAI,CAAC;IAC/E;EACF,CAAC;EAED,MAAMkE,eAAe,GAAGA,CAAA,KAAM;IAC5B5B,wBAAwB,CAAC,KAAK,CAAC;IAE/B,IAAGlB,UAAU,KAAK,IAAI,IAAIuB,kBAAkB,CAAC1C,OAAO,EAAE;MACpD0C,kBAAkB,CAAC1C,OAAO,CAAC2D,KAAK,CAACC,OAAO,GAAG,MAAM;IACnD;EACF,CAAC;EAED,MAAMI,UAAU,GAAIjE,IAAI,IAAK;IAC3B,MAAMmE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACrE,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMsE,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACrE,IAAI,GAAG,EAAE,CAAC;IACrC,OAAQ,GAAEmE,OAAQ,IAAGI,MAAM,CAACD,OAAO,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EACzD,CAAC;EAED,oBACE3G,OAAA;IAAK4G,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B7G,OAAA;MAAK8G,KAAK,EAAC,iBAAiB;MAAAD,QAAA,eAC1B7G,OAAA;QAAI8G,KAAK,EAAC,QAAQ;QAAAD,QAAA,eAClB7G,OAAA;UAAG+G,EAAE,EAAC,gBAAgB;UAAAF,QAAA,eAAC7G,OAAA;YAAK+G,EAAE,EAAC,aAAa;YAACC,GAAG,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAO;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACvE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACNpH,OAAA;MAAK4G,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BzG,MAAM,CAACiH,GAAG,CAAEC,IAAI,IAAK;QACpB,IAAI;UAAEC,KAAK;UAAEC,OAAO;UAAEC,MAAM;UAAEC,cAAc;UAAEC,aAAa;UAAEC,cAAc;UAAEC;QAAqB,CAAC,GAAGP,IAAI;QAE1GC,KAAK,GAAGA,KAAK,CAACpE,WAAW,EAAE;QAC3BqE,OAAO,GAAGA,OAAO,CAACrE,WAAW,EAAE;QAC/BsE,MAAM,GAAGA,MAAM,CAACtE,WAAW,EAAE;QAC7BnC,UAAU,GAAGA,UAAU,CAACmC,WAAW,EAAE;QAErC,IAAGoE,KAAK,KAAKvG,UAAU,EAAE;UACvB,IAAI8G,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACL,aAAa,CAAC,CAACjC,MAAM;UAC3C,IAAIuC,SAAS,GAAG,EAAE;UAClB,IAAIC,MAAM,EAACC,OAAO;UAElB,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqC,GAAG,EAAErC,CAAC,EAAE,EAAE;YAC7B,IAAI2C,GAAG,GAAGT,aAAa,CAAClC,CAAC,CAAC;YAC1B,IAAI4C,SAAS,GAAGD,GAAG,CAAC,CAAC,CAAC;YACtB,IAAIE,OAAO,GAAGF,GAAG,CAAC,CAAC,CAAC;YACpB,IAAIG,QAAQ,GAAGH,GAAG,CAAC,CAAC,CAAC;YAErB,IAAII,SAAS,GAAGZ,cAAc,CAACnC,CAAC,CAAC;YACjC,IAAIgD,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC;YAE5B,IAAID,QAAQ,KAAKjI,aAAa,EAAE;cAC9B4H,MAAM,GAAGO,SAAS;cAClBN,OAAO,GAAGZ,KAAK;cACfmB,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;YACtB;YAEAlG,WAAW,CAACJ,IAAI,CAAC0G,QAAQ,CAAC;YAC1BA,QAAQ,GAAGA,QAAQ,CAACpF,WAAW,EAAE;;YAEjC;YACA;YACA,IAAIyF,gBAAgB,GAAGvG,SAAS,CAACgG,SAAS,CAAC;YAC3C,IAAIQ,cAAc,GAAGxG,SAAS,CAACiG,OAAO,CAAC;YAEvC,MAAMQ,MAAM,GAAG,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAG;YAElM,MAAMC,QAAQ,GAAG;cACfnD,KAAK,EAAEgD,gBAAgB;cACvB/C,GAAG,EAAEgD,cAAc,GAAG,GAAG;cACzB;cACAG,KAAK,EAAE,MAAM;cACblD,KAAK,EAAEyC;YACT,CAAC;YAEDxH,MAAM,CAACc,IAAI,CAACkH,QAAQ,CAAC;YAErB,IAAGzI,aAAa,KAAK,EAAE,EAAE;cACvB;YACF;YACA,IAAGiI,QAAQ,CAACU,QAAQ,CAAC3I,aAAa,CAAC,EACjC2H,SAAS,CAACpG,IAAI,CAACwG,SAAS,CAAC;UAC7B;UAEA,IAAIA,SAAS,GAAGhG,SAAS,CAAC4F,SAAS,CAAC,CAAC,CAAC,CAAC;UACvC;UACA,oBACEjI,OAAA;YAAA6G,QAAA,EACGzF,OAAO,IAAIwB,uBAAuB,iBACjC5C,OAAA;cAAK4G,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC/B7G,OAAA;gBAAK4G,SAAS,EAAC,oBAAoB;gBAACsC,OAAO,EAAIhH,YAAY,CAACiH,IAAI,CAAC,IAAI,EAAEd,SAAS,CAAE;gBAAAxB,QAAA,gBAChF7G,OAAA;kBAAK4G,SAAS,EAAC,cAAc;kBAAAC,QAAA,eAC3B7G,OAAA;oBAAKgH,GAAG,EAAE,iBAAiB,GAAGmB,OAAO,GAAG,GAAG,GAAED;kBAAO;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAO;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACvD,eACNpH,OAAA;kBAAQ+G,EAAE,EAAC,WAAW;kBAACmC,OAAO,EAAIhH,YAAY,CAACiH,IAAI,CAAC,IAAI,EAAEd,SAAS,CAAE;kBAAAxB,QAAA,GAAC,UAAQ,EAACoB,SAAS,CAAC,CAAC,CAAC;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAU;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAEjG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAET;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG;QAEV;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAENpH,OAAA;MAAK4G,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC7G,OAAA;QAAK8G,KAAK,EAAC,KAAK;QAACC,EAAE,EAAC,iBAAiB;QAAAF,QAAA,gBACnC7G,OAAA;UACEoJ,GAAG,EAAEtI,QAAS;UACdkG,GAAG,EAAE9F,aAAc;UACnBmI,YAAY,EAAE9E,UAAW;UACzB+E,gBAAgB,EAAEhG,oBAAqB;UACvCiG,MAAM,EAAE,KAAM;UACdC,QAAQ;UACRC,WAAW,EAAE1E,YAAa;UAC1B2E,UAAU,EAAErD,eAAgB;UAC5BU,EAAE,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjB,eAEFpH,OAAA;UAAK+G,EAAE,EAAC,aAAa;UAAAF,QAAA,eACnB7G,OAAA;YAAA6G,QAAA,eACE7G,OAAA,CAACH,YAAY;cACXkH,EAAE,EAAC,uBAAuB;cAC1B4C,IAAI,EAAC,QAAQ;cACb7C,KAAK,EAAC,0CAA0C;cAChDoC,OAAO,EAAGxF,KAAK,IAAKD,gBAAgB,CAACC,KAAK;YAAE;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC9B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACZ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eAENpH,OAAA;UAAK+G,EAAE,EAAC,gBAAgB;UAAAF,QAAA,EACrBrC,qBAAqB,iBACpBxE,OAAA;YAAK+G,EAAE,EAAC,iBAAiB;YAACqC,GAAG,EAAEtE;UAAmB;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACnD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eAENpH,OAAA,CAACJ,WAAW;QACVgH,SAAS,EAAC,aAAa;QACvBG,EAAE,EAAC,mBAAmB;QACtBvG,WAAW,EAAEA,WAAY;QACzBE,QAAQ,EAAEA,QAAS;QACnB2I,YAAY,EAAEjG,gBAAiB;QAC/BrC,MAAM,EAAEA,MAAO;QACfH,YAAY,EAAEA,YAAa;QAC3BsC,KAAK,EAAE;MAAE;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAENpH,OAAA;MAAK4G,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B7G,OAAA;QAAK4G,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjC7G,OAAA;UAAK+G,EAAE,EAAC,mBAAmB;UAAAF,QAAA,gBACzB7G,OAAA;YAAO+G,EAAE,EAAC,UAAU;YAACrF,IAAI,EAAC,gBAAgB;YAACkI,WAAW,EAAC;UAAgB;YAAA3C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAEzEpH,OAAA;YAAU+G,EAAE,EAAC,gBAAgB;YAAAF,QAAA,gBAC3B7G,OAAA;cAAQ+G,EAAE,EAAC,gBAAgB;cAAC7D,KAAK,EAAC,EAAE;cAAA2D,QAAA,EAAC;YAErC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,EACRnF,WAAW,CAACZ,GAAG,EAAE,CAACwI,IAAI,EAAE,CAACxC,GAAG,CAAC,CAACyC,MAAM,EAAEC,KAAK,KAAK;cAC/C,oBAAO/J,OAAA;gBAAA6G,QAAA,GAAoB,GAAC,EAACiD,MAAM,EAAC,GAAC;cAAA,GAAjBC,KAAK;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAqB;YAChD,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACO;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eAENpH,OAAA;UAAQ4G,SAAS,EAAC,wBAAwB;UAACG,EAAE,EAAC,wBAAwB;UAACmC,OAAO,EAAEpG,YAAa;UAAA+D,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACzG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACjH,EAAA,CArTQF,YAAY;AAAA+J,EAAA,GAAZ/J,YAAY;AAuTrB,eAAeA,YAAY;AAAA,IAAA+J,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}