{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\Progressbar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Chunk from \"./Chunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = _ref => {\n  _s();\n  let {\n    duration,\n    onTimeUpdate,\n    chunks\n  } = _ref;\n  const [currentTime, setCurrentTime] = useState(0);\n  const progressBarRef = useRef(null);\n  const handleProgressClick = event => {\n    const progressBar = progressBarRef.current;\n    const progressWidth = progressBar.offsetWidth;\n    const progressClicked = event.clientX - progressBar.getBoundingClientRect().left;\n    const newTime = progressClicked / progressWidth * duration;\n    onTimeUpdate(newTime);\n  };\n  const progress = currentTime / duration * 100;\n  let chunksToShow = [];\n  chunks.forEach(chunk => {\n    const chunkClass = progress >= chunk.start && progress <= chunk.end ? \"chunk active\" : \"chunk\";\n    if (progress >= chunk.end) {\n      chunksToShow.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: chunkClass\n      }, `${chunk.start}-${chunk.end}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  useEffect(() => {\n    const progressBar = progressBarRef.current;\n    const handleTimeUpdate = () => {\n      setCurrentTime(progressBar.currentTime);\n    };\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\n  }, []);\n  const renderChunks = () => {\n    return chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(Chunk, {\n      ...chunk,\n      duration: duration\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  };\n  const [highlightedTime, setHighlightedTime] = useState(null);\n  const handleMouseMove = event => {\n    const progressBar = progressBarRef.current;\n    const progressWidth = progressBar.offsetWidth;\n    const progressHovered = event.clientX - progressBar.getBoundingClientRect().left;\n    const timeHovered = progressHovered / progressWidth * duration;\n    setHighlightedTime(timeHovered);\n  };\n  const handleMouseLeave = () => {\n    setHighlightedTime(null);\n  };\n  const renderHighlightedTime = () => {\n    if (highlightedTime !== null) {\n      const position = highlightedTime / duration * 100;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlighted-time\",\n        style: {\n          left: `${position}%`\n        },\n        children: [Math.round(highlightedTime), \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    ref: progressBarRef,\n    onClick: handleProgressClick,\n    children: [renderChunks(), renderHighlightedTime()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"gF1m6ZXDIkY5u59ejj3sKjvE1Mk=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Chunk","jsxDEV","_jsxDEV","ProgressBar","_ref","_s","duration","onTimeUpdate","chunks","currentTime","setCurrentTime","progressBarRef","handleProgressClick","event","progressBar","current","progressWidth","offsetWidth","progressClicked","clientX","getBoundingClientRect","left","newTime","progress","chunksToShow","forEach","chunk","chunkClass","start","end","push","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTimeUpdate","addEventListener","renderChunks","map","index","highlightedTime","setHighlightedTime","handleMouseMove","progressHovered","timeHovered","handleMouseLeave","renderHighlightedTime","position","style","children","Math","round","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/Progressbar/ProgressBar.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport Chunk from \"./Chunk\";\r\n\r\nconst ProgressBar = ({ duration, onTimeUpdate, chunks }) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const progressBarRef = useRef(null);\r\n\r\n  const handleProgressClick = (event) => {\r\n    const progressBar = progressBarRef.current;\r\n    const progressWidth = progressBar.offsetWidth;\r\n    const progressClicked = event.clientX - progressBar.getBoundingClientRect().left;\r\n    const newTime = (progressClicked / progressWidth) * duration;\r\n    onTimeUpdate(newTime);\r\n  };\r\n\r\n  const progress = (currentTime / duration) * 100;\r\n  \r\n  let chunksToShow = [];\r\n\r\n  chunks.forEach((chunk) => {\r\n    const chunkClass =\r\n      progress >= chunk.start && progress <= chunk.end\r\n        ? \"chunk active\"\r\n        : \"chunk\";\r\n\r\n    if (progress >= chunk.end) {\r\n      chunksToShow.push(\r\n        <div className={chunkClass} key={`${chunk.start}-${chunk.end}`} />\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const progressBar = progressBarRef.current;\r\n\r\n    const handleTimeUpdate = () => {\r\n      setCurrentTime(progressBar.currentTime);\r\n    };\r\n  \r\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\r\n  }, []);\r\n\r\n  const renderChunks = () => {\r\n    return chunks.map((chunk, index) => (\r\n      <Chunk key={index} {...chunk} duration={duration} />\r\n    ));\r\n  };\r\n\r\n  const [highlightedTime, setHighlightedTime] = useState(null);\r\n\r\nconst handleMouseMove = (event) => {\r\n  const progressBar = progressBarRef.current;\r\n  const progressWidth = progressBar.offsetWidth;\r\n  const progressHovered = event.clientX - progressBar.getBoundingClientRect().left;\r\n  const timeHovered = (progressHovered / progressWidth) * duration;\r\n  setHighlightedTime(timeHovered);\r\n};\r\n\r\nconst handleMouseLeave = () => {\r\n  setHighlightedTime(null);\r\n};\r\n\r\nconst renderHighlightedTime = () => {\r\n  if (highlightedTime !== null) {\r\n    const position = (highlightedTime / duration) * 100;\r\n    return (\r\n      <div\r\n        className=\"highlighted-time\"\r\n        style={{ left: `${position}%` }}\r\n      >\r\n        {Math.round(highlightedTime)}s\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n  return (\r\n    <div\r\n      className=\"progress-bar\"\r\n      ref={progressBarRef}\r\n      onClick={handleProgressClick}\r\n    >\r\n      {renderChunks()}\r\n      {renderHighlightedTime()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}