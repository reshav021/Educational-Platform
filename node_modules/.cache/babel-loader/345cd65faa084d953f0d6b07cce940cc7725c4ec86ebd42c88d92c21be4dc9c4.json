{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\Progressbar\\\\Chunk.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chunk = _ref => {\n  _s();\n  let {\n    start,\n    end,\n    duration,\n    progressTime,\n    color,\n    topic\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n  const colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#808080\", \"#FFFFFF\", \"#000000\"];\n\n  //let randomColors = colors[Math.floor(Math.random() * colors.length)];\n\n  const chunkWidth = `${(end - start) / duration * 100}%`;\n  const chunkLeft = `${start / duration * 100}%`;\n  const chunkStyle = {\n    width: chunkWidth,\n    left: chunkLeft,\n    backgroundColor: color,\n    position: \"absolute\"\n  };\n  const progressBarStyle = {\n    width: `${(progressTime - start) / duration * 100}%`,\n    height: \"10px\",\n    backgroundColor: \"#ccc\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chunk-container\",\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chunk\",\n      style: chunkStyle,\n      onMouseOver: () => setIsHovered(true),\n      onMouseOut: () => setIsHovered(false),\n      children: isHovered && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"topic\",\n        children: topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: progressBarStyle,\n      children: `${Math.round(progressTime / duration * 100)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Chunk, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Chunk;\nexport default Chunk;\nvar _c;\n$RefreshReg$(_c, \"Chunk\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chunk","_ref","_s","start","end","duration","progressTime","color","topic","isHovered","setIsHovered","colors","chunkWidth","chunkLeft","chunkStyle","width","left","backgroundColor","position","progressBarStyle","height","className","style","children","onMouseOver","onMouseOut","id","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/Progressbar/Chunk.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Chunk = ({ start, end, duration, progressTime, color, topic }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const colors = [ \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#808080\", \"#FFFFFF\", \"#000000\" ];\r\n\r\n  //let randomColors = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  const chunkWidth = `${((end - start) / duration) * 100}%`;\r\n  const chunkLeft = `${(start / duration) * 100}%`;\r\n\r\n  const chunkStyle = {\r\n    width: chunkWidth,\r\n    left: chunkLeft,\r\n    backgroundColor: color,\r\n    position: \"absolute\"\r\n  };\r\n\r\n  const progressBarStyle = {\r\n    width: `${((progressTime - start) / duration) * 100}%`,\r\n    height: \"10px\",\r\n    backgroundColor: \"#ccc\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"chunk-container\" style={{ position: \"relative\" }}>\r\n      <div\r\n        className=\"chunk\"\r\n        style={chunkStyle}\r\n        onMouseOver={() => setIsHovered(true)}\r\n        onMouseOut={() => setIsHovered(false)}\r\n      >\r\n        {isHovered && <p id=\"topic\">{topic}</p>}\r\n      </div>\r\n      <div className=\"progress-bar\" style={progressBarStyle}>\r\n        {`${Math.round((progressTime / duration) * 100)}%`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chunk;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGC,IAAA,IAA0D;EAAAC,EAAA;EAAA,IAAzD;IAAEC,KAAK;IAAEC,GAAG;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAP,IAAA;EACjE,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMc,MAAM,GAAG,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;;EAEjM;;EAEA,MAAMC,UAAU,GAAI,GAAG,CAACR,GAAG,GAAGD,KAAK,IAAIE,QAAQ,GAAI,GAAI,GAAE;EACzD,MAAMQ,SAAS,GAAI,GAAGV,KAAK,GAAGE,QAAQ,GAAI,GAAI,GAAE;EAEhD,MAAMS,UAAU,GAAG;IACjBC,KAAK,EAAEH,UAAU;IACjBI,IAAI,EAAEH,SAAS;IACfI,eAAe,EAAEV,KAAK;IACtBW,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACvBJ,KAAK,EAAG,GAAG,CAACT,YAAY,GAAGH,KAAK,IAAIE,QAAQ,GAAI,GAAI,GAAE;IACtDe,MAAM,EAAE,MAAM;IACdH,eAAe,EAAE;EACnB,CAAC;EAED,oBACElB,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEJ,QAAQ,EAAE;IAAW,CAAE;IAAAK,QAAA,gBAC/DxB,OAAA;MACEsB,SAAS,EAAC,OAAO;MACjBC,KAAK,EAAER,UAAW;MAClBU,WAAW,EAAEA,CAAA,KAAMd,YAAY,CAAC,IAAI,CAAE;MACtCe,UAAU,EAAEA,CAAA,KAAMf,YAAY,CAAC,KAAK,CAAE;MAAAa,QAAA,EAErCd,SAAS,iBAAIV,OAAA;QAAG2B,EAAE,EAAC,OAAO;QAAAH,QAAA,EAAEf;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eACN/B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAACC,KAAK,EAAEH,gBAAiB;MAAAI,QAAA,EAClD,GAAEQ,IAAI,CAACC,KAAK,CAAE1B,YAAY,GAAGD,QAAQ,GAAI,GAAG,CAAE;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAC5B,EAAA,CArCIF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}