{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\India.js\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  \"labels\": [\"Deposit\"],\n  \"label_counts\": 2,\n  \"documents\": [{\n    \"title\": \"Reserve bank of India\",\n    \"content\": \"bank, rate, rbi, commercial, reserve, repo, borrowing, money, ratio, current, cash, india, make, interest, currency, deposit, time, policy, le, charged\"\n  }, {\n    \"title\": \"Mineral and Resources\",\n    \"content\": \"mineral, iron, copper, ferrous, ore, non, deposit, gold, manganese, metallic, contain, lead, world, example, metal, rock, india, pradesh, found, producer\"\n  }]\n}, {\n  \"labels\": [\"Indian\"],\n  \"label_counts\": 2,\n  \"documents\": [{\n    \"title\": \"Indian National movement\",\n    \"content\": \"indian, thank, british, bengal, badruddin, leader, people, social, tyabji, chandra, n, movement, congress, inc, partition, gokhale, dadabhai, national, tilak, roy\"\n  }, {\n    \"title\": \"coastal plains and Islands\",\n    \"content\": \"coastal, plain, coast, island, eastern, western, many, konkan, along, india, gujarat, water, sea, port, gulf, bay, indian, bengal, west, nicobar\"\n  }]\n}];\nconst India = () => {\n  const titles = data.flatMap(category => category.documents.map(document => document.title));\n  const titleCounts = titles.reduce((counts, title) => {\n    counts[title] = (counts[title] || 0) + 1;\n    return counts;\n  }, {});\n  const chartData = {\n    labels: Object.keys(titleCounts),\n    datasets: [{\n      label: \"Titles\",\n      data: Object.values(titleCounts),\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n_c = India;\nexport default India;\nvar _c;\n$RefreshReg$(_c, \"India\");","map":{"version":3,"names":["React","Pie","jsxDEV","_jsxDEV","data","India","titles","flatMap","category","documents","map","document","title","titleCounts","reduce","counts","chartData","labels","Object","keys","datasets","label","values","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/India.js"],"sourcesContent":["import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nconst data = [\r\n  {\r\n    \"labels\": [\r\n      \"Deposit\"\r\n    ],\r\n    \"label_counts\": 2,\r\n    \"documents\": [\r\n      {\r\n        \"title\": \"Reserve bank of India\",\r\n        \"content\": \"bank, rate, rbi, commercial, reserve, repo, borrowing, money, ratio, current, cash, india, make, interest, currency, deposit, time, policy, le, charged\"\r\n      },\r\n      {\r\n        \"title\": \"Mineral and Resources\",\r\n        \"content\": \"mineral, iron, copper, ferrous, ore, non, deposit, gold, manganese, metallic, contain, lead, world, example, metal, rock, india, pradesh, found, producer\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"labels\": [\r\n      \"Indian\"\r\n    ],\r\n    \"label_counts\": 2,\r\n    \"documents\": [\r\n      {\r\n        \"title\": \"Indian National movement\",\r\n        \"content\": \"indian, thank, british, bengal, badruddin, leader, people, social, tyabji, chandra, n, movement, congress, inc, partition, gokhale, dadabhai, national, tilak, roy\"\r\n      },\r\n      {\r\n        \"title\": \"coastal plains and Islands\",\r\n        \"content\": \"coastal, plain, coast, island, eastern, western, many, konkan, along, india, gujarat, water, sea, port, gulf, bay, indian, bengal, west, nicobar\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst India = () => {\r\n  const titles = data.flatMap((category) =>\r\n    category.documents.map((document) => document.title)\r\n  );\r\n\r\n  const titleCounts = titles.reduce((counts, title) => {\r\n    counts[title] = (counts[title] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(titleCounts),\r\n    datasets: [\r\n      {\r\n        label: \"Titles\",\r\n        data: Object.values(titleCounts),\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#1abc9c\",\r\n          \"#3498db\",\r\n          \"#9b59b6\",\r\n          \"#34495e\",\r\n          \"#f1c40f\",\r\n          \"#e74c3c\",\r\n          \"#95a5a6\"\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default India"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAG,CACX;EACE,QAAQ,EAAE,CACR,SAAS,CACV;EACD,cAAc,EAAE,CAAC;EACjB,WAAW,EAAE,CACX;IACE,OAAO,EAAE,uBAAuB;IAChC,SAAS,EAAE;EACb,CAAC,EACD;IACE,OAAO,EAAE,uBAAuB;IAChC,SAAS,EAAE;EACb,CAAC;AAEL,CAAC,EACD;EACE,QAAQ,EAAE,CACR,QAAQ,CACT;EACD,cAAc,EAAE,CAAC;EACjB,WAAW,EAAE,CACX;IACE,OAAO,EAAE,0BAA0B;IACnC,SAAS,EAAE;EACb,CAAC,EACD;IACE,OAAO,EAAE,4BAA4B;IACrC,SAAS,EAAE;EACb,CAAC;AAEL,CAAC,CACF;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,MAAM,GAAGF,IAAI,CAACG,OAAO,CAAEC,QAAQ,IACnCA,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,KAAK,CAAC,CACrD;EAED,MAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAM,CAAC,CAACC,MAAM,EAAEH,KAAK,KAAK;IACnDG,MAAM,CAACH,KAAK,CAAC,GAAG,CAACG,MAAM,CAACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;IACxC,OAAOG,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC;IAChCO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfjB,IAAI,EAAEc,MAAM,CAACI,MAAM,CAACT,WAAW,CAAC;MAChCU,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;IAEb,CAAC;EAEL,CAAC;EAED,oBAAOpB,OAAA,CAACF,GAAG;IAACG,IAAI,EAAEY;EAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACjC,CAAC;AAACC,EAAA,GAjCIvB,KAAK;AAmCX,eAAeA,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}