{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\Video.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Video = props => {\n  _s();\n  const [data, setData] = useState();\n  const searchData = props.searchData;\n  const faculty = props.faculty;\n  const domain = props.domain;\n  const fetchJson = () => {\n    fetch('./data.json').then(response => {\n      setData(response.json());\n    }).then(data => {\n      setData(data);\n    }).catch(e => {\n      console.log(e.message);\n    });\n  };\n  let video_url = data.video_url;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoContent\",\n      children: [\"Video Url : \", video_url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Video, \"lif/WApPZI6pT1W4YSJwxeyij3U=\");\n_c = Video;\nexport default Video;\n\n/*\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst Video = () => {\r\n  const [myData, setMyData] = useState([])\r\n  const [isError, setIsError] = useState(\"\")\r\n\r\n  const getMyPostData = async () => {\r\n    try {\r\n      const res = await axios.get(\"/posts\")\r\n      setMyData(res.data)\r\n    } catch (error) {\r\n      setIsError(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('./response.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      { isError !== \"\" && <h2>{isError}</h2> }\r\n\r\n      <div className=\"grid\">\r\n        {\r\n          myData.map((post) => {\r\n            let { video_url } = post;\r\n            \r\n            <div class=\"display\">\r\n              <div className=\"video-container\">\r\n                <video width=\"450\" height=\"285\" controls>\r\n                  <source type=\"video/mp4\" src={video_url.slice(0,25) + \"uc?export=view&id=\" + video_url.slice(32,65)}></source>\r\n                </video>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Video\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Video","props","_s","data","setData","searchData","faculty","domain","fetchJson","fetch","then","response","json","catch","e","console","log","message","video_url","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/Video.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Video = (props) => {\r\n  const [data, setData] = useState()\r\n  const searchData = props.searchData;\r\n  const faculty = props.faculty;\r\n  const domain = props.domain;\r\n\r\n  const fetchJson = () => {\r\n    fetch('./data.json')\r\n      .then(response => {\r\n        setData(response.json());\r\n      })\r\n      .then(data => {\r\n        setData(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.message);\r\n      });\r\n  }\r\n\r\n  let video_url = data.video_url\r\n\r\n  return(\r\n    <>\r\n      <div className=\"videoContent\">\r\n        Video Url : {video_url}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Video;\r\n\r\n/*\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst Video = () => {\r\n  const [myData, setMyData] = useState([])\r\n  const [isError, setIsError] = useState(\"\")\r\n\r\n  const getMyPostData = async () => {\r\n    try {\r\n      const res = await axios.get(\"/posts\")\r\n      setMyData(res.data)\r\n    } catch (error) {\r\n      setIsError(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('./response.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      { isError !== \"\" && <h2>{isError}</h2> }\r\n\r\n      <div className=\"grid\">\r\n        {\r\n          myData.map((post) => {\r\n            let { video_url } = post;\r\n            \r\n            <div class=\"display\">\r\n              <div className=\"video-container\">\r\n                <video width=\"450\" height=\"285\" controls>\r\n                  <source type=\"video/mp4\" src={video_url.slice(0,25) + \"uc?export=view&id=\" + video_url.slice(32,65)}></source>\r\n                </video>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Video\r\n\r\n*/"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,EAAE;EAClC,MAAMU,UAAU,GAAGJ,KAAK,CAACI,UAAU;EACnC,MAAMC,OAAO,GAAGL,KAAK,CAACK,OAAO;EAC7B,MAAMC,MAAM,GAAGN,KAAK,CAACM,MAAM;EAE3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAI;MAChBP,OAAO,CAACO,QAAQ,CAACC,IAAI,EAAE,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACP,IAAI,IAAI;MACZC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,CACDU,KAAK,CAAEC,CAAC,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,OAAO,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,IAAIC,SAAS,GAAGf,IAAI,CAACe,SAAS;EAE9B,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAD,QAAA,GAAC,cAChB,EAACD,SAAS;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,iBACL;AAEP,CAAC;AAAAtB,EAAA,CA5BKF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA8BX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}