{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\IndiaCluster.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Label } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndiaCluster = () => {\n  _s();\n  const [myData, setMyData] = useState([]);\n  useEffect(() => {\n    axios.get('./india-clusters.json').then(res => setMyData(res.data));\n  }, [0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clusters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        for (let i = 0; i < documents.length; i++) {\n          let title = documents[i].title;\n          let content = documents[i].content;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PieChart, {\n        width: 500,\n        height: 500,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: myData,\n          dataKey: \"label_counts\",\n          innerRadius: 130,\n          outerRadius: 200,\n          fill: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 500,\n        height: 500,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: myData,\n          dataKey: \"label_counts\",\n          nameKey: \"labels\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 200,\n          innerRadius: 130,\n          children: myData.map((entry, index) => /*#__PURE__*/_jsxDEV(Label, {\n            position: 70,\n            children: entry.labels\n          }, `label-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(IndiaCluster, \"t4qxf8XXuxXukv7LfJC+zXl5Zcc=\");\n_c = IndiaCluster;\nexport default IndiaCluster;\nvar _c;\n$RefreshReg$(_c, \"IndiaCluster\");","map":{"version":3,"names":["axios","useState","useEffect","PieChart","Pie","Label","jsxDEV","_jsxDEV","IndiaCluster","_s","myData","setMyData","get","then","res","data","className","children","map","post","labels","documents","i","length","title","content","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","innerRadius","outerRadius","fill","nameKey","cx","cy","entry","index","position","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/IndiaCluster.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Label } from \"recharts\";\r\n\r\nconst IndiaCluster = () => {\r\n    const [myData, setMyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('./india-clusters.json')\r\n          .then((res) => setMyData(res.data)\r\n        )\r\n    }, [0]);\r\n\r\n    return (  \r\n        <div className=\"clusters\">\r\n            <div>\r\n                {\r\n                    myData.map((post) => {\r\n                        let { labels,documents} = post\r\n                        \r\n                        labels = labels[0]\r\n\r\n                        for(let i=0;i<documents.length;i++){\r\n                            let title = documents[i].title\r\n                            let content = documents[i].content\r\n                        }\r\n                    })\r\n                }\r\n            </div> \r\n\r\n            <div>\r\n                <PieChart width={500} height={500}>\r\n                    <Pie \r\n                        data={myData} \r\n                        dataKey=\"label_counts\" \r\n                        innerRadius={130}\r\n                        outerRadius={200} \r\n                        fill=\"grey\" \r\n                    />\r\n                </PieChart>\r\n\r\n                <PieChart width={500} height={500}>\r\n                    <Pie data={myData} dataKey=\"label_counts\" nameKey=\"labels\" cx=\"50%\" cy=\"50%\" outerRadius={200} innerRadius={130}>\r\n                        {myData.map((entry, index) => (\r\n                            <Label key={`label-${index}`} position={70}>\r\n                                {entry.labels}\r\n                            </Label>\r\n                        ))}\r\n                    </Pie>\r\n                    </PieChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaCluster"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}