{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\PieChart\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Label, Tooltip, Cell, Legend } from \"recharts\";\nimport VideoDetails from \"../VideoDetails\";\nimport ListChartVideoProgress from './ListChartVideoProgress';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = props => {\n  _s();\n  const searchData = props.searchData;\n  const [myData, setMyData] = useState([]);\n  const [OuterChartData, setOuterChartData] = useState([]);\n  const InnerColors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#FFA500\", \"#800080\", \"#008000\", \"#800000\", \"#008080\", \"#000080\", \"#FFC0CB\", \"#FF00FF\", \"#808080\", \"#FF4500\", \"#800000\"];\n  const OuterColors = [\"#FF6384\", \"#36A2EB\", \"#483D8B\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\"];\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [myallData, setmyallData] = useState([]);\n  let flag = true,\n    display = false;\n  let jsonPath,\n    jsonPathCluster,\n    myDataLength,\n    innerlabelCount = 0,\n    allLabelCount = 0;\n  // Used to set a random value for a key in a div \n  let uniqueId = Math.floor(Math.random() * 100) + 1;\n  let [showInnerContent, setShowInnerContent] = useState(false);\n  let [showOuterContent, setShowOuterContent] = useState(false);\n  let [showAllInnerContent, setShowAllInnerContent] = useState(true);\n  let [count, setCount] = useState(0);\n  let allFacultyName = [],\n    allSubjects = [];\n  let newOuterChartData = [];\n  const [selectedInnerData, setSelectedInnerData] = useState(null);\n  const [selectedOuterData, setSelectedOuterData] = useState(null);\n\n  // Set the data for outer piechart \n  /*\r\n  useEffect(() => { \r\n    myData.forEach((post) => {\r\n      let { labels,documents } = post\r\n        for(let i=0; i<documents.length; i++) {\r\n        let title = documents[i].title\r\n        let titleCount = 1\r\n        newOuterChartData.push({ title: title, count: titleCount })\r\n      }\r\n    })\r\n    setOuterChartData(newOuterChartData)\r\n  }, [myData])\r\n  */\n\n  let [displayOuterPieChartoverlay, setdisplayOuterPieChartoverlay] = useState(false);\n  let [innerChartLabel, setinnerChartLabel] = useState(null);\n\n  //Set data for inner clicked label in inner piechart\n  const setDataOuterPiechart = label => {\n    setinnerChartLabel(label);\n    myData.forEach(post => {\n      let {\n        labels,\n        documents\n      } = post;\n      if (label === labels[0]) {\n        for (let i = 0; i < documents.length; i++) {\n          let title = documents[i].title;\n          let titleCount = 1;\n          newOuterChartData.push({\n            title: title,\n            count: titleCount\n          });\n        }\n      }\n    });\n    setOuterChartData(newOuterChartData.slice(0, 10)); // Retrive only 10 data from the cluster file\n    setdisplayOuterPieChartoverlay(true);\n  };\n\n  // Set the selected data for inner piechart\n  const handleInnerPieEnter = data => {\n    setDataOuterPiechart(data.labels[0]);\n    setSelectedInnerData(data);\n    setSelectedTopic(data.labels[0]);\n    setShowOuterContent(false);\n    setShowAllInnerContent(false);\n    setShowInnerContent(true);\n  };\n\n  // Set the selected data for outer piechart\n  const handleOuterPieEnter = data => {\n    setSelectedOuterData(data);\n    setSelectedTopic(data.name);\n    setShowInnerContent(false);\n    setShowAllInnerContent(false);\n    setShowOuterContent(true);\n  };\n  if (\"INDIA\".includes(searchData)) {\n    jsonPathCluster = \"./india-cluster.json\";\n    jsonPath = './india.json';\n  } else if (\"PHYSICS\".includes(searchData)) {\n    jsonPathCluster = \"./physics-cluster.json\";\n    jsonPath = './physics.json';\n  } else if (\"LAW\".includes(searchData)) {\n    jsonPathCluster = \"./law-cluster.json\";\n    jsonPath = './law.json';\n  } else {\n    myDataLength = 0; // If that keyword doesn't exist\n  }\n\n  useEffect(() => {\n    axios.get(jsonPath).then(res => setmyallData(res.data));\n  }, [searchData]);\n  useEffect(() => {\n    axios.get(jsonPathCluster).then(res => {\n      const slicedData = res.data.slice(0, 10); // Retrive only 10 data from the cluster file\n      setMyData(slicedData);\n    });\n  }, [searchData]);\n  const [myTitle, setTitle] = useState();\n  const [showDiv, setShowDiv] = useState(false);\n  const [myVideoFileName, setVideoFileName] = useState();\n\n  // Set value for title & videoFileName for Watch Video \n  const handleshowDiv = (title, videoFileName) => {\n    setShowDiv(true);\n    setTitle(title);\n    setVideoFileName(videoFileName);\n  };\n\n  // Hide outerPieChartCloseBtn\n  const outerChartCloseBtn = () => {\n    document.getElementById('outerPieChartoverlay').style.display = 'none';\n    displayOuterPieChartoverlay = false;\n  };\n  const handlehideDiv = () => {\n    setShowDiv(false);\n    setTitle();\n    setVideoFileName();\n  };\n  const [facultySelected, setFaculty] = useState('');\n  const [subjectSelected, setSubject] = useState('');\n  const closeTranscript = () => {\n    document.querySelector('#displayTranscript').style.display = 'none';\n  };\n  const closeFilterBtn = () => {\n    document.querySelector('#displayFilter').style.display = 'none';\n  };\n\n  // Set the faculty which is selected in search input of Faculty\n  const onFacultyChange = () => {\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\n    if (selectedTeacher === \"Default\") selectedTeacher = \"\";\n    setFaculty(selectedTeacher);\n  };\n\n  // Set the subject which is selected in search input of Subject\n  const onSubjectChange = () => {\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\n    if (selectedSubject === \"Default\") selectedSubject = \"\";\n    setSubject(selectedSubject);\n  };\n\n  // Adding condition for the filters\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\n    return facultySelected === faculty && subjectSelected === domain || facultySelected === faculty && subjectSelected === '' || facultySelected === '' && subjectSelected === domain || facultySelected === '' && subjectSelected === '';\n  };\n\n  // Displaying the Description/Audio_Transcript of the video using a popover\n  const renderDescriptionOverlay = content => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"top\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayTranscript`,\n        style: {\n          height: \"260px\",\n          width: \"252px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeTranscript\",\n            onClick: closeTranscript.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"250px\",\n            overflowX: \"hidden\"\n          },\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"descriptionBtn\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Download audio_transcript\n  const downloadTxtFile = (title, transcript) => {\n    const element = document.createElement('a');\n    element.style.fontFamily = 'Arial';\n    element.style.fontSize = '20px';\n    element.style.textAlign = 'justify';\n    const file = new Blob([transcript], {\n      type: \"text/html; charset=utf-8\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = title + \".doc\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  const displayedTitles = [];\n\n  // Display the video, watch video button and description\n  const displayContent = (title, content, audio_transcript, videoFileName) => {\n    if (!displayedTitles.includes(title)) {\n      // Check if title already displayed/exist don't show that video\n      count++;\n      displayedTitles.push(title);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displaylistContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"list-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListChartVideoProgress, {\n          myTitle: title,\n          myVideoFileName: videoFileName,\n          showDiv: showDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), renderDescriptionOverlay(content), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"view-VideoDetails\",\n          onClick: () => handleshowDiv(title, videoFileName),\n          children: \"Watch Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"downloadBtn\",\n          onClick: downloadTxtFile.bind(this, title, audio_transcript),\n          children: \"Download transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const [selectedInnerSliceIndex, setSelectedInnerSliceIndex] = useState(null);\n  const [selectedOuterSliceIndex, setSelectedOuterSliceIndex] = useState(null);\n\n  // Used to display labels just outside the inner piechart\n  const handleInnerSliceClick = index => {\n    setFaculty('');\n    setSubject('');\n    setSelectedOuterSliceIndex(null);\n    setSelectedInnerSliceIndex(index);\n  };\n\n  // Used to display labels just outside the outer piechart\n  const handleOuterSliceClick = index => {\n    setFaculty('');\n    setSubject('');\n    setSelectedInnerSliceIndex(null);\n    setSelectedOuterSliceIndex(index);\n  };\n\n  // Used to reset the filters\n  const handleResetFilter = () => {\n    document.getElementById(\"inputValFaculty\").value = '';\n    document.getElementById(\"inputValSubject\").value = '';\n    setFaculty('');\n    setSubject('');\n  };\n  useEffect(() => {\n    if (searchData !== '') {\n      setFaculty('');\n      setSubject('');\n    }\n  }, [searchData]);\n\n  // Display only 5 sentences of a audio_transcript\n  const extractFiveSentences = inputText => {\n    const sentences = inputText.split('.');\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\n    if (validSentences.length >= 5) {\n      return validSentences.slice(0, 5).join('. ') + '.';\n    } else {\n      return validSentences.join('. ') + '.';\n    }\n  };\n\n  // Display the filters\n  const renderFilterOverlay = () => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"bottom-end\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayFilter`,\n        style: {\n          height: \"260px\",\n          width: \"230px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          style: {\n            display: \"flex\"\n          },\n          children: [\"Filter\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"resetBtn\",\n            onClick: handleResetFilter,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeFilterBtn\",\n            onClick: closeFilterBtn.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"242.5px\",\n            overflow: \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedValue\",\n              children: [facultySelected, \" \", subjectSelected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"facultyFilter\",\n              children: [\"Faculty\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValFaculty\",\n                list: \"select-faculty\",\n                placeholder: \"Search for faculty\",\n                onChange: onFacultyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-faculty\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for faculty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this), [...new Set(allFacultyName)].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"subjectFilter\",\n              children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValSubject\",\n                list: \"select-subject\",\n                placeholder: \"Search for subject\",\n                onChange: onSubjectChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-subject\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), [...new Set(allSubjects)].map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: [\" \", option, \" \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 30\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"filterBtn\",\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  };\n  if (myDataLength === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"noResults\",\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayPieChart\",\n      children: [myallData.map(post => {\n        let {\n          title,\n          summary,\n          faculty,\n          domain\n        } = post;\n        allSubjects.push(domain);\n        allFacultyName.push(faculty);\n      }), myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        if (selectedInnerData) innerlabelCount = selectedInnerData.documents.length;\n        for (let i = 0; i < documents.length; i++) {\n          allLabelCount++;\n        }\n        documents.map((doc, i) => {\n          let domain = doc.domain;\n          let faculty = doc.faculty;\n          allSubjects.push(domain);\n          allFacultyName.push(faculty);\n        });\n      }), showDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"closeBtn\",\n          onClick: handlehideDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VideoDetails, {\n          myTitle: myTitle,\n          myVideoFileName: myVideoFileName,\n          showDiv: showDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), displayOuterPieChartoverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"outerPieChartoverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"innerChartLabel\",\n          children: [\"Topic: \", innerChartLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"closeOuterChartBtn\",\n          onClick: outerChartCloseBtn,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 700,\n          height: 500,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: OuterChartData //Display Outer PieChart \n            ,\n            dataKey: \"count\",\n            nameKey: \"title\",\n            cx: 323,\n            cy: 242,\n            labelLine: false,\n            isAnimationActive: false,\n            animationDuration: 0,\n            outerRadius: 162,\n            innerRadius: 138,\n            fontWeight: \"bold\",\n            fontSize: \"12px\",\n            label: entry => entry.title.toUpperCase(),\n            onClick: handleOuterPieEnter,\n            children: OuterChartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: OuterColors[index % OuterColors.length],\n              stroke: selectedOuterSliceIndex === index ? '#000' : '#fff',\n              strokeWidth: selectedOuterSliceIndex === index ? 2 : 1,\n              onClick: () => handleOuterSliceClick(index)\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pieChartView\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 700,\n          height: 500,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: myData //Display Inner PieChart \n            ,\n            dataKey: \"count\",\n            nameKey: \"labels\",\n            cx: 323,\n            cy: 242,\n            labelLine: false,\n            isAnimationActive: false,\n            animationDuration: 0,\n            outerRadius: 162,\n            innerRadius: 138,\n            label: _ref => {\n              let {\n                cx,\n                cy,\n                midAngle,\n                innerRadius,\n                outerRadius,\n                index,\n                title,\n                labels\n              } = _ref;\n              const RADIAN = Math.PI / 180;\n              const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\n              const x = cx + radius * Math.cos(-midAngle * RADIAN);\n              const y = cy + radius * Math.sin(-midAngle * RADIAN);\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: x,\n                y: y,\n                fill: InnerColors[index % InnerColors.length],\n                textAnchor: x > cx ? 'start' : 'end',\n                dominantBaseline: \"central\",\n                style: {\n                  fontSize: '12px',\n                  fontWeight: 'bold'\n                },\n                children: labels[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this);\n            },\n            onClick: handleInnerPieEnter,\n            children: myData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: InnerColors[index % InnerColors.length],\n              stroke: selectedInnerSliceIndex === index ? 'black' : 'none',\n              strokeWidth: selectedInnerSliceIndex === index ? 2 : 0,\n              onClick: () => handleInnerSliceClick(index)\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayPieChartContent\",\n        children: [showInnerContent && selectedInnerData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            if (selectedInnerData.labels[0] === labels) {\n              return documents.map((doc, i) => {\n                let title = doc.title;\n                let content = doc.content;\n                //let domain = doc.domain\n                //let faculty = doc.faculty\n                //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\n                let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n                let facultyName, domainName, transcript;\n                {\n                  myallData.map(post => {\n                    let {\n                      title,\n                      summary,\n                      faculty,\n                      domain,\n                      audio_transcript\n                    } = post;\n                    let newTitle = title;\n                    summary = summary[0].toUpperCase() + summary.slice(1);\n                    transcript = audio_transcript;\n                    if (doc.title === newTitle) {\n                      content = extractFiveSentences(summary);\n                      facultyName = faculty;\n                      domainName = domain;\n                    }\n                  });\n                }\n                if (facultySelected !== '' || subjectSelected !== '') innerlabelCount = count;else innerlabelCount = count + 1;\n                display = true;\n                let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n                if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 31\n                }, this);\n              });\n            }\n          }), display && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"allResultstext\",\n              children: [\"All results for \", selectedTopic, \": \", innerlabelCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this), renderFilterOverlay()]\n          }, uniqueId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), showOuterContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"allResultstext\",\n              children: [\"All results for \", selectedTopic, \": \", 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)\n          }, uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), myData.map(post => {\n            let {\n              documents\n            } = post;\n            return documents.map((doc, i) => {\n              let title = doc.title;\n              let content = doc.content;\n              let domain = doc.domain;\n              let faculty = doc.faculty;\n              //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\n              let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n              if (title === (selectedOuterData === null || selectedOuterData === void 0 ? void 0 : selectedOuterData.title) && flag === true) {\n                flag = false;\n                let facultyName, domainName, transcript;\n                {\n                  myallData.map(post => {\n                    let {\n                      title,\n                      summary,\n                      faculty,\n                      domain,\n                      audio_transcript\n                    } = post;\n                    let newTitle = title;\n                    summary = summary[0].toUpperCase() + summary.slice(1);\n                    transcript = audio_transcript;\n                    if (doc.title === newTitle) {\n                      content = extractFiveSentences(summary);\n                      facultyName = faculty;\n                      domainName = domain;\n                    }\n                  });\n                }\n                let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n                if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 31\n                }, this);\n              }\n            });\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), showAllInnerContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            return documents.map((doc, i) => {\n              let title = doc.title;\n              let content = doc.content;\n              //let domain = doc.domain\n              //let faculty = doc.faculty\n              let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n              let facultyName, domainName, transcript;\n              {\n                myallData.map(post => {\n                  let {\n                    title,\n                    summary,\n                    faculty,\n                    domain,\n                    audio_transcript\n                  } = post;\n                  let newTitle = title;\n                  summary = summary[0].toUpperCase() + summary.slice(1);\n                  transcript = audio_transcript;\n                  if (doc.title === newTitle) {\n                    content = extractFiveSentences(summary);\n                    facultyName = faculty;\n                    domainName = domain;\n                  }\n                });\n              }\n              allLabelCount = count;\n              display = true;\n              let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n              if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 29\n              }, this);\n            });\n          }), display && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"allResultstext\",\n              children: [\"All results: \", allLabelCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this), renderFilterOverlay()]\n          }, uniqueId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, uniqueId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Charts, \"raQFLEzuhp+gI4n6i3cDnfQlCoA=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["axios","React","useState","useEffect","PieChart","Pie","Label","Tooltip","Cell","Legend","VideoDetails","ListChartVideoProgress","Popover","OverlayTrigger","jsxDEV","_jsxDEV","Charts","props","_s","searchData","myData","setMyData","OuterChartData","setOuterChartData","InnerColors","OuterColors","selectedTopic","setSelectedTopic","myallData","setmyallData","flag","display","jsonPath","jsonPathCluster","myDataLength","innerlabelCount","allLabelCount","uniqueId","Math","floor","random","showInnerContent","setShowInnerContent","showOuterContent","setShowOuterContent","showAllInnerContent","setShowAllInnerContent","count","setCount","allFacultyName","allSubjects","newOuterChartData","selectedInnerData","setSelectedInnerData","selectedOuterData","setSelectedOuterData","displayOuterPieChartoverlay","setdisplayOuterPieChartoverlay","innerChartLabel","setinnerChartLabel","setDataOuterPiechart","label","forEach","post","labels","documents","i","length","title","titleCount","push","slice","handleInnerPieEnter","data","handleOuterPieEnter","name","includes","get","then","res","slicedData","myTitle","setTitle","showDiv","setShowDiv","myVideoFileName","setVideoFileName","handleshowDiv","videoFileName","outerChartCloseBtn","document","getElementById","style","handlehideDiv","facultySelected","setFaculty","subjectSelected","setSubject","closeTranscript","querySelector","closeFilterBtn","onFacultyChange","selectedTeacher","value","onSubjectChange","selectedSubject","addfilter","faculty","domain","renderDescriptionOverlay","content","trigger","rootClose","placement","overlay","id","height","width","zIndex","children","Header","as","onClick","bind","class","fileName","_jsxFileName","lineNumber","columnNumber","Body","overflowX","downloadTxtFile","transcript","element","createElement","fontFamily","fontSize","textAlign","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","displayedTitles","displayContent","audio_transcript","className","selectedInnerSliceIndex","setSelectedInnerSliceIndex","selectedOuterSliceIndex","setSelectedOuterSliceIndex","handleInnerSliceClick","index","handleOuterSliceClick","handleResetFilter","extractFiveSentences","inputText","sentences","split","validSentences","filter","sentence","trim","join","renderFilterOverlay","overflow","list","placeholder","onChange","Set","map","option","summary","doc","dataKey","nameKey","cx","cy","labelLine","isAnimationActive","animationDuration","outerRadius","innerRadius","fontWeight","entry","toUpperCase","fill","stroke","strokeWidth","_ref","midAngle","RADIAN","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","facultyName","domainName","newTitle","filters","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/PieChart/Charts.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { PieChart, Pie, Label, Tooltip, Cell, Legend } from \"recharts\"\r\nimport VideoDetails from \"../VideoDetails\"\r\nimport ListChartVideoProgress from './ListChartVideoProgress'\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\nconst Charts = (props) => {\r\n  const searchData = props.searchData\r\n  const [myData, setMyData] = useState([])\r\n \r\n  const [OuterChartData, setOuterChartData] = useState([])\r\n\r\n  const InnerColors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#FFA500\", \"#800080\", \"#008000\", \"#800000\", \"#008080\", \"#000080\", \"#FFC0CB\", \"#FF00FF\", \"#808080\", \"#FF4500\", \"#800000\"];\r\n\r\n\r\n  const OuterColors = [ \"#FF6384\", \"#36A2EB\", \"#483D8B\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \r\n  \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\", ]\r\n\r\n  const [selectedTopic, setSelectedTopic] = useState(null)\r\n  const [myallData, setmyallData] = useState([])\r\n\r\n  let flag = true, display = false\r\n  let jsonPath, jsonPathCluster, myDataLength, innerlabelCount=0, allLabelCount=0\r\n  // Used to set a random value for a key in a div \r\n  let uniqueId = Math.floor(Math.random() * 100) + 1; \r\n\r\n  let [showInnerContent, setShowInnerContent] = useState(false)\r\n  let [showOuterContent, setShowOuterContent] = useState(false)\r\n  let [showAllInnerContent, setShowAllInnerContent] = useState(true)\r\n\r\n  let [count, setCount] = useState(0);\r\n  let allFacultyName = [], allSubjects = [];\r\n  let newOuterChartData = []\r\n\r\n  const [selectedInnerData, setSelectedInnerData] = useState(null)\r\n  const [selectedOuterData, setSelectedOuterData] = useState(null)\r\n\r\n  // Set the data for outer piechart \r\n  /*\r\n  useEffect(() => { \r\n    myData.forEach((post) => {\r\n      let { labels,documents } = post\r\n\r\n      for(let i=0; i<documents.length; i++) {\r\n        let title = documents[i].title\r\n        let titleCount = 1\r\n        newOuterChartData.push({ title: title, count: titleCount })\r\n      }\r\n    })\r\n    setOuterChartData(newOuterChartData)\r\n  }, [myData])\r\n  */\r\n  \r\n  let [displayOuterPieChartoverlay, setdisplayOuterPieChartoverlay] = useState(false)\r\n  let [innerChartLabel, setinnerChartLabel] = useState(null)\r\n\r\n  //Set data for inner clicked label in inner piechart\r\n  const setDataOuterPiechart = (label) => {\r\n    setinnerChartLabel(label)\r\n\r\n    myData.forEach((post) => {\r\n      let { labels,documents } = post\r\n\r\n      if(label === labels[0]){\r\n        for(let i=0; i<documents.length; i++) {\r\n          let title = documents[i].title\r\n          let titleCount = 1\r\n          newOuterChartData.push({ title: title, count: titleCount })\r\n        }\r\n      }\r\n    })\r\n    setOuterChartData(newOuterChartData.slice(0,10))      // Retrive only 10 data from the cluster file\r\n    setdisplayOuterPieChartoverlay(true)\r\n  }\r\n\r\n  // Set the selected data for inner piechart\r\n  const handleInnerPieEnter = (data) => {\r\n    setDataOuterPiechart(data.labels[0])\r\n    setSelectedInnerData(data)\r\n    setSelectedTopic(data.labels[0])\r\n    setShowOuterContent(false)\r\n    setShowAllInnerContent(false)\r\n    setShowInnerContent(true)\r\n  }\r\n\r\n  // Set the selected data for outer piechart\r\n  const handleOuterPieEnter = (data) => {\r\n    setSelectedOuterData(data)\r\n    setSelectedTopic(data.name)\r\n    setShowInnerContent(false)\r\n    setShowAllInnerContent(false)\r\n    setShowOuterContent(true)\r\n  }\r\n\r\n  if (\"INDIA\".includes(searchData)) {\r\n    jsonPathCluster = \"./india-cluster.json\"\r\n    jsonPath = './india.json'\r\n  } \r\n  else if (\"PHYSICS\".includes(searchData)) {\r\n    jsonPathCluster = \"./physics-cluster.json\"\r\n    jsonPath = './physics.json'\r\n  } \r\n  else if (\"LAW\".includes(searchData)) {\r\n    jsonPathCluster = \"./law-cluster.json\"\r\n    jsonPath = './law.json'\r\n  }\r\n  else {\r\n    myDataLength = 0      // If that keyword doesn't exist\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPath).then((res) => setmyallData(res.data))\r\n  }, [searchData])\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPathCluster).then((res) => {\r\n      const slicedData = res.data.slice(0, 10);  // Retrive only 10 data from the cluster file\r\n      setMyData(slicedData);\r\n    });\r\n  }, [searchData]);\r\n\r\n  \r\n\r\n  const [myTitle, setTitle] = useState();\r\n  const [showDiv, setShowDiv] = useState(false);\r\n  const [myVideoFileName, setVideoFileName] = useState();\r\n\r\n  // Set value for title & videoFileName for Watch Video \r\n  const handleshowDiv = (title,videoFileName) => {\r\n    setShowDiv(true)\r\n    setTitle(title)\r\n    setVideoFileName(videoFileName)\r\n  };\r\n\r\n  // Hide outerPieChartCloseBtn\r\n  const outerChartCloseBtn = () => {\r\n    document.getElementById('outerPieChartoverlay').style.display = 'none'\r\n    displayOuterPieChartoverlay = false\r\n  }\r\n\r\n  const handlehideDiv = () => {\r\n    setShowDiv(false)\r\n    setTitle()\r\n    setVideoFileName()\r\n  }\r\n\r\n  const [facultySelected, setFaculty] = useState('');\r\n  const [subjectSelected, setSubject] = useState('');\r\n\r\n  const closeTranscript = () => {\r\n    document.querySelector('#displayTranscript').style.display = 'none'\r\n  }\r\n\r\n  const closeFilterBtn = () => {\r\n    document.querySelector('#displayFilter').style.display = 'none'\r\n  }\r\n\r\n  // Set the faculty which is selected in search input of Faculty\r\n  const onFacultyChange = () => {\r\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\r\n\r\n    if(selectedTeacher === \"Default\") \r\n      selectedTeacher = \"\";\r\n\r\n    setFaculty(selectedTeacher)\r\n  };\r\n\r\n  // Set the subject which is selected in search input of Subject\r\n  const onSubjectChange = () => {\r\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\r\n\r\n    if(selectedSubject === \"Default\") \r\n      selectedSubject = \"\";\r\n\r\n    setSubject(selectedSubject)\r\n  };\r\n\r\n  // Adding condition for the filters\r\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\r\n    return (facultySelected === faculty && subjectSelected === domain) || \r\n      (facultySelected === faculty && subjectSelected === '') ||\r\n      (facultySelected === '' && subjectSelected === domain) ||\r\n      (facultySelected === '' && subjectSelected === '')\r\n  }\r\n\r\n  // Displaying the Description/Audio_Transcript of the video using a popover\r\n  const renderDescriptionOverlay = (content) => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\" rootClose placement=\"top\"\r\n        overlay={\r\n          <Popover id={`displayTranscript`} style={{height:\"260px\",width:\"252px\",zIndex:0}}>\r\n            <Popover.Header as=\"h3\">\r\n              Description\r\n              <button id='closeTranscript' onClick={closeTranscript.bind(this)}><i class=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{height:\"205px\",width:\"250px\", overflowX:\"hidden\"}}>\r\n              {content}\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      > \r\n        <button id='descriptionBtn'>Description</button>\r\n      </OverlayTrigger>\r\n    )\r\n  }\r\n\r\n  // Download audio_transcript\r\n  const downloadTxtFile = (title,transcript) => {\r\n    const element = document.createElement('a');\r\n    element.style.fontFamily = 'Arial';\r\n    element.style.fontSize = '20px';\r\n    element.style.textAlign = 'justify';\r\n    \r\n    const file = new Blob([transcript], {\r\n      type: \"text/html; charset=utf-8\",\r\n    });\r\n  \r\n    element.href = URL.createObjectURL(file);\r\n    element.download = title + \".doc\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  } \r\n\r\n  const displayedTitles = [];\r\n\r\n  // Display the video, watch video button and description\r\n  const displayContent = (title,content,audio_transcript,videoFileName) => {\r\n    if (!displayedTitles.includes(title)){    // Check if title already displayed/exist don't show that video\r\n      count++;\r\n      displayedTitles.push(title);\r\n      \r\n      return (\r\n        <div className=\"displaylistContent\">\r\n          <h4 id=\"list-title\">{title}</h4>\r\n          <ListChartVideoProgress myTitle={title} myVideoFileName={videoFileName} showDiv={showDiv}/>\r\n          {renderDescriptionOverlay(content)}\r\n          <button id='view-VideoDetails' onClick={() => handleshowDiv(title, videoFileName)}>Watch Video</button>\r\n          <button id='downloadBtn' onClick={downloadTxtFile.bind(this,title,audio_transcript)}>Download transcript</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const [selectedInnerSliceIndex, setSelectedInnerSliceIndex] = useState(null);\r\n  const [selectedOuterSliceIndex, setSelectedOuterSliceIndex] = useState(null);\r\n  \r\n  // Used to display labels just outside the inner piechart\r\n  const handleInnerSliceClick = (index) => {\r\n    setFaculty('')\r\n    setSubject('')\r\n    setSelectedOuterSliceIndex(null);\r\n    setSelectedInnerSliceIndex(index);\r\n  };\r\n  \r\n  // Used to display labels just outside the outer piechart\r\n  const handleOuterSliceClick = (index) => {\r\n    setFaculty('')\r\n    setSubject('')\r\n    setSelectedInnerSliceIndex(null);\r\n    setSelectedOuterSliceIndex(index);\r\n  };\r\n\r\n  // Used to reset the filters\r\n  const handleResetFilter =() => {\r\n    document.getElementById(\"inputValFaculty\").value = ''\r\n    document.getElementById(\"inputValSubject\").value = ''\r\n    setFaculty('')\r\n    setSubject('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(searchData !== '') {\r\n      setFaculty('');\r\n      setSubject('');\r\n    }\r\n  }, [searchData]);\r\n\r\n  // Display only 5 sentences of a audio_transcript\r\n  const extractFiveSentences = (inputText) => {\r\n    const sentences = inputText.split('.');\r\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\r\n  \r\n    if (validSentences.length >= 5) {\r\n      return validSentences.slice(0, 5).join('. ') + '.';\r\n    } else {\r\n      return validSentences.join('. ') + '.';\r\n    }\r\n  }\r\n\r\n  // Display the filters\r\n  const renderFilterOverlay = () => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        rootClose\r\n        placement=\"bottom-end\"\r\n        overlay={\r\n          <Popover id={`displayFilter`} style={{ height: \"260px\", width: \"230px\", zIndex: 0 }}>\r\n            <Popover.Header as=\"h3\" style={{display: \"flex\"}}>\r\n              Filter\r\n              <button id=\"resetBtn\" onClick={handleResetFilter}>Reset</button>\r\n              <button id='closeFilterBtn' onClick={closeFilterBtn.bind(this)}><i className=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{ height: \"205px\", width: \"242.5px\", overflow: \"hidden\" }}>\r\n              <div>\r\n                <div className=\"selectedValue\">\r\n                  {facultySelected} {subjectSelected}\r\n                </div>\r\n                <div id='facultyFilter'>\r\n                  Faculty\r\n                  \r\n                  <input id=\"inputValFaculty\" list=\"select-faculty\" placeholder=\"Search for faculty\" onChange={onFacultyChange} />\r\n                  <datalist id=\"select-faculty\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for faculty</option>\r\n                    {[...new Set(allFacultyName)].map((option, index) => (\r\n                      <option key={index}>{option}</option>\r\n                    ))}\r\n                  </datalist>\r\n                </div>\r\n\r\n                <div id='subjectFilter'>\r\n                  Subject\r\n\r\n                  <input id=\"inputValSubject\" list=\"select-subject\" placeholder=\"Search for subject\" onChange={onSubjectChange} />\r\n                  <datalist id=\"select-subject\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for subject</option>\r\n                    {[...new Set(allSubjects)].map((option, index) => {\r\n                      return <option key={index}> {option} </option>;\r\n                    })}\r\n                  </datalist>\r\n                </div>\r\n              </div>\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      >\r\n        <button id='filterBtn'>Filter</button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n\r\n  if(myDataLength === 0){\r\n    return (\r\n      <h3 id='noResults'>No results found</h3>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <div key={uniqueId} className=\"displayPieChart\">\r\n        {myallData.map((post) => {\r\n          let { title, summary, faculty, domain } = post \r\n\r\n          allSubjects.push(domain)\r\n          allFacultyName.push(faculty)\r\n        })}\r\n\r\n        {myData.map((post) => {\r\n          let { labels, documents } = post\r\n  \r\n          labels = labels[0]\r\n          \r\n          if(selectedInnerData)\r\n            innerlabelCount = selectedInnerData.documents.length\r\n  \r\n          for(let i=0;i<documents.length;i++){\r\n            allLabelCount++;\r\n          }\r\n  \r\n          documents.map((doc, i) => {\r\n            let domain = doc.domain\r\n            let faculty = doc.faculty\r\n  \r\n            allSubjects.push(domain)\r\n            allFacultyName.push(faculty)\r\n          })\r\n        })}\r\n        \r\n        {showDiv && (\r\n          <div id=\"overlay\">\r\n            <button id='closeBtn' onClick={handlehideDiv}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <VideoDetails myTitle={myTitle} myVideoFileName={myVideoFileName} showDiv={showDiv}/>\r\n          </div>\r\n        )}\r\n  \r\n        {displayOuterPieChartoverlay && (\r\n          <div id=\"outerPieChartoverlay\">\r\n            <h4 id='innerChartLabel'>Topic: {innerChartLabel}</h4>\r\n            <button id='closeOuterChartBtn' onClick={outerChartCloseBtn}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <PieChart width={700} height={500}>\r\n              <Pie\r\n                data={OuterChartData}             //Display Outer PieChart \r\n                dataKey=\"count\"\r\n                nameKey=\"title\"\r\n                cx={323}\r\n                cy={242}\r\n                labelLine={false}\r\n                isAnimationActive={false}\r\n                animationDuration={0}\r\n                outerRadius={162}\r\n                innerRadius={138}\r\n                fontWeight='bold'\r\n                fontSize='12px'\r\n                label={(entry) => entry.title.toUpperCase()}\r\n                onClick={handleOuterPieEnter}\r\n              >\r\n                {OuterChartData.map((entry, index) => (\r\n                  <Cell\r\n                    key={`cell-${index}`}\r\n                    fill={OuterColors[index % OuterColors.length]}\r\n                    stroke={selectedOuterSliceIndex === index ? '#000' : '#fff'}\r\n                    strokeWidth={selectedOuterSliceIndex === index ? 2 : 1}\r\n                    onClick={() => handleOuterSliceClick(index)}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n            </PieChart>    \r\n          </div>\r\n        )}\r\n\r\n        <div id=\"pieChartView\">\r\n          <PieChart width={700} height={500}>\r\n            <Pie\r\n              data={myData}                   //Display Inner PieChart \r\n              dataKey=\"count\"\r\n              nameKey=\"labels\"\r\n              cx={323}\r\n              cy={242}\r\n              labelLine={false}\r\n              isAnimationActive={false}\r\n              animationDuration={0}\r\n              outerRadius={162}\r\n              innerRadius={138}\r\n              label={({ cx, cy, midAngle, innerRadius, outerRadius, index, title, labels }) => {\r\n                const RADIAN = Math.PI / 180;\r\n                const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\r\n                const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n                return (\r\n                  <text\r\n                    x={x}\r\n                    y={y}\r\n                    fill={InnerColors[index % InnerColors.length]}\r\n                    textAnchor={x > cx ? 'start' : 'end'}\r\n                    dominantBaseline=\"central\"\r\n                    style={{ fontSize: '12px', fontWeight: 'bold'}}\r\n                  >\r\n                    {labels[0].toUpperCase()}\r\n                  </text>\r\n                );\r\n              }}\r\n              onClick={handleInnerPieEnter}\r\n            >\r\n              {myData.map((entry, index) => (\r\n                <Cell\r\n                key={`cell-${index}`}\r\n                fill={InnerColors[index % InnerColors.length]}\r\n                stroke={selectedInnerSliceIndex === index ? 'black' : 'none'}\r\n                strokeWidth={selectedInnerSliceIndex === index ? 2 : 0}\r\n                onClick={() => handleInnerSliceClick(index)}\r\n              />\r\n              ))}\r\n            </Pie>\r\n          </PieChart>\r\n        </div>\r\n  \r\n        <div className=\"displayPieChartContent\">\r\n\r\n          {/* Displaying the label data(India & Bengal) which has been clicked by user in inner piechart*/}\r\n          {showInnerContent && selectedInnerData && (\r\n            <div className=\"piechart-content\">\r\n              \r\n\r\n              {myData.map((post) => {\r\n                let { labels, documents } = post\r\n\r\n                labels = labels[0]\r\n\r\n                if (selectedInnerData.labels[0] === labels) {\r\n                  return documents.map((doc, i) => {\r\n                    let title = doc.title\r\n                    let content = doc.content\r\n                    //let domain = doc.domain\r\n                    //let faculty = doc.faculty\r\n                    //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\r\n                    let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n\r\n                    let facultyName, domainName, transcript\r\n\r\n                    {myallData.map((post) => {\r\n                      let { title, summary, faculty, domain, audio_transcript } = post \r\n                      let newTitle = title\r\n    \r\n                      summary = summary[0].toUpperCase() + summary.slice(1,)\r\n                      transcript = audio_transcript\r\n\r\n                      if(doc.title === newTitle){\r\n                        content = extractFiveSentences(summary)\r\n                        facultyName = faculty\r\n                        domainName = domain\r\n                      }\r\n                    })}\r\n\r\n                    if(facultySelected !== '' || subjectSelected !== '')\r\n                      innerlabelCount = count\r\n                    else\r\n                      innerlabelCount = count + 1\r\n\r\n                    display = true\r\n\r\n                    let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n\r\n                    if(filters)\r\n                      return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                  })\r\n                }\r\n              })}\r\n              \r\n              {display && (\r\n                <div className=\"label-count\" key={uniqueId}>\r\n                  <h4 id='allResultstext'>All results for {selectedTopic}: {innerlabelCount}</h4>\r\n                  {renderFilterOverlay()}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n  \r\n          {/* Displaying the label data(India & Bengal) which has been clicked by user in outer piechart*/}\r\n          {showOuterContent && (\r\n            <div className=\"piechart-content\">\r\n              <div className=\"label-count\" key={uniqueId}>\r\n                <h4 id='allResultstext'>All results for {selectedTopic}: {1}</h4>\r\n              </div>\r\n              {myData.map((post) => {\r\n                let { documents } = post\r\n  \r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  let content = doc.content\r\n                  let domain = doc.domain\r\n                  let faculty = doc.faculty\r\n                  //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\r\n                  let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n  \r\n                  if (title === selectedOuterData?.title && flag === true) {\r\n                    flag = false\r\n\r\n                    let facultyName, domainName, transcript\r\n  \r\n                    {myallData.map((post) => {\r\n                      let { title, summary, faculty, domain, audio_transcript } = post \r\n                      let newTitle = title\r\n    \r\n                      summary = summary[0].toUpperCase() + summary.slice(1,)\r\n                      transcript = audio_transcript\r\n\r\n                      if(doc.title === newTitle){\r\n                        content = extractFiveSentences(summary)\r\n                        facultyName = faculty\r\n                        domainName = domain\r\n                      }\r\n                    })}\r\n  \r\n                    let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n  \r\n                    if(filters)\r\n                      return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                  }\r\n                })\r\n              })}\r\n            </div>\r\n          )}\r\n  \r\n          {/* Displaying all the data which exist in clustered file */}\r\n          {showAllInnerContent && (\r\n            <div className=\"piechart-content\">\r\n              {myData.map((post) => {\r\n                let { labels, documents } = post\r\n\r\n                labels = labels[0]\r\n\r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  let content = doc.content\r\n                  //let domain = doc.domain\r\n                  //let faculty = doc.faculty\r\n                  let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n\r\n                  let facultyName, domainName, transcript\r\n\r\n                  {myallData.map((post) => {\r\n                    let { title, summary, faculty, domain, audio_transcript } = post \r\n                    let newTitle = title\r\n  \r\n                    summary = summary[0].toUpperCase() + summary.slice(1,)\r\n                    transcript = audio_transcript\r\n                    \r\n                    if(doc.title === newTitle){\r\n                      content = extractFiveSentences(summary)\r\n                      facultyName = faculty\r\n                      domainName = domain\r\n                    }\r\n                  })}\r\n\r\n                  allLabelCount = count\r\n                  display = true\r\n\r\n                  let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n\r\n                  if(filters)\r\n                    return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                })\r\n              })}\r\n\r\n              {display && (\r\n                <div className=\"label-count\" key={uniqueId}>\r\n                  <h4 id='allResultstext'>All results: {allLabelCount}</h4>\r\n                  {renderFilterOverlay()} \r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Charts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}