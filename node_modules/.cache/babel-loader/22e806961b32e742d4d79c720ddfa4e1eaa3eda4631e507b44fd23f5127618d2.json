{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy2\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\PieChart\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Label, Tooltip, Cell, Legend } from \"recharts\";\nimport VideoDetails from \"../VideoDetails\";\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = props => {\n  _s();\n  const searchData = props.searchData;\n  const [myData, setMyData] = useState([]);\n  const [selectedInnerData, setSelectedInnerData] = useState(null);\n  const [selectedOuterData, setSelectedOuterData] = useState(null);\n  const [OuterChartData, setOuterChartData] = useState([]);\n  const InnerColors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#AF19FF\", \"#F2F2F2\"];\n  const OuterColors = [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\"];\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [myallData, setmyallData] = useState([]);\n  let flag = true,\n    display = false;\n  let jsonPath,\n    jsonPathCluster,\n    myDataLength,\n    innerlabelCount = 0,\n    allLabelCount = 0;\n  let [showInnerContent, setShowInnerContent] = useState(false);\n  let [showOuterContent, setShowOuterContent] = useState(false);\n  let [showAllInnerContent, setShowAllInnerContent] = useState(true);\n\n  // Set the selected data for inner piechart\n  const handleInnerPieEnter = data => {\n    setSelectedInnerData(data);\n    setSelectedTopic(data.labels[0]);\n    setShowOuterContent(false);\n    setShowAllInnerContent(false);\n    setShowInnerContent(true);\n  };\n\n  // Set the selected data for outer piechart\n  const handleOuterPieEnter = data => {\n    setSelectedOuterData(data);\n    setSelectedTopic(data.name);\n    setShowInnerContent(false);\n    setShowAllInnerContent(false);\n    setShowOuterContent(true);\n  };\n  if (\"INDIA\".includes(searchData)) {\n    jsonPathCluster = \"./india-cluster.json\";\n    jsonPath = './india.json';\n  } else if (\"PHYSICS\".includes(searchData)) {\n    jsonPathCluster = \"./physics-cluster.json\";\n    jsonPath = './physics.json';\n  } else if (\"LAW\".includes(searchData)) {\n    jsonPathCluster = \"./law-cluster.json\";\n    jsonPath = './law.json';\n  } else {\n    myDataLength = 0; // If that keyword doesn't exist\n  }\n\n  useEffect(() => {\n    axios.get(jsonPath).then(res => setmyallData(res.data));\n  }, [searchData]);\n  useEffect(() => {\n    axios.get(jsonPathCluster).then(res => setMyData(res.data));\n  }, [searchData]);\n\n  // Set the data for outer piechart \n  useEffect(() => {\n    let newOuterChartData = [];\n    myData.forEach(post => {\n      let {\n        labels,\n        documents\n      } = post;\n      for (let i = 0; i < documents.length; i++) {\n        let title = documents[i].title;\n        let titleCount = 1;\n        newOuterChartData.push({\n          title: title,\n          count: titleCount\n        });\n      }\n    });\n    setOuterChartData(newOuterChartData);\n  }, [myData]);\n  const [myTitle, setTitle] = useState();\n  const [showDiv, setShowDiv] = useState(false);\n  const [myVideoFileName, setVideoFileName] = useState();\n\n  // Set value for title & videoFileName for Watch Video \n  const handleshowDiv = (title, videoFileName) => {\n    setShowDiv(true);\n    setTitle(title);\n    setVideoFileName(videoFileName);\n  };\n  const handlehideDiv = () => {\n    setShowDiv(false);\n    setTitle();\n    setVideoFileName();\n  };\n  const [facultySelected, setFaculty] = useState('');\n  const [subjectSelected, setSubject] = useState('');\n  const closeTranscript = () => {\n    document.querySelector('#displayTranscript').style.display = 'none';\n  };\n  const closeFilterBtn = () => {\n    document.querySelector('#displayFilter').style.display = 'none';\n  };\n  let [count, setCount] = useState(1);\n  let allFacultyName = [],\n    allSubjects = [];\n\n  // Set the faculty which is selected in search input of Faculty\n  const onFacultyChange = () => {\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\n    setCount(0);\n    if (selectedTeacher === \"Default\") selectedTeacher = \"\";\n    setFaculty(selectedTeacher);\n  };\n\n  // Set the subject which is selected in search input of Subject\n  const onSubjectChange = () => {\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\n    setCount(0);\n    if (selectedSubject === \"Default\") selectedSubject = \"\";\n    setSubject(selectedSubject);\n  };\n\n  // Adding condition for the filters\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\n    return facultySelected === faculty && subjectSelected === domain || facultySelected === faculty && subjectSelected === '' || facultySelected === '' && subjectSelected === domain || facultySelected === '' && subjectSelected === '';\n  };\n\n  // Displaying the Description/Audio_Transcript of the video using a popover\n  const renderDescriptionOverlay = content => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"top\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayTranscript`,\n        style: {\n          height: \"260px\",\n          width: \"252px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeTranscript\",\n            onClick: closeTranscript.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"250px\",\n            overflowX: \"hidden\"\n          },\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"descriptionBtn\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  };\n  const displayedTitles = [];\n\n  // Display the video, watch video button and description\n  const displayContent = (title, content, transcript, videoFileName) => {\n    if (!displayedTitles.includes(title)) {\n      // Check if title already displayed/exist don't show that video\n      count++;\n      displayedTitles.push(title);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displaylistContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"list-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: videoFileName,\n          controls: true,\n          height: \"360px\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"view-VideoDetails\",\n          onClick: () => handleshowDiv(title, videoFileName),\n          children: \"Watch Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), renderDescriptionOverlay(content)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const [selectedInnerSliceIndex, setSelectedInnerSliceIndex] = useState(null);\n  const [selectedOuterSliceIndex, setSelectedOuterSliceIndex] = useState(null);\n\n  // Used to display labels just outside the inner piechart\n  const handleInnerSliceClick = index => {\n    setFaculty('');\n    setSubject('');\n    setSelectedOuterSliceIndex(null);\n    setSelectedInnerSliceIndex(index);\n  };\n\n  // Used to display labels just outside the outer piechart\n  const handleOuterSliceClick = index => {\n    setFaculty('');\n    setSubject('');\n    setSelectedInnerSliceIndex(null);\n    setSelectedOuterSliceIndex(index);\n  };\n\n  // Used to reset the filters\n  const handleResetFilter = () => {\n    document.getElementById(\"inputValFaculty\").value = '';\n    document.getElementById(\"inputValSubject\").value = '';\n    setFaculty('');\n    setSubject('');\n    setCount(1);\n  };\n  useEffect(() => {\n    if (searchData !== '') {\n      setFaculty('');\n      setSubject('');\n    }\n  }, [searchData]);\n\n  // Display only 5 sentences of a audio_transcript\n  const extractFiveSentences = inputText => {\n    const sentences = inputText.split('.');\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\n    if (validSentences.length >= 5) {\n      return validSentences.slice(0, 5).join('. ') + '.';\n    } else {\n      return validSentences.join('. ') + '.';\n    }\n  };\n\n  // Display the filters\n  const renderFilterOverlay = () => {\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      rootClose: true,\n      placement: \"bottom\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        id: `displayFilter`,\n        style: {\n          height: \"260px\",\n          width: \"230px\",\n          zIndex: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          style: {\n            display: \"flex\"\n          },\n          children: [\"Filter\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"resetBtn\",\n            onClick: handleResetFilter,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"closeFilterBtn\",\n            onClick: closeFilterBtn.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            height: \"205px\",\n            width: \"242.5px\",\n            overflow: \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedValue\",\n              children: [facultySelected, \" \", subjectSelected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"facultyFilter\",\n              children: [\"Faculty\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValFaculty\",\n                list: \"select-faculty\",\n                placeholder: \"Search for faculty\",\n                onChange: onFacultyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-faculty\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for faculty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), [...new Set(allFacultyName)].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"subjectFilter\",\n              children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputValSubject\",\n                list: \"select-subject\",\n                placeholder: \"Search for subject\",\n                onChange: onSubjectChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"select-subject\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  id: \"option-keyword\",\n                  value: \"\",\n                  children: \"Search for subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), [...new Set(allSubjects)].map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: [\" \", option, \" \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 30\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"filterBtn\",\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Used to set a random value for a key in a div \n  let uniqueId = Math.floor(Math.random() * 100) + 1;\n  if (myDataLength === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"noResults\",\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayPieChart\",\n      children: [myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        if (selectedInnerData) innerlabelCount = selectedInnerData.documents.length;\n        for (let i = 0; i < documents.length; i++) {\n          allLabelCount++;\n        }\n        documents.map((doc, i) => {\n          let domain = doc.domain;\n          let faculty = doc.faculty;\n          allSubjects.push(domain);\n          allFacultyName.push(faculty);\n        });\n      }), showDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"closeBtn\",\n          onClick: handlehideDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VideoDetails, {\n          myTitle: myTitle,\n          myVideoFileName: myVideoFileName,\n          showDiv: showDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pieChartView\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 650,\n          height: 500,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: OuterChartData // Display Outer PieChart\n            ,\n            dataKey: \"count\",\n            nameKey: \"title\",\n            cx: 316,\n            cy: 242,\n            labelLine: false\n            //isAnimationActive={false}\n            ,\n            animationDuration: 0,\n            outerRadius: 142,\n            innerRadius: 118,\n            label: _ref => {\n              let {\n                cx,\n                cy,\n                midAngle,\n                innerRadius,\n                outerRadius,\n                index,\n                title\n              } = _ref;\n              const RADIAN = Math.PI / 180;\n              const radius = innerRadius + (outerRadius - innerRadius) * 1.3;\n              const x = cx + radius * Math.cos(-midAngle * RADIAN);\n              const y = cy + radius * Math.sin(-midAngle * RADIAN);\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: x,\n                y: y,\n                fill: \"black\"\n                //fill={OuterColors[index % OuterColors.length]}\n                ,\n                textAnchor: x > cx ? 'start' : 'end',\n                dominantBaseline: \"central\",\n                style: {\n                  fontSize: '13px'\n                },\n                children: title.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this);\n            },\n            onClick: handleOuterPieEnter,\n            children: OuterChartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: OuterColors[index % OuterColors.length],\n              stroke: selectedOuterSliceIndex === index ? 'black' : 'none',\n              strokeWidth: selectedOuterSliceIndex === index ? 2 : 0,\n              onClick: () => handleOuterSliceClick(index)\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: myData //Display Outer PieChart \n            ,\n            dataKey: \"label_counts\",\n            nameKey: \"labels\",\n            outerRadius: 42,\n            innerRadius: 20,\n            labelLine: false\n            //isAnimationActive={false}\n            ,\n            animationDuration: 0,\n            cx: 319,\n            cy: 242,\n            label: _ref2 => {\n              let {\n                cx,\n                cy,\n                midAngle,\n                innerRadius,\n                outerRadius,\n                index,\n                title,\n                labels\n              } = _ref2;\n              const RADIAN = Math.PI / 180;\n              const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\n              const x = cx + radius * Math.cos(-midAngle * RADIAN);\n              const y = cy + radius * Math.sin(-midAngle * RADIAN);\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: x,\n                y: y,\n                fill: InnerColors[index % InnerColors.length],\n                textAnchor: x > cx ? 'start' : 'end',\n                dominantBaseline: \"central\",\n                style: {\n                  fontSize: '12px',\n                  fontWeight: 'bold'\n                },\n                children: labels[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this);\n            },\n            onClick: handleInnerPieEnter,\n            children: myData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: InnerColors[index % InnerColors.length],\n              stroke: selectedInnerSliceIndex === index ? 'black' : 'none',\n              strokeWidth: selectedInnerSliceIndex === index ? 2 : 0,\n              onClick: () => handleInnerSliceClick(index)\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayPieChartContent\",\n        children: [showInnerContent && selectedInnerData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            if (selectedInnerData.labels[0] === labels) {\n              return documents.map((doc, i) => {\n                let title = doc.title;\n                let content = doc.content;\n                let transcript = doc.transcript;\n                //let domain = doc.domain\n                //let faculty = doc.faculty\n                //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\n                let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n                let facultyName, domainName;\n                {\n                  myallData.map(post => {\n                    let {\n                      title,\n                      summary,\n                      faculty,\n                      domain\n                    } = post;\n                    let newTitle = title;\n                    summary = summary[0].toUpperCase() + summary.slice(1);\n                    if (doc.title === newTitle) {\n                      content = extractFiveSentences(summary);\n                      facultyName = faculty;\n                      domainName = domain;\n                    }\n                  });\n                }\n                innerlabelCount = count;\n                display = true;\n                let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n                if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 31\n                }, this);\n              });\n            }\n          }), display && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"All retrieved results for \", selectedTopic, \": \", innerlabelCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this), renderFilterOverlay()]\n          }, uniqueId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), showOuterContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"All retrieved result for \", selectedTopic, \": \", 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)\n          }, uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), myData.map(post => {\n            let {\n              documents\n            } = post;\n            return documents.map((doc, i) => {\n              let title = doc.title;\n              let content = doc.content;\n              let transcript = doc.transcript;\n              let domain = doc.domain;\n              let faculty = doc.faculty;\n              //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\n              let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n              if (title === (selectedOuterData === null || selectedOuterData === void 0 ? void 0 : selectedOuterData.title) && flag === true) {\n                flag = false;\n                {\n                  myallData.map(post => {\n                    let {\n                      title,\n                      summary\n                    } = post;\n                    let newTitle = title;\n                    summary = summary[0].toUpperCase() + summary.slice(1);\n                    if (doc.title === newTitle) content = extractFiveSentences(summary);\n                  });\n                }\n                let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected);\n                if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 31\n                }, this);\n              }\n            });\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), showAllInnerContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piechart-content\",\n          children: [myData.map(post => {\n            let {\n              labels,\n              documents\n            } = post;\n            labels = labels[0];\n            return documents.map((doc, i) => {\n              let title = doc.title;\n              let content = doc.content;\n              let domain = doc.domain;\n              let faculty = doc.faculty;\n              let transcript = doc.transcript;\n              let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4';\n              {\n                myallData.map(post => {\n                  let {\n                    title,\n                    summary\n                  } = post;\n                  let newTitle = title;\n                  summary = summary[0].toUpperCase() + summary.slice(1);\n                  if (doc.title === newTitle) content = extractFiveSentences(summary);\n                });\n              }\n              allLabelCount = count;\n              display = true;\n              let filters = addfilter(faculty, facultySelected, domain, subjectSelected);\n              if (filters) return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", displayContent(title, content, transcript, videoFileName), \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 29\n              }, this);\n            });\n          }), display && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"All retrieved results: \", allLabelCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this), renderFilterOverlay()]\n          }, uniqueId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Charts, \"0BLJQEq+ojakyfgTdBvBeA+PaHs=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["axios","React","useState","useEffect","PieChart","Pie","Label","Tooltip","Cell","Legend","VideoDetails","Popover","OverlayTrigger","jsxDEV","_jsxDEV","Charts","props","_s","searchData","myData","setMyData","selectedInnerData","setSelectedInnerData","selectedOuterData","setSelectedOuterData","OuterChartData","setOuterChartData","InnerColors","OuterColors","selectedTopic","setSelectedTopic","myallData","setmyallData","flag","display","jsonPath","jsonPathCluster","myDataLength","innerlabelCount","allLabelCount","showInnerContent","setShowInnerContent","showOuterContent","setShowOuterContent","showAllInnerContent","setShowAllInnerContent","handleInnerPieEnter","data","labels","handleOuterPieEnter","name","includes","get","then","res","newOuterChartData","forEach","post","documents","i","length","title","titleCount","push","count","myTitle","setTitle","showDiv","setShowDiv","myVideoFileName","setVideoFileName","handleshowDiv","videoFileName","handlehideDiv","facultySelected","setFaculty","subjectSelected","setSubject","closeTranscript","document","querySelector","style","closeFilterBtn","setCount","allFacultyName","allSubjects","onFacultyChange","selectedTeacher","getElementById","value","onSubjectChange","selectedSubject","addfilter","faculty","domain","renderDescriptionOverlay","content","trigger","rootClose","placement","overlay","id","height","width","zIndex","children","Header","as","onClick","bind","class","fileName","_jsxFileName","lineNumber","columnNumber","Body","overflowX","displayedTitles","displayContent","transcript","className","src","controls","selectedInnerSliceIndex","setSelectedInnerSliceIndex","selectedOuterSliceIndex","setSelectedOuterSliceIndex","handleInnerSliceClick","index","handleOuterSliceClick","handleResetFilter","extractFiveSentences","inputText","sentences","split","validSentences","filter","sentence","trim","slice","join","renderFilterOverlay","overflow","list","placeholder","onChange","Set","map","option","uniqueId","Math","floor","random","doc","dataKey","nameKey","cx","cy","labelLine","animationDuration","outerRadius","innerRadius","label","_ref","midAngle","RADIAN","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","fontSize","toUpperCase","entry","stroke","strokeWidth","_ref2","fontWeight","facultyName","domainName","summary","newTitle","filters","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy2/my-app/src/Components/SubComponents/PieChart/Charts.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { PieChart, Pie, Label, Tooltip, Cell, Legend } from \"recharts\"\r\nimport VideoDetails from \"../VideoDetails\"\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\nconst Charts = (props) => {\r\n  const searchData = props.searchData\r\n  const [myData, setMyData] = useState([])\r\n  const [selectedInnerData, setSelectedInnerData] = useState(null)\r\n  const [selectedOuterData, setSelectedOuterData] = useState(null)\r\n  const [OuterChartData, setOuterChartData] = useState([])\r\n\r\n  const InnerColors = [\"#0088FE\",\"#00C49F\",\"#FFBB28\",\"#FF8042\",\"#AF19FF\",\"#F2F2F2\",]\r\n  const OuterColors = [ \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#e74c3c\", \"#95a5a6\", \"#2ecc71\", \"#8e44ad\", \"#d35400\", \"#7f8c8d\", \"#27ae60\", ]\r\n\r\n  const [selectedTopic, setSelectedTopic] = useState(null)\r\n  const [myallData, setmyallData] = useState([])\r\n\r\n  let flag = true, display = false\r\n  let jsonPath, jsonPathCluster, myDataLength, innerlabelCount=0, allLabelCount=0 \r\n\r\n  let [showInnerContent, setShowInnerContent] = useState(false)\r\n  let [showOuterContent, setShowOuterContent] = useState(false)\r\n  let [showAllInnerContent, setShowAllInnerContent] = useState(true)\r\n\r\n  // Set the selected data for inner piechart\r\n  const handleInnerPieEnter = (data) => {\r\n    setSelectedInnerData(data)\r\n    setSelectedTopic(data.labels[0])\r\n    setShowOuterContent(false)\r\n    setShowAllInnerContent(false)\r\n    setShowInnerContent(true)\r\n  }\r\n\r\n  // Set the selected data for outer piechart\r\n  const handleOuterPieEnter = (data) => {\r\n    setSelectedOuterData(data)\r\n    setSelectedTopic(data.name)\r\n    setShowInnerContent(false)\r\n    setShowAllInnerContent(false)\r\n    setShowOuterContent(true)\r\n  }\r\n\r\n  if (\"INDIA\".includes(searchData)) {\r\n    jsonPathCluster = \"./india-cluster.json\"\r\n    jsonPath = './india.json'\r\n  } \r\n  else if (\"PHYSICS\".includes(searchData)) {\r\n    jsonPathCluster = \"./physics-cluster.json\"\r\n    jsonPath = './physics.json'\r\n  } \r\n  else if (\"LAW\".includes(searchData)) {\r\n    jsonPathCluster = \"./law-cluster.json\"\r\n    jsonPath = './law.json'\r\n  }\r\n  else {\r\n    myDataLength = 0      // If that keyword doesn't exist\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPath).then((res) => setmyallData(res.data))\r\n  }, [searchData])\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPathCluster).then((res) => setMyData(res.data))\r\n  }, [searchData])\r\n\r\n  // Set the data for outer piechart \r\n  useEffect(() => {\r\n    let newOuterChartData = []\r\n    myData.forEach((post) => {\r\n      let { labels,documents } = post\r\n      \r\n      for(let i=0; i<documents.length; i++) {\r\n        let title = documents[i].title\r\n        let titleCount = 1\r\n        newOuterChartData.push({ title: title, count: titleCount })\r\n      }\r\n    })\r\n    setOuterChartData(newOuterChartData)\r\n  }, [myData])\r\n\r\n  const [myTitle, setTitle] = useState();\r\n  const [showDiv, setShowDiv] = useState(false);\r\n  const [myVideoFileName, setVideoFileName] = useState();\r\n\r\n  // Set value for title & videoFileName for Watch Video \r\n  const handleshowDiv = (title,videoFileName) => {\r\n    setShowDiv(true)\r\n    setTitle(title)\r\n    setVideoFileName(videoFileName)\r\n  };\r\n\r\n  const handlehideDiv = () => {\r\n    setShowDiv(false)\r\n    setTitle()\r\n    setVideoFileName()\r\n  }\r\n\r\n  const [facultySelected, setFaculty] = useState('');\r\n  const [subjectSelected, setSubject] = useState('');\r\n\r\n  const closeTranscript = () => {\r\n    document.querySelector('#displayTranscript').style.display = 'none'\r\n  }\r\n\r\n  const closeFilterBtn = () => {\r\n    document.querySelector('#displayFilter').style.display = 'none'\r\n  }\r\n\r\n  let [count, setCount] = useState(1);\r\n  let allFacultyName = [], allSubjects = [];\r\n\r\n  // Set the faculty which is selected in search input of Faculty\r\n  const onFacultyChange = () => {\r\n    let selectedTeacher = document.getElementById(\"inputValFaculty\").value;\r\n    setCount(0)\r\n\r\n    if(selectedTeacher === \"Default\") \r\n      selectedTeacher = \"\";\r\n\r\n    setFaculty(selectedTeacher)\r\n  };\r\n\r\n  // Set the subject which is selected in search input of Subject\r\n  const onSubjectChange = () => {\r\n    let selectedSubject = document.getElementById(\"inputValSubject\").value;\r\n    setCount(0)\r\n\r\n    if(selectedSubject === \"Default\") \r\n      selectedSubject = \"\";\r\n\r\n    setSubject(selectedSubject)\r\n  };\r\n\r\n  // Adding condition for the filters\r\n  const addfilter = (faculty, facultySelected, domain, subjectSelected) => {\r\n    return (facultySelected === faculty && subjectSelected === domain) || \r\n      (facultySelected === faculty && subjectSelected === '') ||\r\n      (facultySelected === '' && subjectSelected === domain) ||\r\n      (facultySelected === '' && subjectSelected === '')\r\n  }\r\n\r\n  // Displaying the Description/Audio_Transcript of the video using a popover\r\n  const renderDescriptionOverlay = (content) => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\" rootClose placement=\"top\"\r\n        overlay={\r\n          <Popover id={`displayTranscript`} style={{height:\"260px\",width:\"252px\",zIndex:0}}>\r\n            <Popover.Header as=\"h3\">\r\n              Description\r\n              <button id='closeTranscript' onClick={closeTranscript.bind(this)}><i class=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{height:\"205px\",width:\"250px\", overflowX:\"hidden\"}}>\r\n              {content}\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      > \r\n        <button id='descriptionBtn'>Description</button>\r\n      </OverlayTrigger>\r\n    )\r\n  }\r\n\r\n  const displayedTitles = [];\r\n\r\n  // Display the video, watch video button and description\r\n  const displayContent = (title,content,transcript,videoFileName) => {\r\n    if (!displayedTitles.includes(title)){    // Check if title already displayed/exist don't show that video\r\n      count++;\r\n      displayedTitles.push(title);\r\n      \r\n      return (\r\n        <div className=\"displaylistContent\">\r\n          <h4 id=\"list-title\">{title}</h4>\r\n          <video src={videoFileName} controls height=\"360px\" width=\"100%\"></video>\r\n          <button id='view-VideoDetails' onClick={() => handleshowDiv(title, videoFileName)}>Watch Video</button>\r\n          {renderDescriptionOverlay(content)}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const [selectedInnerSliceIndex, setSelectedInnerSliceIndex] = useState(null);\r\n  const [selectedOuterSliceIndex, setSelectedOuterSliceIndex] = useState(null);\r\n  \r\n  // Used to display labels just outside the inner piechart\r\n  const handleInnerSliceClick = (index) => {\r\n    setFaculty('')\r\n    setSubject('')\r\n    setSelectedOuterSliceIndex(null);\r\n    setSelectedInnerSliceIndex(index);\r\n  };\r\n  \r\n  // Used to display labels just outside the outer piechart\r\n  const handleOuterSliceClick = (index) => {\r\n    setFaculty('')\r\n    setSubject('')\r\n    setSelectedInnerSliceIndex(null);\r\n    setSelectedOuterSliceIndex(index);\r\n  };\r\n\r\n  // Used to reset the filters\r\n  const handleResetFilter =() => {\r\n    document.getElementById(\"inputValFaculty\").value = ''\r\n    document.getElementById(\"inputValSubject\").value = ''\r\n    setFaculty('')\r\n    setSubject('')\r\n    setCount(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(searchData !== '') {\r\n      setFaculty('');\r\n      setSubject('');\r\n    }\r\n  }, [searchData]);\r\n\r\n  // Display only 5 sentences of a audio_transcript\r\n  const extractFiveSentences = (inputText) => {\r\n    const sentences = inputText.split('.');\r\n    const validSentences = sentences.filter(sentence => sentence.trim() !== '');\r\n  \r\n    if (validSentences.length >= 5) {\r\n      return validSentences.slice(0, 5).join('. ') + '.';\r\n    } else {\r\n      return validSentences.join('. ') + '.';\r\n    }\r\n  }\r\n\r\n  // Display the filters\r\n  const renderFilterOverlay = () => {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        rootClose\r\n        placement=\"bottom\"\r\n        overlay={\r\n          <Popover id={`displayFilter`} style={{ height: \"260px\", width: \"230px\", zIndex: 0 }}>\r\n            <Popover.Header as=\"h3\" style={{display: \"flex\"}}>\r\n              Filter\r\n              <button id=\"resetBtn\" onClick={handleResetFilter}>Reset</button>\r\n              <button id='closeFilterBtn' onClick={closeFilterBtn.bind(this)}><i className=\"fa fa-close\"></i></button>\r\n            </Popover.Header>\r\n            <Popover.Body style={{ height: \"205px\", width: \"242.5px\", overflow: \"hidden\" }}>\r\n              <div>\r\n                <div className=\"selectedValue\">\r\n                  {facultySelected} {subjectSelected}\r\n                </div>\r\n                <div id='facultyFilter'>\r\n                  Faculty\r\n                  \r\n                  <input id=\"inputValFaculty\" list=\"select-faculty\" placeholder=\"Search for faculty\" onChange={onFacultyChange} />\r\n                  <datalist id=\"select-faculty\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for faculty</option>\r\n                    {[...new Set(allFacultyName)].map((option, index) => (\r\n                      <option key={index}>{option}</option>\r\n                    ))}\r\n                  </datalist>\r\n                </div>\r\n\r\n                <div id='subjectFilter'>\r\n                  Subject\r\n\r\n                  <input id=\"inputValSubject\" list=\"select-subject\" placeholder=\"Search for subject\" onChange={onSubjectChange} />\r\n                  <datalist id=\"select-subject\">\r\n                    <option id=\"option-keyword\" value=\"\">Search for subject</option>\r\n                    {[...new Set(allSubjects)].map((option, index) => {\r\n                      return <option key={index}> {option} </option>;\r\n                    })}\r\n                  </datalist>\r\n                </div>\r\n              </div>\r\n            </Popover.Body>\r\n          </Popover>\r\n        }\r\n      >\r\n        <button id='filterBtn'>Filter</button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n\r\n  // Used to set a random value for a key in a div \r\n  let uniqueId = Math.floor(Math.random() * 100) + 1;\r\n\r\n  if(myDataLength === 0){\r\n    return (\r\n      <h3 id='noResults'>No results found</h3>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"displayPieChart\">\r\n        {myData.map((post) => {\r\n          let { labels, documents } = post\r\n  \r\n          labels = labels[0]\r\n          \r\n          if(selectedInnerData)\r\n            innerlabelCount = selectedInnerData.documents.length\r\n  \r\n          for(let i=0;i<documents.length;i++){\r\n            allLabelCount++;\r\n          }\r\n  \r\n          documents.map((doc, i) => {\r\n            let domain = doc.domain\r\n            let faculty = doc.faculty\r\n  \r\n            allSubjects.push(domain)\r\n            allFacultyName.push(faculty)\r\n          })\r\n        })}\r\n        \r\n        {showDiv && (\r\n          <div id=\"overlay\">\r\n            <button id='closeBtn' onClick={handlehideDiv}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <VideoDetails myTitle={myTitle} myVideoFileName={myVideoFileName} showDiv={showDiv}/>\r\n          </div>\r\n        )}\r\n  \r\n        <div id=\"pieChartView\">\r\n          <PieChart width={650} height={500}>\r\n            <Pie\r\n              data={OuterChartData}            // Display Outer PieChart\r\n              dataKey=\"count\"\r\n              nameKey=\"title\"\r\n              cx={316}\r\n              cy={242}\r\n              labelLine={false}\r\n              //isAnimationActive={false}\r\n              animationDuration={0}\r\n              outerRadius={142}\r\n              innerRadius={118}\r\n              label={({ cx, cy, midAngle, innerRadius, outerRadius, index, title }) => {   \r\n                const RADIAN = Math.PI / 180;\r\n                const radius = innerRadius + (outerRadius - innerRadius) * 1.3;\r\n                const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n                return (\r\n                  <text\r\n                    x={x}\r\n                    y={y}\r\n                    fill=\"black\"\r\n                    //fill={OuterColors[index % OuterColors.length]}\r\n                    textAnchor={x > cx ? 'start' : 'end'}\r\n                    dominantBaseline=\"central\"\r\n                    style={{ fontSize: '13px'}}\r\n                  >\r\n                    {title.toUpperCase()}\r\n                  </text>\r\n                );\r\n              }}\r\n              \r\n              onClick={handleOuterPieEnter}\r\n            >\r\n              {OuterChartData.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={OuterColors[index % OuterColors.length]}\r\n                  stroke={selectedOuterSliceIndex === index ? 'black' : 'none'}\r\n                  strokeWidth={selectedOuterSliceIndex === index ? 2 : 0}\r\n                  onClick={() => handleOuterSliceClick(index)}\r\n                />\r\n              ))}\r\n            </Pie>\r\n  \r\n            <Pie\r\n              data={myData}                   //Display Outer PieChart \r\n              dataKey=\"label_counts\"\r\n              nameKey=\"labels\"\r\n              outerRadius={42}\r\n              innerRadius={20}\r\n              labelLine={false}\r\n              //isAnimationActive={false}\r\n              animationDuration={0}\r\n              cx={319}\r\n              cy={242}\r\n              label={({ cx, cy, midAngle, innerRadius, outerRadius, index, title, labels }) => {\r\n                const RADIAN = Math.PI / 180;\r\n                const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\r\n                const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n                return (\r\n                  <text\r\n                    x={x}\r\n                    y={y}\r\n                    fill={InnerColors[index % InnerColors.length]}\r\n                    textAnchor={x > cx ? 'start' : 'end'}\r\n                    dominantBaseline=\"central\"\r\n                    style={{ fontSize: '12px', fontWeight: 'bold'}}\r\n                  >\r\n                    {labels[0].toUpperCase()}\r\n                  </text>\r\n                );\r\n              }}\r\n              onClick={handleInnerPieEnter}\r\n            >\r\n              {myData.map((entry, index) => (\r\n                <Cell\r\n                key={`cell-${index}`}\r\n                fill={InnerColors[index % InnerColors.length]}\r\n                stroke={selectedInnerSliceIndex === index ? 'black' : 'none'}\r\n                strokeWidth={selectedInnerSliceIndex === index ? 2 : 0}\r\n                onClick={() => handleInnerSliceClick(index)}\r\n              />\r\n              ))}\r\n            </Pie>\r\n          </PieChart>\r\n        </div>\r\n  \r\n        <div className=\"displayPieChartContent\">\r\n\r\n          {/* Displaying the label data(India & Bengal) which has been clicked by user in inner piechart*/}\r\n          {showInnerContent && selectedInnerData && (\r\n            <div className=\"piechart-content\">\r\n              {myData.map((post) => {\r\n                let { labels, documents } = post\r\n\r\n                labels = labels[0]\r\n\r\n                if (selectedInnerData.labels[0] === labels) {\r\n                  return documents.map((doc, i) => {\r\n                    let title = doc.title\r\n                    let content = doc.content\r\n                    let transcript = doc.transcript\r\n                    //let domain = doc.domain\r\n                    //let faculty = doc.faculty\r\n                    //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\r\n                    let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n\r\n                    let facultyName, domainName\r\n\r\n                    {myallData.map((post) => {\r\n                      let { title, summary, faculty, domain } = post \r\n                      let newTitle = title\r\n    \r\n                      summary = summary[0].toUpperCase() + summary.slice(1,)\r\n\r\n                      if(doc.title === newTitle){\r\n                        content = extractFiveSentences(summary)\r\n                        facultyName = faculty\r\n                        domainName = domain\r\n                      }\r\n                    })}\r\n\r\n                    innerlabelCount = count\r\n                    display = true\r\n\r\n                    let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n\r\n                    if(filters)\r\n                      return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                  })\r\n                }\r\n              })}\r\n              \r\n              {display && (\r\n                <div className=\"label-count\" key={uniqueId}>\r\n                  <h4>All retrieved results for {selectedTopic}: {innerlabelCount}</h4>\r\n                  {renderFilterOverlay()}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n  \r\n          {/* Displaying the label data(India & Bengal) which has been clicked by user in outer piechart*/}\r\n          {showOuterContent && (\r\n            <div className=\"piechart-content\">\r\n              <div className=\"label-count\" key={uniqueId}>\r\n                <h4>All retrieved result for {selectedTopic}: {1}</h4>\r\n              </div>\r\n              {myData.map((post) => {\r\n                let { documents } = post\r\n  \r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  let content = doc.content\r\n                  let transcript = doc.transcript\r\n                  let domain = doc.domain\r\n                  let faculty = doc.faculty\r\n                  //let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\r\n                  let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n  \r\n                  if (title === selectedOuterData?.title && flag === true) {\r\n                    flag = false\r\n  \r\n                    {myallData.map((post) => {\r\n                      let { title, summary } = post \r\n                      let newTitle = title\r\n    \r\n                      summary = summary[0].toUpperCase() + summary.slice(1,)\r\n\r\n                      if(doc.title === newTitle)\r\n                        content = extractFiveSentences(summary)\r\n                    })}\r\n  \r\n                    let filters = addfilter(facultyName, facultySelected, domainName, subjectSelected)\r\n  \r\n                    if(filters)\r\n                      return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                  }\r\n                })\r\n              })}\r\n            </div>\r\n          )}\r\n  \r\n          {/* Displaying all the data which exist in clustered file */}\r\n          {showAllInnerContent && (\r\n            <div className=\"piechart-content\">\r\n              {myData.map((post) => {\r\n                let { labels, documents } = post\r\n\r\n                labels = labels[0]\r\n\r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  let content = doc.content\r\n                  let domain = doc.domain\r\n                  let faculty = doc.faculty\r\n                  let transcript = doc.transcript\r\n                  let videoFileName = './ImgVideoData' + '/video/' + doc.title + '.mp4'\r\n\r\n                  {myallData.map((post) => {\r\n                    let { title, summary } = post \r\n                    let newTitle = title\r\n  \r\n                    summary = summary[0].toUpperCase() + summary.slice(1,)\r\n                    \r\n                    if(doc.title === newTitle)\r\n                      content = extractFiveSentences(summary)\r\n                  })}\r\n\r\n                  allLabelCount = count\r\n                  display = true\r\n\r\n                  let filters = addfilter(faculty, facultySelected, domain, subjectSelected)\r\n\r\n                  if(filters)\r\n                    return (<div key={i}> {displayContent(title,content,transcript,videoFileName)} </div>)\r\n                })\r\n              })}\r\n\r\n              {display && (\r\n                <div className=\"label-count\" key={uniqueId}>\r\n                  <h4>All retrieved results: {allLabelCount}</h4>\r\n                  {renderFilterOverlay()} \r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Charts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}