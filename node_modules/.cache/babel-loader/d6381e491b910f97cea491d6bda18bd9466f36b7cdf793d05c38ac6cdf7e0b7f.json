{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\VideoDetails.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst removeDuplicateKeywords = () => {\n  const list = [];\n  const set = new Set();\n  return {\n    push(element) {\n      if (!set.has(element)) {\n        list.push(element);\n        set.add(element);\n      }\n    },\n    get() {\n      return list;\n    }\n  };\n};\nconst toSeconds = time => {\n  let seconds = time.split(':');\n  let hr = parseInt(seconds[0], 10);\n  let min = parseInt(seconds[1], 10);\n  let sec = parseInt(seconds[2], 10);\n  seconds = hr * 3600 + min * 60 + sec;\n  return seconds;\n};\nfunction VideoDetails() {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState(0);\n  const [instance, setInstance] = useState(0);\n  let allKeywords = removeDuplicateKeywords();\n  let localtitle = localStorage.getItem('title');\n  let localfaculty = localStorage.getItem('faculty');\n  let localdomain = localStorage.getItem('domain');\n  let video_url = localStorage.getItem('videoUrl');\n  let temp = '';\n  video_url = video_url.slice(0, 25) + \"uc?export=view&id=\" + video_url.slice(32, 65);\n  const handleStart = startTime => {\n    if (instance) {\n      if (isNaN(startTime)) {\n        startTime = \"0.0\";\n      }\n      instance.seekTo(startTime);\n    }\n  };\n  useEffect(() => {\n    axios.get('./india.json').then(res => setMyData(res.data));\n  }, []);\n  const myDiv = document.createElement('div');\n  myDiv.className = 'keywordContainer';\n  const displayTimeStamp = (searchKeyword, orginaltimeStamp, imgSrc) => {\n    myDiv.innerHTML = '';\n    const timeStamp = new Set(orginaltimeStamp);\n    if (temp !== searchKeyword) {\n      const btn = document.getElementById('videoDetails-searchBtn');\n      btn.addEventListener('click', function handleClick() {\n        myDiv.replaceChildren();\n        myDiv.style.border = 'none';\n      });\n      myDiv.replaceChildren();\n      //myDiv.style.border = \"2px solid black\"\n    }\n\n    for (let startTime of timeStamp.values()) {\n      let originalTime = startTime;\n      startTime = startTime.split(':');\n      let hr = parseInt(startTime[0], 10);\n      let min = parseInt(startTime[1], 10);\n      let sec = parseInt(startTime[2], 10);\n      startTime = hr * 3600 + min * 60 + sec;\n      const photoDiv = document.createElement('div');\n      photoDiv.className = 'photodiv-container';\n      photoDiv.onclick = handleStart.bind(this, startTime);\n      let img = document.createElement(\"img\");\n      img.className = 'keywordImage';\n      let imgHover = document.createElement(\"img\");\n      //imgHover.src = \"image.png\";\n      imgHover.className = 'imgHoverEffect';\n      img.src = 'rbi/' + imgSrc;\n      imgHover.src = imgSrc;\n      photoDiv.appendChild(img);\n      //photoDiv.appendChild(imgHover);\n\n      const myButton = document.createElement('button');\n      myButton.innerHTML = originalTime;\n      myButton.id = 'seekToBtn';\n      myButton.onclick = handleStart.bind(this, startTime);\n      photoDiv.append(myButton);\n      myDiv.append(photoDiv);\n      photoDiv.addEventListener('mouseover', () => {\n        imgHover.style.display = 'block';\n        imgHover.style.left = photoDiv.offsetLeft + 'px';\n        imgHover.style.bottom = photoDiv.offsetTop + 'px';\n        //imgHover.style.bottom = (photoDiv.offsetTop + photoDiv.offsetHeight) + 'px';\n        //imgHover.style.bottom = (window.innerHeight - photoDiv.offsetTop) + 'px';\n      });\n\n      photoDiv.addEventListener('mouseout', () => {\n        imgHover.style.display = 'none';\n      });\n    }\n    document.body.append(myDiv);\n  };\n  const handleSearch = () => {\n    let selectedkeyword = document.getElementById('inputVal').value;\n    selectedkeyword = selectedkeyword.toUpperCase();\n    if (selectedkeyword === \"Default\") selectedkeyword = '';\n    setSearchKeyword(selectedkeyword);\n  };\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const chunks = [];\n  const handleTimeUpdate = newTime => {\n    //instance.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const handleDurationChange = () => {\n    setDuration(instance.current.duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-data\",\n      children: myData.map(post => {\n        let {\n          title,\n          faculty,\n          domain,\n          keyframes_text,\n          chapters_list,\n          image_metadata\n        } = post;\n        title = title.toUpperCase();\n        faculty = faculty.toUpperCase();\n        domain = domain.toUpperCase();\n        localtitle = localtitle.toUpperCase();\n        localfaculty = localfaculty.toUpperCase();\n        localdomain = localdomain.toUpperCase();\n        if (title === localtitle) {\n          let len = Object.keys(chapters_list).length;\n          let timeStamp = [];\n          let imgSrc;\n          for (let i = 1; i <= len; i++) {\n            let obj = chapters_list[i];\n            let startTime = obj[0];\n            let imageData = image_metadata[i];\n            let imagePath = imageData[0];\n            let keywords = obj[1];\n            let obj2 = keyframes_text[i];\n            let endTime = obj2[1];\n            let startTimeSeconds = toSeconds(startTime);\n            let endTimeSeconds = toSeconds(endTime);\n            const colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\"];\n            const newChunk = {\n              start: startTimeSeconds,\n              end: endTimeSeconds - 1,\n              //color: colors[Math.floor(Math.random() * colors.length)],\n              color: \"gray\",\n              topic: keywords\n            };\n            chunks.push(newChunk);\n            if (keywords === searchKeyword) {\n              imgSrc = imagePath;\n            }\n            allKeywords.push(keywords);\n            keywords = keywords.toUpperCase();\n            if (searchKeyword === '') return;\n            if (keywords.includes(searchKeyword)) timeStamp.push(startTime);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: displayTimeStamp(searchKeyword, timeStamp, imgSrc)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        src: video_url,\n        onTimeUpdate: () => setCurrentTime(videoRef.current.currentTime),\n        onDurationChange: handleDurationChange,\n        height: 360,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"progressBar\",\n        duration: duration,\n        onTimeUpdate: handleTimeUpdate,\n        chunks: chunks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keywords-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"inputVal\",\n          list: \"select-keyword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"select-keyword\",\n          placeholder: \"Pick a keyword\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"option-keyword\",\n            value: \"\",\n            children: \"Select a keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), allKeywords.get().sort().map((option, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", option, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 26\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"videoDetails-searchBtn\",\n          id: \"videoDetails-searchBtn\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoDetails, \"AiPupyCaoehBt0BaeLX3TkKZaEU=\");\n_c = VideoDetails;\nexport default VideoDetails;\nvar _c;\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"names":["axios","ReactPlayer","React","useState","useEffect","useRef","ProgressBar","jsxDEV","_jsxDEV","removeDuplicateKeywords","list","set","Set","push","element","has","add","get","toSeconds","time","seconds","split","hr","parseInt","min","sec","VideoDetails","_s","myData","setMyData","searchKeyword","setSearchKeyword","instance","setInstance","allKeywords","localtitle","localStorage","getItem","localfaculty","localdomain","video_url","temp","slice","handleStart","startTime","isNaN","seekTo","then","res","data","myDiv","document","createElement","className","displayTimeStamp","orginaltimeStamp","imgSrc","innerHTML","timeStamp","btn","getElementById","addEventListener","handleClick","replaceChildren","style","border","values","originalTime","photoDiv","onclick","bind","img","imgHover","src","appendChild","myButton","id","append","display","left","offsetLeft","bottom","offsetTop","body","handleSearch","selectedkeyword","value","toUpperCase","duration","setDuration","currentTime","setCurrentTime","chunks","handleTimeUpdate","newTime","handleDurationChange","current","children","map","post","title","faculty","domain","keyframes_text","chapters_list","image_metadata","len","Object","keys","length","i","obj","imageData","imagePath","keywords","obj2","endTime","startTimeSeconds","endTimeSeconds","colors","newChunk","start","end","color","topic","includes","fileName","_jsxFileName","lineNumber","columnNumber","ref","videoRef","onTimeUpdate","onDurationChange","height","controls","placeholder","sort","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app/src/Components/SubComponents/VideoDetails.js"],"sourcesContent":["import axios from \"axios\";\r\nimport ReactPlayer from \"react-player\";\r\nimport React, { useState, useEffect, useRef} from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst removeDuplicateKeywords = () => {\r\n  const list = [];\r\n  const set = new Set();\r\n\r\n  return {\r\n    push(element) {\r\n      if (!set.has(element)) {\r\n        list.push(element);\r\n        set.add(element);\r\n      }\r\n    },\r\n    get() {\r\n      return list;\r\n    }\r\n  };\r\n}\r\n\r\nconst toSeconds = (time) => {\r\n  let seconds = time.split(':')\r\n\r\n  let hr = parseInt(seconds[0], 10);\r\n  let min = parseInt(seconds[1], 10);\r\n  let sec = parseInt(seconds[2], 10);\r\n  \r\n  seconds = (hr * 3600) + (min * 60) + sec;\r\n\r\n  return seconds\r\n}\r\n\r\nfunction VideoDetails() {\r\n  const [myData, setMyData] = useState([])\r\n  const [searchKeyword, setSearchKeyword] = useState(0);\r\n  const [instance, setInstance] = useState(0);\r\n\r\n  let allKeywords = removeDuplicateKeywords();\r\n  let localtitle = localStorage.getItem('title')\r\n  let localfaculty = localStorage.getItem('faculty')\r\n  let localdomain = localStorage.getItem('domain')\r\n  let video_url = localStorage.getItem('videoUrl')\r\n  let temp=''\r\n\r\n  video_url = video_url.slice(0,25) + \"uc?export=view&id=\" + video_url.slice(32,65)\r\n  \r\n  const handleStart = (startTime) => {\r\n    if(instance) {\r\n      if(isNaN(startTime)) {\r\n        startTime = \"0.0\";\r\n      }\r\n      instance.seekTo(startTime);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get('./india.json')\r\n      .then((res) => setMyData(res.data)\r\n    )\r\n  }, []);\r\n  \r\n  const myDiv = document.createElement('div');\r\n  myDiv.className = 'keywordContainer'\r\n\r\n  const displayTimeStamp = (searchKeyword,orginaltimeStamp,imgSrc) => {\r\n    myDiv.innerHTML = ''\r\n    const timeStamp = new Set(orginaltimeStamp);\r\n\r\n    if(temp !== searchKeyword){\r\n      const btn = document.getElementById('videoDetails-searchBtn');\r\n      btn.addEventListener('click', function handleClick() {\r\n        myDiv.replaceChildren();\r\n        myDiv.style.border = 'none'\r\n      });\r\n      myDiv.replaceChildren();\r\n      //myDiv.style.border = \"2px solid black\"\r\n    }\r\n    \r\n    for(let startTime of timeStamp.values()){\r\n      let originalTime = startTime\r\n      startTime = startTime.split(':')\r\n\r\n      let hr = parseInt(startTime[0], 10);\r\n      let min = parseInt(startTime[1], 10);\r\n      let sec = parseInt(startTime[2], 10);\r\n\r\n      startTime = (hr * 3600) + (min * 60) + sec\r\n\r\n      const photoDiv = document.createElement('div');\r\n      photoDiv.className = 'photodiv-container';\r\n      photoDiv.onclick = handleStart.bind(this,startTime);\r\n      \r\n      let img = document.createElement(\"img\");\r\n      img.className = 'keywordImage'\r\n      \r\n      let imgHover = document.createElement(\"img\");\r\n      //imgHover.src = \"image.png\";\r\n      imgHover.className = 'imgHoverEffect'\r\n\r\n\r\n      img.src = 'rbi/'+imgSrc;\r\n      imgHover.src = imgSrc;\r\n\r\n      photoDiv.appendChild(img);\r\n      //photoDiv.appendChild(imgHover);\r\n\r\n      const myButton = document.createElement('button');\r\n      myButton.innerHTML = originalTime;\r\n      myButton.id = 'seekToBtn';\r\n      myButton.onclick = handleStart.bind(this,startTime);\r\n\r\n      photoDiv.append(myButton);\r\n      myDiv.append(photoDiv);\r\n      \r\n      photoDiv.addEventListener('mouseover', () => {\r\n        imgHover.style.display = 'block';\r\n        imgHover.style.left = photoDiv.offsetLeft + 'px';\r\n        imgHover.style.bottom = (photoDiv.offsetTop) + 'px';\r\n        //imgHover.style.bottom = (photoDiv.offsetTop + photoDiv.offsetHeight) + 'px';\r\n        //imgHover.style.bottom = (window.innerHeight - photoDiv.offsetTop) + 'px';\r\n      });\r\n      \r\n      photoDiv.addEventListener('mouseout', () => {\r\n        imgHover.style.display = 'none';\r\n      });\r\n    }\r\n        \r\n    document.body.append(myDiv);  \r\n  }\r\n\r\n  const handleSearch = () => {\r\n    let selectedkeyword = document.getElementById('inputVal').value\r\n    \r\n    selectedkeyword = selectedkeyword.toUpperCase()\r\n\r\n    if(selectedkeyword === \"Default\")\r\n        selectedkeyword = ''\r\n    setSearchKeyword(selectedkeyword)\r\n  }\r\n\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const chunks = [];\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    //instance.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n  };\r\n  const handleDurationChange = () => {\r\n    setDuration(instance.current.duration);\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoDetails\">  \r\n      <div className=\"videoDetails-data\">\r\n        {\r\n          myData.map((post) => {\r\n            let { title, faculty, domain, keyframes_text, chapters_list, image_metadata } = post\r\n\r\n            title = title.toUpperCase()\r\n            faculty = faculty.toUpperCase()\r\n            domain = domain.toUpperCase()\r\n            localtitle = localtitle.toUpperCase()\r\n            localfaculty = localfaculty.toUpperCase()\r\n            localdomain = localdomain.toUpperCase() \r\n\r\n            if((title === localtitle)){\r\n              let len = Object.keys(chapters_list).length\r\n              let timeStamp = [];\r\n              let imgSrc;\r\n\r\n              for(let i=1;i<=len;i++){\r\n                let obj = chapters_list[i]\r\n                let startTime = obj[0]\r\n\r\n                let imageData = image_metadata[i]\r\n                let imagePath = imageData[0]\r\n                \r\n                let keywords = obj[1]\r\n\r\n                let obj2 = keyframes_text[i]\r\n                let endTime = obj2[1]\r\n                let startTimeSeconds = toSeconds(startTime)\r\n                let endTimeSeconds = toSeconds(endTime)\r\n\r\n                const colors = [ \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\", \"#800000\", \"#FFA500\", \"#FFFFF0\" ];\r\n\r\n                const newChunk = {\r\n                  start: startTimeSeconds,\r\n                  end: endTimeSeconds-1,\r\n                  //color: colors[Math.floor(Math.random() * colors.length)],\r\n                  color: \"gray\",\r\n                  topic: keywords\r\n                };\r\n                chunks.push(newChunk);\r\n\r\n                if(keywords === searchKeyword){\r\n                  imgSrc = imagePath\r\n                }\r\n\r\n                allKeywords.push(keywords)\r\n                keywords = keywords.toUpperCase()\r\n                \r\n                if(searchKeyword === '')\r\n                  return\r\n                if(keywords.includes(searchKeyword))\r\n                  timeStamp.push(startTime)\r\n              }\r\n              \r\n              return (<div>{displayTimeStamp(searchKeyword,timeStamp,imgSrc)}</div>)\r\n            }\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <div className=\"videoDetails-video\">\r\n      <video\r\n          ref={videoRef}\r\n          src={video_url}\r\n          onTimeUpdate={() => setCurrentTime(videoRef.current.currentTime)}\r\n          onDurationChange={handleDurationChange}\r\n          height={360}\r\n          controls\r\n        />\r\n\r\n        <ProgressBar\r\n          className=\"progressBar\"\r\n          duration={duration}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          chunks={chunks}\r\n        />\r\n      </div> \r\n\r\n      <div className=\"videoDetails-btn\">\r\n        <div className=\"keywords-container\">\r\n          <input id='inputVal' list=\"select-keyword\"/>\r\n\r\n          <datalist id='select-keyword' placeholder=\"Pick a keyword\">\r\n            <option id='option-keyword' value=\"\">Select a keyword</option>\r\n              { \r\n                allKeywords.get().sort().map((option, index) => {\r\n                  return <option key={index} > {option} </option>\r\n                })\r\n              }\r\n          </datalist >\r\n\r\n          <button className=\"videoDetails-searchBtn\" id=\"videoDetails-searchBtn\" onClick={handleSearch}>Search</button>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}