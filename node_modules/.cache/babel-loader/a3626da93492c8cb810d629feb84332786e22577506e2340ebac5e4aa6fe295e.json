{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\PieChart\\\\List.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  _s();\n  let searchData = props.searchData;\n  let jsonPath;\n  const [myData, setMyData] = useState([]);\n  const [myJsonData, setJsonData] = useState([]);\n  const [myAlllabel, setAllLabels] = useState(true);\n  const [mylabel, setLabels] = useState(null);\n  if (\"INDIA\".includes(searchData)) {\n    jsonPath = \"./india-cluster.json\";\n  } else if (\"PHYSICS\".includes(searchData)) {\n    jsonPath = \"./physics-cluster.json\";\n  } else if (\"LAW\".includes(searchData)) {\n    jsonPath = \"./law-cluster.json\";\n  }\n  useEffect(() => {\n    axios.get(jsonPath).then(res => setMyData(res.data));\n  }, [searchData]);\n  useEffect(() => {\n    axios.get('./india.json').then(res => setJsonData(res.data));\n  });\n  const handleListClick = (labels, documents) => {\n    setAllLabels(false);\n    setLabels(labels);\n  };\n  const displayVideoContent = (title, transcript, video_File_Name) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-content\",\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        title: title,\n        faculty: faculty,\n        domain: domain,\n        video_url: video_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoContent, {\n        title: title,\n        duration: duration,\n        faculty: faculty,\n        transcript: transcript,\n        newTranscript: newTranscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"listView\",\n      children: myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"list-btn\",\n              onClick: handleListClick.bind(this, labels, documents),\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: labels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), myAlllabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"list-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: myData.map(post => {\n          let {\n            labels,\n            documents\n          } = post;\n          labels = labels[0];\n          return documents.map((doc, i) => {\n            let title = doc.title;\n            //let content = doc.content\n            let transcript = doc.transcript;\n            let video_url = doc.video_url;\n            let videoFileName = './rbi/' + doc.video_File_Name + '.mp4';\n            let uniqueId = Math.floor(Math.random() * 50 + 1);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", displayVideoContent(title, transcript, videoFileName), \" \"]\n            }, uniqueId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                id: \"chart-title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: transcript\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                width: \"558\",\n                height: \"290\",\n                controls: true,\n                children: /*#__PURE__*/_jsxDEV(\"source\", {\n                  type: \"video/mp4\",\n                  src: videoFileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), mylabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"list-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: myData.map(post => {\n          let {\n            labels,\n            documents\n          } = post;\n          labels = labels[0];\n          if (mylabel === labels) {\n            return documents.map((doc, i) => {\n              let title = doc.title;\n              //let content = doc.content\n              let transcript = doc.transcript;\n              let videoFileName = doc.video_File_Name;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"chart-title\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: transcript\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this);\n            });\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"9exTJ2uSrbgLQpSCKF+hAojs82U=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","List","props","_s","searchData","jsonPath","myData","setMyData","myJsonData","setJsonData","myAlllabel","setAllLabels","mylabel","setLabels","includes","get","then","res","data","handleListClick","labels","documents","displayVideoContent","title","transcript","video_File_Name","className","children","Video","faculty","domain","video_url","fileName","_jsxFileName","lineNumber","columnNumber","VideoContent","duration","newTranscript","id","map","post","onClick","bind","doc","i","videoFileName","uniqueId","Math","floor","random","width","height","controls","type","src","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/PieChart/List.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\nfunction List(props) {\r\n  let searchData = props.searchData\r\n  let jsonPath\r\n  const [myData, setMyData] = useState([])\r\n  const [myJsonData, setJsonData] = useState([])\r\n  const [myAlllabel, setAllLabels] = useState(true)\r\n  const [mylabel, setLabels] = useState(null)\r\n\r\n  if (\"INDIA\".includes(searchData)) {\r\n    jsonPath = \"./india-cluster.json\"\r\n  } else if (\"PHYSICS\".includes(searchData)) {\r\n    jsonPath = \"./physics-cluster.json\"\r\n  } else if (\"LAW\".includes(searchData)) {\r\n    jsonPath = \"./law-cluster.json\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPath).then((res) => setMyData(res.data))\r\n  }, [searchData])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india.json').then((res) => setJsonData(res.data))\r\n  })\r\n\r\n  const handleListClick = (labels, documents) => {\r\n    setAllLabels(false)\r\n    setLabels(labels)\r\n  }\r\n\r\n  const displayVideoContent = (title,transcript,video_File_Name) => {\r\n    return (\r\n      <div className='videos-content'>\r\n        <Video title={title} faculty={faculty} domain={domain} video_url={video_url}/>\r\n        <VideoContent title={title} duration={duration} faculty={faculty} transcript={transcript} newTranscript={newTranscript}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"displayList\">\r\n      <div className=\"list-content\" id=\"listView\">\r\n        {myData.map((post) => {\r\n          let { labels, documents } = post\r\n\r\n          labels = labels[0]\r\n\r\n          return (\r\n            <div>\r\n              <div>\r\n                <button id=\"list-btn\" onClick={handleListClick.bind(this, labels, documents)}>\r\n                  <h4>{labels}</h4>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      {myAlllabel && (\r\n        <div className=\"list-content\" id=\"list-content\">\r\n          <div>\r\n            {myData.map((post) => {\r\n              let { labels, documents } = post\r\n\r\n              labels = labels[0]\r\n\r\n              return documents.map((doc, i) => {\r\n                let title = doc.title\r\n                //let content = doc.content\r\n                let transcript = doc.transcript\r\n                let video_url = doc.video_url\r\n                let videoFileName = './rbi/' + doc.video_File_Name + '.mp4'\r\n                let uniqueId = Math.floor((Math.random() * 50) + 1)\r\n                \r\n\r\n                return (<div key={uniqueId}> {displayVideoContent(title,transcript,videoFileName)} </div>)\r\n                return (\r\n                  <div>\r\n                    <h4 id=\"chart-title\">{title}</h4>\r\n                    <p>{transcript}</p>\r\n                    \r\n                    <video width=\"558\" height=\"290\" controls>\r\n                      <source type=\"video/mp4\" src={videoFileName}></source>\r\n                    </video>\r\n                  </div>\r\n                )\r\n              })\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {mylabel && (\r\n        <div className=\"list-content\" id=\"list-content\">\r\n          <div>\r\n            {myData.map((post) => {\r\n              let { labels, documents } = post\r\n\r\n              labels = labels[0]\r\n\r\n              if (mylabel === labels) {\r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  //let content = doc.content\r\n                  let transcript = doc.transcript\r\n                  let videoFileName = doc.video_File_Name\r\n                  \r\n                  return (\r\n                    <div>\r\n                      <h4 id=\"chart-title\">{title}</h4>\r\n                      <p>{transcript}</p>\r\n                      \r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}