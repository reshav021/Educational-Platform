{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\PieChart\\\\List.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  _s();\n  let searchData = props.searchData;\n  let jsonPath;\n  const [myData, setMyData] = useState([]);\n  const [myJsonData, setJsonData] = useState([]);\n  const [myAlllabel, setAllLabels] = useState(true);\n  const [mylabel, setLabels] = useState(null);\n  let uniqueId = Math.floor(Math.random() * 50 + 1);\n  if (\"INDIA\".includes(searchData)) {\n    jsonPath = \"./india-cluster.json\";\n  } else if (\"PHYSICS\".includes(searchData)) {\n    jsonPath = \"./physics-cluster.json\";\n  } else if (\"LAW\".includes(searchData)) {\n    jsonPath = \"./law-cluster.json\";\n  }\n  useEffect(() => {\n    axios.get(jsonPath).then(res => setMyData(res.data));\n  }, [searchData]);\n  useEffect(() => {\n    axios.get('./india.json').then(res => setJsonData(res.data));\n  });\n\n  //console.log(myJsonData)\n\n  const handleListClick = (labels, documents) => {\n    setAllLabels(false);\n    setLabels(labels);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"listView\",\n      children: myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"list-btn\",\n              onClick: handleListClick.bind(this, labels, documents),\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: labels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), myAlllabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"list-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: myData.map(post => {\n          let {\n            labels,\n            documents\n          } = post;\n          labels = labels[0];\n          return documents.map((doc, i) => {\n            let title = doc.title;\n            let content = doc.content;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                id: \"chart-title\",\n                children: [\" \", title, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), mylabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      id: \"list-content\",\n      children: myData.map(post => {\n        let {\n          labels,\n          documents\n        } = post;\n        labels = labels[0];\n        if (mylabel === labels) {\n          return documents.map((doc, i) => {\n            let title = doc.title;\n            let content = doc.content;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                id: \"chart-title\",\n                children: [\" \", title, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this);\n          });\n        }\n      })\n    }, uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, uniqueId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"9exTJ2uSrbgLQpSCKF+hAojs82U=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","List","props","_s","searchData","jsonPath","myData","setMyData","myJsonData","setJsonData","myAlllabel","setAllLabels","mylabel","setLabels","uniqueId","Math","floor","random","includes","get","then","res","data","handleListClick","labels","documents","className","children","id","map","post","onClick","bind","fileName","_jsxFileName","lineNumber","columnNumber","doc","i","title","content","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/PieChart/List.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\nfunction List(props) {\r\n  let searchData = props.searchData\r\n  let jsonPath\r\n  const [myData, setMyData] = useState([])\r\n  const [myJsonData, setJsonData] = useState([])\r\n  const [myAlllabel, setAllLabels] = useState(true)\r\n  const [mylabel, setLabels] = useState(null)\r\n  let uniqueId = Math.floor((Math.random() * 50) + 1);\r\n\r\n  if (\"INDIA\".includes(searchData)) {\r\n    jsonPath = \"./india-cluster.json\"\r\n  } else if (\"PHYSICS\".includes(searchData)) {\r\n    jsonPath = \"./physics-cluster.json\"\r\n  } else if (\"LAW\".includes(searchData)) {\r\n    jsonPath = \"./law-cluster.json\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(jsonPath).then((res) => setMyData(res.data))\r\n  }, [searchData])\r\n\r\n  useEffect(() => {\r\n    axios.get('./india.json').then((res) => setJsonData(res.data))\r\n  })\r\n\r\n  //console.log(myJsonData)\r\n\r\n  const handleListClick = (labels, documents) => {\r\n    setAllLabels(false)\r\n    setLabels(labels)\r\n  }\r\n\r\n  return (\r\n    <div key={uniqueId} className=\"displayList\">\r\n      <div key={uniqueId} className=\"list-content\" id=\"listView\">\r\n        {myData.map((post) => {\r\n          let { labels, documents } = post\r\n\r\n          labels = labels[0]\r\n\r\n          return (\r\n            <div>\r\n              <div>\r\n                <button id=\"list-btn\" onClick={handleListClick.bind(this, labels, documents)}>\r\n                  <h4>{labels}</h4>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      {myAlllabel && (\r\n        <div key={uniqueId} className=\"list-content\" id=\"list-content\">\r\n          <div>\r\n            {myData.map((post) => {\r\n              let { labels, documents } = post\r\n\r\n              labels = labels[0]\r\n\r\n              return documents.map((doc, i) => {\r\n                let title = doc.title\r\n                let content = doc.content\r\n\r\n                return (\r\n                  <div>\r\n                    <h4 id=\"chart-title\" key={i}> {title} </h4>\r\n                    <p key={i}>{content}</p>\r\n                  </div>\r\n                )\r\n              })\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {mylabel && (\r\n        <div key={uniqueId} className=\"list-content\" id=\"list-content\">\r\n            {myData.map((post) => {\r\n              let { labels, documents } = post\r\n\r\n              labels = labels[0]\r\n\r\n              if (mylabel === labels) {\r\n                return documents.map((doc, i) => {\r\n                  let title = doc.title\r\n                  let content = doc.content\r\n\r\n                  return (\r\n                    <div>\r\n                      <h4 id=\"chart-title\" key={i}> {title} </h4>\r\n                      <p key={i}>{content}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}