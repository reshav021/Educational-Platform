{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy2\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\Progressbar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Chunk from \"./Chunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = _ref => {\n  _s();\n  let {\n    duration,\n    onTimeUpdate,\n    chunks,\n    videotimeNow\n  } = _ref;\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progressTime, setProgressTime] = useState(0);\n  const [progressWidth, setProgressWidth] = useState(0);\n  const [exactProgress, setExactProgress] = useState(0);\n  const progressBarRef = useRef(null);\n  const progressBarWrapperRef = useRef(null);\n  let chunksToShow = [];\n  const uniqueTopics = chunks.reduce((acc, topic) => {\n    if (!acc[topic.topic]) {\n      acc[topic.topic] = {\n        ...topic\n      };\n    } else {\n      acc[topic.topic].end = topic.end;\n    }\n    return acc;\n  }, {});\n  chunks = Object.values(uniqueTopics).map(topic => ({\n    ...topic,\n    start: topic.start\n  }));\n  const handleProgressClick = event => {\n    event.preventDefault();\n    const progressBar = progressBarRef.current;\n    const progressClicked = event.clientX - progressBar.getBoundingClientRect().left;\n    const newTime = progressClicked / progressWidth * duration;\n    const newProgress = progressClicked / progressWidth * 100;\n    setProgressTime(progressClicked);\n    onTimeUpdate(newTime);\n    setExactProgress(newProgress);\n  };\n  const progress = exactProgress / 100 * duration;\n  chunks.forEach(chunk => {\n    const chunkClass = progress >= chunk.start && progress <= chunk.end ? \"chunk active\" : \"chunk\";\n    if (progress >= chunk.end) {\n      chunksToShow.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: chunkClass\n      }, `${chunk.start}-${chunk.end}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  useEffect(() => {\n    const progressBar = progressBarRef.current;\n    const handleTimeUpdate = () => {\n      setCurrentTime(progressBar.currentTime);\n    };\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\n  }, []);\n  useEffect(() => {\n    const progressBarWrapper = progressBarWrapperRef.current;\n    const handleResize = () => {\n      setProgressWidth(progressBarWrapper.offsetWidth);\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [progressBarWrapperRef]);\n  const renderChunks = () => {\n    return chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(Chunk, {\n      ...chunk,\n      duration: duration,\n      progress: progress\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar-wrapper\",\n    ref: progressBarWrapperRef,\n    onClick: handleProgressClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      ref: progressBarRef,\n      children: [renderChunks(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-thumb\",\n        style: {\n          left: `${videotimeNow}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"xu9TmOAYhDXuBIdLFJVxT5wNQTE=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Chunk","jsxDEV","_jsxDEV","ProgressBar","_ref","_s","duration","onTimeUpdate","chunks","videotimeNow","currentTime","setCurrentTime","progressTime","setProgressTime","progressWidth","setProgressWidth","exactProgress","setExactProgress","progressBarRef","progressBarWrapperRef","chunksToShow","uniqueTopics","reduce","acc","topic","end","Object","values","map","start","handleProgressClick","event","preventDefault","progressBar","current","progressClicked","clientX","getBoundingClientRect","left","newTime","newProgress","progress","forEach","chunk","chunkClass","push","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTimeUpdate","addEventListener","progressBarWrapper","handleResize","offsetWidth","window","removeEventListener","renderChunks","index","ref","onClick","children","style","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy2/my-app/src/Components/SubComponents/Progressbar/ProgressBar.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport Chunk from \"./Chunk\";\r\n\r\nconst ProgressBar = ({ duration, onTimeUpdate, chunks, videotimeNow }) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [progressTime, setProgressTime] = useState(0);\r\n  const [progressWidth, setProgressWidth] = useState(0);\r\n  const [exactProgress, setExactProgress] = useState(0);\r\n\r\n  const progressBarRef = useRef(null);\r\n  const progressBarWrapperRef = useRef(null);\r\n\r\n  let chunksToShow = [];\r\n\r\n  const uniqueTopics = chunks.reduce((acc, topic) => {\r\n    if (!acc[topic.topic]) {\r\n      acc[topic.topic] = { ...topic };\r\n    } else {\r\n      acc[topic.topic].end = topic.end;\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  chunks = Object.values(uniqueTopics).map((topic) => ({ ...topic, start: topic.start }));\r\n\r\n  const handleProgressClick = (event) => {\r\n    event.preventDefault();\r\n    const progressBar = progressBarRef.current;\r\n    const progressClicked = event.clientX - progressBar.getBoundingClientRect().left;\r\n    const newTime = (progressClicked / progressWidth) * duration;\r\n    const newProgress = (progressClicked / progressWidth) * 100;\r\n    setProgressTime(progressClicked);\r\n    onTimeUpdate(newTime);\r\n    setExactProgress(newProgress);\r\n  };\r\n\r\n  const progress = (exactProgress / 100) * duration;\r\n\r\n  chunks.forEach((chunk) => {\r\n    const chunkClass =\r\n      progress >= chunk.start && progress <= chunk.end ? \"chunk active\" : \"chunk\";\r\n\r\n    if (progress >= chunk.end) {\r\n      chunksToShow.push(\r\n        <div className={chunkClass} key={`${chunk.start}-${chunk.end}`} />\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const progressBar = progressBarRef.current;\r\n\r\n    const handleTimeUpdate = () => {\r\n      setCurrentTime(progressBar.currentTime);\r\n    };\r\n\r\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const progressBarWrapper = progressBarWrapperRef.current;\r\n    const handleResize = () => {\r\n      setProgressWidth(progressBarWrapper.offsetWidth);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [progressBarWrapperRef]);\r\n\r\n  const renderChunks = () => {\r\n    return chunks.map((chunk, index) => (\r\n      <Chunk\r\n        key={index}\r\n        {...chunk}\r\n        duration={duration}\r\n        progress={progress}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"progress-bar-wrapper\"\r\n      ref={progressBarWrapperRef}\r\n      onClick={handleProgressClick}\r\n    >\r\n      <div className=\"progress-bar\" ref={progressBarRef}>\r\n        {renderChunks()}\r\n        <div\r\n          className=\"progress-bar-thumb\"\r\n          style={{ left: `${videotimeNow}%` }}\r\n        />\r\n        {/* \r\n          <div className=\"exact-progress-bar\" style={{ width: `${exactProgress}%` }}>\r\n            <div className=\"exact-progress-bar-label\">\r\n              //{exactProgress.toFixed(2)}% \r\n              <div id='labelprogress-box'></div>\r\n            </div>\r\n          </div>\r\n        */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}