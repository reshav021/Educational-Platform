{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Makonis\\\\my-app-copy\\\\my-app\\\\src\\\\Components\\\\SubComponents\\\\Progressbar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Chunk from \"./Chunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressIndicator = styled.div`\n  position: absolute;\n  top: -5px;\n  left: ${props => `calc(${props.currentTime / props.duration * 100}% - 5px)`};\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: red;\n`;\n_c = ProgressIndicator;\nconst ProgressBarContainer = styled.div`\n  position: relative;\n  height: 4px;\n  background-color: #ddd;\n  cursor: pointer;\n`;\n_c2 = ProgressBarContainer;\nconst ProgressBar = _ref => {\n  _s();\n  let {\n    duration,\n    onTimeUpdate,\n    chunks\n  } = _ref;\n  const [currentTime, setCurrentTime] = useState(0);\n  const progressBarRef = useRef(null);\n  const handleProgressClick = event => {\n    const progressBar = progressBarRef.current;\n    const progressWidth = progressBar.offsetWidth;\n    const progressClicked = event.clientX - progressBar.getBoundingClientRect().left;\n    const newTime = progressClicked / progressWidth * duration;\n    onTimeUpdate(newTime);\n  };\n  const progress = currentTime / duration * 100;\n  let chunksToShow = [];\n  chunks.forEach(chunk => {\n    const chunkClass = progress >= chunk.start && progress <= chunk.end ? \"chunk active\" : \"chunk\";\n    if (progress >= chunk.end) {\n      chunksToShow.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: chunkClass\n      }, `${chunk.start}-${chunk.end}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  useEffect(() => {\n    const progressBar = progressBarRef.current;\n    const handleTimeUpdate = () => {\n      setCurrentTime(progressBar.currentTime);\n    };\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\n  }, []);\n  const renderChunks = () => {\n    return chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(Chunk, {\n      ...chunk,\n      duration: duration\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(ProgressBarContainer, {\n    ref: progressBarRef,\n    onClick: handleProgressClick,\n    children: [renderChunks(), /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      currentTime: currentTime,\n      duration: duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"QhvYtuGpkOCqSaKCggv48ZSd9BE=\");\n_c3 = ProgressBar;\nexport default ProgressBar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProgressIndicator\");\n$RefreshReg$(_c2, \"ProgressBarContainer\");\n$RefreshReg$(_c3, \"ProgressBar\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","Chunk","jsxDEV","_jsxDEV","ProgressIndicator","div","props","currentTime","duration","_c","ProgressBarContainer","_c2","ProgressBar","_ref","_s","onTimeUpdate","chunks","setCurrentTime","progressBarRef","handleProgressClick","event","progressBar","current","progressWidth","offsetWidth","progressClicked","clientX","getBoundingClientRect","left","newTime","progress","chunksToShow","forEach","chunk","chunkClass","start","end","push","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTimeUpdate","addEventListener","renderChunks","map","index","ref","onClick","children","_c3","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/Progressbar/ProgressBar.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Chunk from \"./Chunk\";\r\n\r\nconst ProgressIndicator = styled.div`\r\n  position: absolute;\r\n  top: -5px;\r\n  left: ${(props) => `calc(${(props.currentTime / props.duration) * 100}% - 5px)`};\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: red;\r\n`;\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  position: relative;\r\n  height: 4px;\r\n  background-color: #ddd;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProgressBar = ({ duration, onTimeUpdate, chunks }) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const progressBarRef = useRef(null);\r\n\r\n  const handleProgressClick = (event) => {\r\n    const progressBar = progressBarRef.current;\r\n    const progressWidth = progressBar.offsetWidth;\r\n    const progressClicked =\r\n      event.clientX - progressBar.getBoundingClientRect().left;\r\n    const newTime = (progressClicked / progressWidth) * duration;\r\n    onTimeUpdate(newTime);\r\n  };\r\n\r\n  const progress = (currentTime / duration) * 100;\r\n\r\n  let chunksToShow = [];\r\n\r\n  chunks.forEach((chunk) => {\r\n    const chunkClass =\r\n      progress >= chunk.start && progress <= chunk.end ? \"chunk active\" : \"chunk\";\r\n\r\n    if (progress >= chunk.end) {\r\n      chunksToShow.push(\r\n        <div className={chunkClass} key={`${chunk.start}-${chunk.end}`} />\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const progressBar = progressBarRef.current;\r\n\r\n    const handleTimeUpdate = () => {\r\n      setCurrentTime(progressBar.currentTime);\r\n    };\r\n\r\n    progressBar.addEventListener(\"timeupdate\", handleTimeUpdate);\r\n  }, []);\r\n\r\n  const renderChunks = () => {\r\n    return chunks.map((chunk, index) => (\r\n      <Chunk key={index} {...chunk} duration={duration} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <ProgressBarContainer ref={progressBarRef} onClick={handleProgressClick}>\r\n      {renderChunks()}\r\n      <ProgressIndicator currentTime={currentTime} duration={duration} />\r\n    </ProgressBarContainer>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}