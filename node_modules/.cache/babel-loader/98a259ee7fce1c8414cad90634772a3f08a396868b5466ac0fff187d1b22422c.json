{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useRef}from\"react\";import ProgressBar from\"./Progressbar/ProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DisplayVideo(props){var chunks=props.chunks;//const currentTime = props.currentTime\nvar duration=props.duration;var videoFileName=props.videoFileName;var videoRef=useRef(null);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var handleTimeUpdate=function handleTimeUpdate(newTime){videoRef.current.currentTime=newTime;setCurrentTime(newTime);};var toggleFullScreen=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var container,fullscreenApi;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:container=document.getElementById(\"video-chat-container\");fullscreenApi=container.requestFullscreen||container.webkitRequestFullScreen||container.mozRequestFullScreen||container.msRequestFullscreen;if(!document.fullscreenElement){fullscreenApi.call(container);}else{document.exitFullscreen();}case 3:case\"end\":return _context.stop();}},_callee);}));return function toggleFullScreen(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{class:\"p-3\",children:/*#__PURE__*/_jsx(\"div\",{class:\"row\",id:\"video-chat-container\",children:/*#__PURE__*/_jsx(\"div\",{class:\"col-7 col-md-9 mb-lg-0 mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"position-relative\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"ratio ratio-16x9\",children:[/*#__PURE__*/_jsx(\"video\",{id:\"video-player\",class:\"rounded rounded-3 bg-dark\",src:\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",controls:true,playsinline:true,muted:true}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,src:videoFileName,onTimeUpdate:function onTimeUpdate(){return setCurrentTime(videoRef.current.currentTime);},height:360,controls:true,id:\"video-player\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"top-overlay\",class:\"w-100 p-2 d-flex align-items-center justify-content-between\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"i\",{id:\"fullscreen-toggle-btn\",role:\"button\",class:\"bi bi-fullscreen text-white text-outline\",onClick:toggleFullScreen,children:[\"FullScreen\",/*#__PURE__*/_jsx(ProgressBar,{className:\"progressBar\",currentTime:currentTime,duration:duration,onTimeUpdate:handleTimeUpdate,chunks:chunks})]})})})]})})})});}export default DisplayVideo;/*\r\nimport React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  const fakeChat = () => {\r\n    const input = document.getElementById(\"chat-input\")\r\n    const chat = document.getElementById(\"chat\")\r\n    chat.innerHTML += `<div><b>Chat User</b>: ${input.value}</div>`\r\n    input.value = \"\"\r\n    input.focus()\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"bottom-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                Hello\r\n                <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-5 col-md-3 mb-lg-0 mb-3\">\r\n          <div id=\"chat-container\" class=\"vstack\">\r\n            <div\r\n              id=\"chat\"\r\n              class=\"rounded border border-secondary flex-grow-1 mb-3 p-3\"\r\n            ></div>\r\n            <div id=\"chat-input-container\" class=\"flex-grow input-group\">\r\n              <input\r\n                id=\"chat-input\"\r\n                class=\"form-control\"\r\n                placeholder=\"Message\"\r\n                maxlength=\"500\"\r\n                type=\"text\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id=\"submit-chat\"\r\n                class=\"btn btn-outline-secondary\"\r\n                onClick={fakeChat}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n*/","map":{"version":3,"names":["React","useEffect","useState","useRef","ProgressBar","jsx","_jsx","jsxs","_jsxs","DisplayVideo","props","chunks","duration","videoFileName","videoRef","_useState","_useState2","_slicedToArray","currentTime","setCurrentTime","handleTimeUpdate","newTime","current","toggleFullScreen","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","container","fullscreenApi","wrap","_callee$","_context","prev","next","document","getElementById","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","fullscreenElement","call","exitFullscreen","stop","apply","arguments","class","children","id","src","controls","playsinline","muted","ref","onTimeUpdate","height","role","onClick","className"],"sources":["C:/Users/reshav/Desktop/Makonis/my-app-copy/my-app/src/Components/SubComponents/DisplayVideo.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useEffect, useState, useRef } from \"react\"\r\nimport ProgressBar from \"./Progressbar/ProgressBar\"\r\n\r\nfunction DisplayVideo(props) {\r\n  const chunks = props.chunks\r\n  //const currentTime = props.currentTime\r\n  const duration = props.duration\r\n  const videoFileName = props.videoFileName\r\n  const videoRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const handleTimeUpdate = (newTime) => {\r\n    videoRef.current.currentTime = newTime\r\n    setCurrentTime(newTime)\r\n  }\r\n\r\n  const toggleFullScreen = async () => {\r\n    const container = document.getElementById(\"video-chat-container\")\r\n    const fullscreenApi =\r\n      container.requestFullscreen ||\r\n      container.webkitRequestFullScreen ||\r\n      container.mozRequestFullScreen ||\r\n      container.msRequestFullscreen\r\n    if (!document.fullscreenElement) {\r\n      fullscreenApi.call(container)\r\n    } else {\r\n      document.exitFullscreen()\r\n    }\r\n  }\r\n\r\n  const fakeChat = () => {\r\n    const input = document.getElementById(\"chat-input\")\r\n    const chat = document.getElementById(\"chat\")\r\n    chat.innerHTML += `<div><b>Chat User</b>: ${input.value}</div>`\r\n    input.value = \"\"\r\n    input.focus()\r\n  }\r\n\r\n  return (\r\n    <div class=\"p-3\">\r\n      <div class=\"row\" id=\"video-chat-container\">\r\n        <div class=\"col-7 col-md-9 mb-lg-0 mb-3\">\r\n          <div class=\"position-relative\">\r\n            <div class=\"ratio ratio-16x9\">\r\n              <video\r\n                id=\"video-player\"\r\n                class=\"rounded rounded-3 bg-dark\"\r\n                src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\r\n                controls\r\n                playsinline\r\n                muted\r\n              ></video>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                src={videoFileName}\r\n                onTimeUpdate={() =>\r\n                  setCurrentTime(videoRef.current.currentTime)\r\n                }\r\n                height={360}\r\n                controls\r\n                id=\"video-player\"\r\n              />\r\n            </div>\r\n            <div\r\n              id=\"top-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                <i\r\n                  id=\"fullscreen-toggle-btn\"\r\n                  role=\"button\"\r\n                  class=\"bi bi-fullscreen text-white text-outline\"\r\n                  onClick={toggleFullScreen}\r\n                >\r\n                  FullScreen\r\n                  <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n                </i>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"bottom-overlay\"\r\n              class=\"w-100 p-2 d-flex align-items-center justify-content-between\"\r\n            >\r\n              <div>\r\n                Hello\r\n                <ProgressBar\r\n                  className=\"progressBar\"\r\n                  currentTime={currentTime}\r\n                  duration={duration}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  chunks={chunks}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-5 col-md-3 mb-lg-0 mb-3\">\r\n          <div id=\"chat-container\" class=\"vstack\">\r\n            <div\r\n              id=\"chat\"\r\n              class=\"rounded border border-secondary flex-grow-1 mb-3 p-3\"\r\n            ></div>\r\n            <div id=\"chat-input-container\" class=\"flex-grow input-group\">\r\n              <input\r\n                id=\"chat-input\"\r\n                class=\"form-control\"\r\n                placeholder=\"Message\"\r\n                maxlength=\"500\"\r\n                type=\"text\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id=\"submit-chat\"\r\n                class=\"btn btn-outline-secondary\"\r\n                onClick={fakeChat}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayVideo\r\n\r\n*/"],"mappings":"waAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,WAAW,KAAM,2BAA2B,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CAC3B,GAAM,CAAAC,MAAM,CAAGD,KAAK,CAACC,MAAM,CAC3B;AACA,GAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACE,QAAQ,CAC/B,GAAM,CAAAC,aAAa,CAAGH,KAAK,CAACG,aAAa,CACzC,GAAM,CAAAC,QAAQ,CAAGX,MAAM,CAAC,IAAI,CAAC,CAC7B,IAAAY,SAAA,CAAsCb,QAAQ,CAAC,CAAC,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAElC,GAAM,CAAAI,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,OAAO,CAAK,CACpCP,QAAQ,CAACQ,OAAO,CAACJ,WAAW,CAAGG,OAAO,CACtCF,cAAc,CAACE,OAAO,CAAC,CACzB,CAAC,CAED,GAAM,CAAAE,gBAAgB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,SAAA,CAAAC,aAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACjBN,SAAS,CAAGO,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC,CAC3DP,aAAa,CACjBD,SAAS,CAACS,iBAAiB,EAC3BT,SAAS,CAACU,uBAAuB,EACjCV,SAAS,CAACW,oBAAoB,EAC9BX,SAAS,CAACY,mBAAmB,CAC/B,GAAI,CAACL,QAAQ,CAACM,iBAAiB,CAAE,CAC/BZ,aAAa,CAACa,IAAI,CAACd,SAAS,CAAC,CAC/B,CAAC,IAAM,CACLO,QAAQ,CAACQ,cAAc,EAAE,CAC3B,CAAC,wBAAAX,QAAA,CAAAY,IAAA,MAAAjB,OAAA,GACF,kBAZK,CAAAL,gBAAgBA,CAAA,SAAAC,IAAA,CAAAsB,KAAA,MAAAC,SAAA,OAYrB,CAED,mBACEzC,IAAA,QAAK0C,KAAK,CAAC,KAAK,CAAAC,QAAA,cACd3C,IAAA,QAAK0C,KAAK,CAAC,KAAK,CAACE,EAAE,CAAC,sBAAsB,CAAAD,QAAA,cACxC3C,IAAA,QAAK0C,KAAK,CAAC,6BAA6B,CAAAC,QAAA,cACtCzC,KAAA,QAAKwC,KAAK,CAAC,mBAAmB,CAAAC,QAAA,eAC5BzC,KAAA,QAAKwC,KAAK,CAAC,kBAAkB,CAAAC,QAAA,eAC3B3C,IAAA,UACE4C,EAAE,CAAC,cAAc,CACjBF,KAAK,CAAC,2BAA2B,CACjCG,GAAG,CAAC,mFAAmF,CACvFC,QAAQ,MACRC,WAAW,MACXC,KAAK,OACE,cAEThD,IAAA,UACEiD,GAAG,CAAEzC,QAAS,CACdqC,GAAG,CAAEtC,aAAc,CACnB2C,YAAY,CAAE,SAAAA,aAAA,QACZ,CAAArC,cAAc,CAACL,QAAQ,CAACQ,OAAO,CAACJ,WAAW,CAAC,EAC7C,CACDuC,MAAM,CAAE,GAAI,CACZL,QAAQ,MACRF,EAAE,CAAC,cAAc,EACjB,GACE,cACN5C,IAAA,QACE4C,EAAE,CAAC,aAAa,CAChBF,KAAK,CAAC,6DAA6D,CAAAC,QAAA,cAEnE3C,IAAA,QAAA2C,QAAA,cACEzC,KAAA,MACE0C,EAAE,CAAC,uBAAuB,CAC1BQ,IAAI,CAAC,QAAQ,CACbV,KAAK,CAAC,0CAA0C,CAChDW,OAAO,CAAEpC,gBAAiB,CAAA0B,QAAA,EAC3B,YAEC,cAAA3C,IAAA,CAACF,WAAW,EACZwD,SAAS,CAAC,aAAa,CACvB1C,WAAW,CAAEA,WAAY,CACzBN,QAAQ,CAAEA,QAAS,CACnB4C,YAAY,CAAEpC,gBAAiB,CAC/BT,MAAM,CAAEA,MAAO,EACf,GACE,EACA,EACF,GACF,EACF,EACF,EACF,CAEV,CAEA,cAAe,CAAAF,YAAY,CAY3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}