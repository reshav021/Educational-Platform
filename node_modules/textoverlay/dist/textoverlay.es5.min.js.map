{"version":3,"sources":["webpack://Textoverlay/webpack/universalModuleDefinition","webpack://Textoverlay/webpack/bootstrap","webpack://Textoverlay/./textoverlay.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","css","backdrop","box-sizing","position","margin","overlay","border-color","border-style","color","white-space","word-wrap","overflow","textarea","background","properties","Textoverlay","strategies","_this","this","_classCallCheck","overlayPositioner","parentElement","Error","textareaStyle","getComputedStyle","document","createElement","className","setStyle","copyTextareaStyle","insertBefore","syncStyles","textareaStyleWas","keys","forEach","style","getPropertyValue","addEventListener","handleInput","handleScroll","observer","MutationObserver","observe","attributes","attributeFilter","resizeListener","render","removeEventListener","disconnect","remove","arguments","length","undefined","updateOverlayNodes","_this2","innerHTML","display","appendChild","computeOverlayNodes","node","top","offsetTop","left","offsetLeft","height","offsetHeight","width","clientWidth","parseInt","borderLeftWidth","borderRightWidth","textareaScrollTop","scrollTop","textareaZIndex","zIndex","setOverlayScroll","marginTop","reduce","strategy","highlight","result","nodeType","Node","TEXT_NODE","text","textContent","prevIndex","match","lastIndex","exec","push","createTextNode","slice","str","textBetweenMatches","span","cloneNode","target","_this3","setProperty","element"],"mappings":"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","file":"textoverlay.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\n\nconst css = {\n  backdrop: {\n    'box-sizing': 'border-box',\n    'position': 'absolute',\n    'margin': '0px',\n  },\n  overlay: {\n    'box-sizing': 'border-box',\n    'border-color': 'transparent',\n    'border-style': 'solid',\n    'color': 'transparent',\n    'position': 'absolute',\n    'white-space': 'pre-wrap',\n    'word-wrap': 'break-word',\n    'overflow': 'hidden',\n    'margin': '0px',\n  },\n  textarea: {\n    background: 'transparent',\n  },\n};\n\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nconst properties = {\n  background: [\n    'background-attachment',\n    'background-blend-mode',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-position-x',\n    'background-position-y',\n    'background-repeat',\n    'background-size',\n  ],\n  overlay: [\n    'font-family',\n    'font-size',\n    'font-weight',\n    'line-height',\n    'padding-top',\n    'padding-right',\n    'padding-bottom',\n    'padding-left',\n    'border-top-width',\n    'border-right-width',\n    'border-bottom-width',\n    'border-left-width',\n  ],\n};\n\nexport interface Strategy {\n  match: Matcher;\n  css: CssStyle;\n}\n\n// A matcher can be a RegExp or a RegExp-like object.\nexport interface Matcher {\n  lastIndex: number;\n  exec: (input: string) => null | [string] | RegExpExecArray;\n}\n\n// Can't use `keyof CSSStyleDeclaration` because it only has camelCase keys.\nexport interface CssStyle {\n  [cssProperty: string]: string;\n}\n\nexport default class Textoverlay {\n  public strategies: Strategy[];\n  public readonly backdrop: HTMLDivElement;\n  public readonly overlay: HTMLDivElement;\n  public readonly textarea: HTMLTextAreaElement;\n  private overlayPositioner: HTMLDivElement|null = null;\n  private textareaStyle: CSSStyleDeclaration;\n  private textareaStyleWas: CssStyle;\n  private observer: MutationObserver;\n  private resizeListener: () => void;\n\n  constructor(textarea: HTMLTextAreaElement, strategies: Strategy[]) {\n    if (textarea.parentElement === null) {\n      throw new Error('textarea must be in the DOM tree');\n    }\n    this.textarea = textarea;\n    this.textareaStyle = window.getComputedStyle(textarea);\n\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = 'textoverlay-backdrop';\n    setStyle(this.backdrop, css.backdrop);\n    this.copyTextareaStyle(this.backdrop, properties.background);\n    this.textarea.parentElement!.insertBefore(this.backdrop, this.textarea);\n\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'textoverlay';\n    setStyle(this.overlay, css.overlay);\n    this.copyTextareaStyle(this.overlay, properties.overlay);\n    this.textarea.parentElement!.insertBefore(this.overlay, this.textarea);\n\n    this.syncStyles();\n\n    this.textareaStyleWas = {};\n    Object.keys(css.textarea).forEach((key) => {\n      this.textareaStyleWas[key] = this.textarea.style.getPropertyValue(key);\n    });\n    setStyle(this.textarea, css.textarea);\n\n    this.strategies = strategies;\n    this.textarea.addEventListener('input', () => {\n      this.handleInput();\n    });\n    this.textarea.addEventListener('scroll', () => {\n      this.handleScroll();\n    });\n    this.observer = new MutationObserver(() => {\n      this.syncStyles();\n    });\n    this.observer.observe(this.textarea, {\n      attributes: true,\n      attributeFilter: ['style'],\n    });\n    // Listen to resize to detect changes in the element offset position.\n    this.resizeListener = () => {\n      this.syncStyles();\n    };\n    window.addEventListener('resize', this.resizeListener);\n    this.render();\n  }\n\n  public destroy() {\n    window.removeEventListener('resize', this.resizeListener);\n    this.textarea.removeEventListener('input', this.handleInput);\n    this.textarea.removeEventListener('scroll', this.handleScroll);\n    this.observer.disconnect();\n    this.overlay.remove();\n    this.backdrop.remove();\n    setStyle(this.textarea, this.textareaStyleWas);\n  }\n\n  /**\n   * Public API to update and sync textoverlay\n   */\n  public render(skipUpdate: boolean = false) {\n    if (!skipUpdate) {\n      this.updateOverlayNodes();\n    }\n    this.syncStyles();\n  }\n\n  private updateOverlayNodes() {\n    // Remove all child nodes from overlay.\n    this.overlay.innerHTML = '';\n    this.overlayPositioner = document.createElement('div');\n    this.overlayPositioner.className = 'textoverlay-positioner';\n    this.overlayPositioner.style.display = 'block';\n    this.overlay.appendChild(this.overlayPositioner);\n    this.computeOverlayNodes().forEach((node) => {\n      this.overlay.appendChild(node);\n    });\n  }\n\n  private syncStyles() {\n    // All the reads must happen before all the writes to prevent layout\n    // thrashing, because every write means all subsequenet reads' caches are\n    // invalidated.\n    const top = this.textarea.offsetTop;\n    const left = this.textarea.offsetLeft;\n    const height = this.textarea.offsetHeight;\n    // We must use `clientWidth` as we need to exclude the potential vertical\n    // scrollbar. `clientWidth` includes paddings but not borders.\n    const width = this.textarea.clientWidth +\n        parseInt(this.textareaStyle.borderLeftWidth || '0', 10) +\n        parseInt(this.textareaStyle.borderRightWidth || '0', 10);\n    const textareaScrollTop = this.textarea.scrollTop;\n    const textareaZIndex = this.textareaStyle.zIndex !== null &&\n            this.textareaStyle.zIndex !== 'auto' ?\n        +this.textareaStyle.zIndex :\n        0;\n\n    // Writes:\n    this.backdrop.style.zIndex = `${textareaZIndex - 2}`;\n    this.overlay.style.zIndex = `${textareaZIndex - 1}`;\n    this.backdrop.style.left = this.overlay.style.left = `${left}px`;\n    this.backdrop.style.top = this.overlay.style.top = `${top}px`;\n    this.backdrop.style.height = this.overlay.style.height = `${height}px`;\n    this.backdrop.style.width = this.overlay.style.width = `${width}px`;\n    this.setOverlayScroll(textareaScrollTop);\n  }\n\n  private setOverlayScroll(textareaScrollTop: number) {\n    if (this.overlayPositioner !== null) {\n      this.overlayPositioner.style.marginTop = `-${textareaScrollTop}px`;\n    }\n  }\n\n  private computeOverlayNodes(): Node[] {\n    return this.strategies.reduce((ns: Node[], strategy) => {\n      const highlight = document.createElement('span');\n      setStyle(highlight, strategy.css);\n      const result: Node[] = [];\n      ns.forEach((node) => {\n        if (node.nodeType !== Node.TEXT_NODE) {\n          result.push(node);\n          return;\n        }\n        const text = node.textContent || '';\n        while (true) {\n          const prevIndex = strategy.match.lastIndex;\n          const match = strategy.match.exec(text);\n          if (!match) {\n            if (prevIndex === 0) {\n              if (text) {\n                result.push(node);\n              }\n            } else if (prevIndex < text.length) {\n              result.push(document.createTextNode(text.slice(prevIndex)));\n            }\n            break;\n          }\n          const str = match[0];\n          const textBetweenMatches =\n              text.slice(prevIndex, strategy.match.lastIndex - str.length);\n          if (textBetweenMatches) {\n            result.push(document.createTextNode(textBetweenMatches));\n          }\n          if (str) {\n            const span = highlight.cloneNode(false);\n            span.textContent = str;\n            result.push(span);\n          }\n        }\n      });\n      return result;\n    }, [document.createTextNode(this.textarea.value)]);\n  }\n\n  private handleInput() {\n    this.render();\n  }\n\n  private handleScroll() {\n    this.setOverlayScroll(this.textarea.scrollTop);\n  }\n\n  private copyTextareaStyle(target: HTMLElement, keys: string[]) {\n    keys.forEach((key) => {\n      target.style.setProperty(key, this.textareaStyle.getPropertyValue(key));\n    });\n  }\n}\n\n/**\n * Set style to the element.\n */\nfunction setStyle(element: HTMLElement, style: CssStyle) {\n  Object.keys(style).forEach((key) => {\n    element.style.setProperty(key, style[key]);\n  });\n}\n"],"sourceRoot":""}